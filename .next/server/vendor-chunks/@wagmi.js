"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@wagmi";
exports.ids = ["vendor-chunks/@wagmi"];
exports.modules = {

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/connect.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connect: () => (/* binding */ connect)\n/* harmony export */ });\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n\n/** https://wagmi.sh/core/api/actions/connect */ async function connect(config, parameters) {\n    // \"Register\" connector if not already created\n    let connector;\n    if (typeof parameters.connector === \"function\") {\n        connector = config._internal.connectors.setup(parameters.connector);\n    } else connector = parameters.connector;\n    // Check if connector is already connected\n    if (connector.uid === config.state.current) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorAlreadyConnectedError();\n    try {\n        config.setState((x)=>({\n                ...x,\n                status: \"connecting\"\n            }));\n        connector.emitter.emit(\"message\", {\n            type: \"connecting\"\n        });\n        const { connector: _, ...rest } = parameters;\n        const data = await connector.connect(rest);\n        const accounts = data.accounts;\n        connector.emitter.off(\"connect\", config._internal.events.connect);\n        connector.emitter.on(\"change\", config._internal.events.change);\n        connector.emitter.on(\"disconnect\", config._internal.events.disconnect);\n        await config.storage?.setItem(\"recentConnectorId\", connector.id);\n        config.setState((x)=>({\n                ...x,\n                connections: new Map(x.connections).set(connector.uid, {\n                    accounts,\n                    chainId: data.chainId,\n                    connector: connector\n                }),\n                current: connector.uid,\n                status: \"connected\"\n            }));\n        return {\n            accounts,\n            chainId: data.chainId\n        };\n    } catch (error) {\n        config.setState((x)=>({\n                ...x,\n                // Keep existing connector connected in case of error\n                status: x.current ? \"connected\" : \"disconnected\"\n            }));\n        throw error;\n    }\n} //# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9jb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFO0FBQ3RFLDhDQUE4QyxHQUN2QyxlQUFlQyxRQUFRQyxNQUFNLEVBQUVDLFVBQVU7SUFDNUMsOENBQThDO0lBQzlDLElBQUlDO0lBQ0osSUFBSSxPQUFPRCxXQUFXQyxTQUFTLEtBQUssWUFBWTtRQUM1Q0EsWUFBWUYsT0FBT0csU0FBUyxDQUFDQyxVQUFVLENBQUNDLEtBQUssQ0FBQ0osV0FBV0MsU0FBUztJQUN0RSxPQUVJQSxZQUFZRCxXQUFXQyxTQUFTO0lBQ3BDLDBDQUEwQztJQUMxQyxJQUFJQSxVQUFVSSxHQUFHLEtBQUtOLE9BQU9PLEtBQUssQ0FBQ0MsT0FBTyxFQUN0QyxNQUFNLElBQUlWLDZFQUE4QkE7SUFDNUMsSUFBSTtRQUNBRSxPQUFPUyxRQUFRLENBQUMsQ0FBQ0MsSUFBTztnQkFBRSxHQUFHQSxDQUFDO2dCQUFFQyxRQUFRO1lBQWE7UUFDckRULFVBQVVVLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLFdBQVc7WUFBRUMsTUFBTTtRQUFhO1FBQ3ZELE1BQU0sRUFBRVosV0FBV2EsQ0FBQyxFQUFFLEdBQUdDLE1BQU0sR0FBR2Y7UUFDbEMsTUFBTWdCLE9BQU8sTUFBTWYsVUFBVUgsT0FBTyxDQUFDaUI7UUFDckMsTUFBTUUsV0FBV0QsS0FBS0MsUUFBUTtRQUM5QmhCLFVBQVVVLE9BQU8sQ0FBQ08sR0FBRyxDQUFDLFdBQVduQixPQUFPRyxTQUFTLENBQUNpQixNQUFNLENBQUNyQixPQUFPO1FBQ2hFRyxVQUFVVSxPQUFPLENBQUNTLEVBQUUsQ0FBQyxVQUFVckIsT0FBT0csU0FBUyxDQUFDaUIsTUFBTSxDQUFDRSxNQUFNO1FBQzdEcEIsVUFBVVUsT0FBTyxDQUFDUyxFQUFFLENBQUMsY0FBY3JCLE9BQU9HLFNBQVMsQ0FBQ2lCLE1BQU0sQ0FBQ0csVUFBVTtRQUNyRSxNQUFNdkIsT0FBT3dCLE9BQU8sRUFBRUMsUUFBUSxxQkFBcUJ2QixVQUFVd0IsRUFBRTtRQUMvRDFCLE9BQU9TLFFBQVEsQ0FBQyxDQUFDQyxJQUFPO2dCQUNwQixHQUFHQSxDQUFDO2dCQUNKaUIsYUFBYSxJQUFJQyxJQUFJbEIsRUFBRWlCLFdBQVcsRUFBRUUsR0FBRyxDQUFDM0IsVUFBVUksR0FBRyxFQUFFO29CQUNuRFk7b0JBQ0FZLFNBQVNiLEtBQUthLE9BQU87b0JBQ3JCNUIsV0FBV0E7Z0JBQ2Y7Z0JBQ0FNLFNBQVNOLFVBQVVJLEdBQUc7Z0JBQ3RCSyxRQUFRO1lBQ1o7UUFDQSxPQUFPO1lBQUVPO1lBQVVZLFNBQVNiLEtBQUthLE9BQU87UUFBQztJQUM3QyxFQUNBLE9BQU9DLE9BQU87UUFDVi9CLE9BQU9TLFFBQVEsQ0FBQyxDQUFDQyxJQUFPO2dCQUNwQixHQUFHQSxDQUFDO2dCQUNKLHFEQUFxRDtnQkFDckRDLFFBQVFELEVBQUVGLE9BQU8sR0FBRyxjQUFjO1lBQ3RDO1FBQ0EsTUFBTXVCO0lBQ1Y7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9jb25uZWN0LmpzPzU1M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy9jb25maWcuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9jb25uZWN0ICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29ubmVjdChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICAvLyBcIlJlZ2lzdGVyXCIgY29ubmVjdG9yIGlmIG5vdCBhbHJlYWR5IGNyZWF0ZWRcbiAgICBsZXQgY29ubmVjdG9yO1xuICAgIGlmICh0eXBlb2YgcGFyYW1ldGVycy5jb25uZWN0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29ubmVjdG9yID0gY29uZmlnLl9pbnRlcm5hbC5jb25uZWN0b3JzLnNldHVwKHBhcmFtZXRlcnMuY29ubmVjdG9yKTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICBjb25uZWN0b3IgPSBwYXJhbWV0ZXJzLmNvbm5lY3RvcjtcbiAgICAvLyBDaGVjayBpZiBjb25uZWN0b3IgaXMgYWxyZWFkeSBjb25uZWN0ZWRcbiAgICBpZiAoY29ubmVjdG9yLnVpZCA9PT0gY29uZmlnLnN0YXRlLmN1cnJlbnQpXG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IoKTtcbiAgICB0cnkge1xuICAgICAgICBjb25maWcuc2V0U3RhdGUoKHgpID0+ICh7IC4uLngsIHN0YXR1czogJ2Nvbm5lY3RpbmcnIH0pKTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIuZW1pdCgnbWVzc2FnZScsIHsgdHlwZTogJ2Nvbm5lY3RpbmcnIH0pO1xuICAgICAgICBjb25zdCB7IGNvbm5lY3RvcjogXywgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGNvbm5lY3Rvci5jb25uZWN0KHJlc3QpO1xuICAgICAgICBjb25zdCBhY2NvdW50cyA9IGRhdGEuYWNjb3VudHM7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9mZignY29ubmVjdCcsIGNvbmZpZy5faW50ZXJuYWwuZXZlbnRzLmNvbm5lY3QpO1xuICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vbignY2hhbmdlJywgY29uZmlnLl9pbnRlcm5hbC5ldmVudHMuY2hhbmdlKTtcbiAgICAgICAgY29ubmVjdG9yLmVtaXR0ZXIub24oJ2Rpc2Nvbm5lY3QnLCBjb25maWcuX2ludGVybmFsLmV2ZW50cy5kaXNjb25uZWN0KTtcbiAgICAgICAgYXdhaXQgY29uZmlnLnN0b3JhZ2U/LnNldEl0ZW0oJ3JlY2VudENvbm5lY3RvcklkJywgY29ubmVjdG9yLmlkKTtcbiAgICAgICAgY29uZmlnLnNldFN0YXRlKCh4KSA9PiAoe1xuICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgIGNvbm5lY3Rpb25zOiBuZXcgTWFwKHguY29ubmVjdGlvbnMpLnNldChjb25uZWN0b3IudWlkLCB7XG4gICAgICAgICAgICAgICAgYWNjb3VudHMsXG4gICAgICAgICAgICAgICAgY2hhaW5JZDogZGF0YS5jaGFpbklkLFxuICAgICAgICAgICAgICAgIGNvbm5lY3RvcjogY29ubmVjdG9yLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBjdXJyZW50OiBjb25uZWN0b3IudWlkLFxuICAgICAgICAgICAgc3RhdHVzOiAnY29ubmVjdGVkJyxcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4geyBhY2NvdW50cywgY2hhaW5JZDogZGF0YS5jaGFpbklkIH07XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25maWcuc2V0U3RhdGUoKHgpID0+ICh7XG4gICAgICAgICAgICAuLi54LFxuICAgICAgICAgICAgLy8gS2VlcCBleGlzdGluZyBjb25uZWN0b3IgY29ubmVjdGVkIGluIGNhc2Ugb2YgZXJyb3JcbiAgICAgICAgICAgIHN0YXR1czogeC5jdXJyZW50ID8gJ2Nvbm5lY3RlZCcgOiAnZGlzY29ubmVjdGVkJyxcbiAgICAgICAgfSkpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25uZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IiLCJjb25uZWN0IiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNvbm5lY3RvciIsIl9pbnRlcm5hbCIsImNvbm5lY3RvcnMiLCJzZXR1cCIsInVpZCIsInN0YXRlIiwiY3VycmVudCIsInNldFN0YXRlIiwieCIsInN0YXR1cyIsImVtaXR0ZXIiLCJlbWl0IiwidHlwZSIsIl8iLCJyZXN0IiwiZGF0YSIsImFjY291bnRzIiwib2ZmIiwiZXZlbnRzIiwib24iLCJjaGFuZ2UiLCJkaXNjb25uZWN0Iiwic3RvcmFnZSIsInNldEl0ZW0iLCJpZCIsImNvbm5lY3Rpb25zIiwiTWFwIiwic2V0IiwiY2hhaW5JZCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/connect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/disconnect.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disconnect: () => (/* binding */ disconnect)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/disconnect */ async function disconnect(config, parameters = {}) {\n    let connector;\n    if (parameters.connector) connector = parameters.connector;\n    else {\n        const { connections, current } = config.state;\n        const connection = connections.get(current);\n        connector = connection?.connector;\n    }\n    const connections = config.state.connections;\n    if (connector) {\n        await connector.disconnect();\n        connector.emitter.off(\"change\", config._internal.events.change);\n        connector.emitter.off(\"disconnect\", config._internal.events.disconnect);\n        connector.emitter.on(\"connect\", config._internal.events.connect);\n        connections.delete(connector.uid);\n    }\n    config.setState((x)=>{\n        // if no connections exist, move to disconnected state\n        if (connections.size === 0) return {\n            ...x,\n            connections: new Map(),\n            current: null,\n            status: \"disconnected\"\n        };\n        // switch over to another connection\n        const nextConnection = connections.values().next().value;\n        return {\n            ...x,\n            connections: new Map(connections),\n            current: nextConnection.connector.uid\n        };\n    });\n    // Set recent connector if exists\n    {\n        const current = config.state.current;\n        if (!current) return;\n        const connector = config.state.connections.get(current)?.connector;\n        if (!connector) return;\n        await config.storage?.setItem(\"recentConnectorId\", connector.id);\n    }\n} //# sourceMappingURL=disconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9kaXNjb25uZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsZUFBZUEsV0FBV0MsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUNwRCxJQUFJQztJQUNKLElBQUlELFdBQVdDLFNBQVMsRUFDcEJBLFlBQVlELFdBQVdDLFNBQVM7U0FDL0I7UUFDRCxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsT0FBTyxFQUFFLEdBQUdKLE9BQU9LLEtBQUs7UUFDN0MsTUFBTUMsYUFBYUgsWUFBWUksR0FBRyxDQUFDSDtRQUNuQ0YsWUFBWUksWUFBWUo7SUFDNUI7SUFDQSxNQUFNQyxjQUFjSCxPQUFPSyxLQUFLLENBQUNGLFdBQVc7SUFDNUMsSUFBSUQsV0FBVztRQUNYLE1BQU1BLFVBQVVILFVBQVU7UUFDMUJHLFVBQVVNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVVULE9BQU9VLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxNQUFNO1FBQzlEVixVQUFVTSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjVCxPQUFPVSxTQUFTLENBQUNDLE1BQU0sQ0FBQ1osVUFBVTtRQUN0RUcsVUFBVU0sT0FBTyxDQUFDSyxFQUFFLENBQUMsV0FBV2IsT0FBT1UsU0FBUyxDQUFDQyxNQUFNLENBQUNHLE9BQU87UUFDL0RYLFlBQVlZLE1BQU0sQ0FBQ2IsVUFBVWMsR0FBRztJQUNwQztJQUNBaEIsT0FBT2lCLFFBQVEsQ0FBQyxDQUFDQztRQUNiLHNEQUFzRDtRQUN0RCxJQUFJZixZQUFZZ0IsSUFBSSxLQUFLLEdBQ3JCLE9BQU87WUFDSCxHQUFHRCxDQUFDO1lBQ0pmLGFBQWEsSUFBSWlCO1lBQ2pCaEIsU0FBUztZQUNUaUIsUUFBUTtRQUNaO1FBQ0osb0NBQW9DO1FBQ3BDLE1BQU1DLGlCQUFpQm5CLFlBQVlvQixNQUFNLEdBQUdDLElBQUksR0FBR0MsS0FBSztRQUN4RCxPQUFPO1lBQ0gsR0FBR1AsQ0FBQztZQUNKZixhQUFhLElBQUlpQixJQUFJakI7WUFDckJDLFNBQVNrQixlQUFlcEIsU0FBUyxDQUFDYyxHQUFHO1FBQ3pDO0lBQ0o7SUFDQSxpQ0FBaUM7SUFDakM7UUFDSSxNQUFNWixVQUFVSixPQUFPSyxLQUFLLENBQUNELE9BQU87UUFDcEMsSUFBSSxDQUFDQSxTQUNEO1FBQ0osTUFBTUYsWUFBWUYsT0FBT0ssS0FBSyxDQUFDRixXQUFXLENBQUNJLEdBQUcsQ0FBQ0gsVUFBVUY7UUFDekQsSUFBSSxDQUFDQSxXQUNEO1FBQ0osTUFBTUYsT0FBTzBCLE9BQU8sRUFBRUMsUUFBUSxxQkFBcUJ6QixVQUFVMEIsRUFBRTtJQUNuRTtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2Rpc2Nvbm5lY3QuanM/ZjhhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2Rpc2Nvbm5lY3QgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkaXNjb25uZWN0KGNvbmZpZywgcGFyYW1ldGVycyA9IHt9KSB7XG4gICAgbGV0IGNvbm5lY3RvcjtcbiAgICBpZiAocGFyYW1ldGVycy5jb25uZWN0b3IpXG4gICAgICAgIGNvbm5lY3RvciA9IHBhcmFtZXRlcnMuY29ubmVjdG9yO1xuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCB7IGNvbm5lY3Rpb25zLCBjdXJyZW50IH0gPSBjb25maWcuc3RhdGU7XG4gICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBjb25uZWN0aW9ucy5nZXQoY3VycmVudCk7XG4gICAgICAgIGNvbm5lY3RvciA9IGNvbm5lY3Rpb24/LmNvbm5lY3RvcjtcbiAgICB9XG4gICAgY29uc3QgY29ubmVjdGlvbnMgPSBjb25maWcuc3RhdGUuY29ubmVjdGlvbnM7XG4gICAgaWYgKGNvbm5lY3Rvcikge1xuICAgICAgICBhd2FpdCBjb25uZWN0b3IuZGlzY29ubmVjdCgpO1xuICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vZmYoJ2NoYW5nZScsIGNvbmZpZy5faW50ZXJuYWwuZXZlbnRzLmNoYW5nZSk7XG4gICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9mZignZGlzY29ubmVjdCcsIGNvbmZpZy5faW50ZXJuYWwuZXZlbnRzLmRpc2Nvbm5lY3QpO1xuICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vbignY29ubmVjdCcsIGNvbmZpZy5faW50ZXJuYWwuZXZlbnRzLmNvbm5lY3QpO1xuICAgICAgICBjb25uZWN0aW9ucy5kZWxldGUoY29ubmVjdG9yLnVpZCk7XG4gICAgfVxuICAgIGNvbmZpZy5zZXRTdGF0ZSgoeCkgPT4ge1xuICAgICAgICAvLyBpZiBubyBjb25uZWN0aW9ucyBleGlzdCwgbW92ZSB0byBkaXNjb25uZWN0ZWQgc3RhdGVcbiAgICAgICAgaWYgKGNvbm5lY3Rpb25zLnNpemUgPT09IDApXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLngsXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoKSxcbiAgICAgICAgICAgICAgICBjdXJyZW50OiBudWxsLFxuICAgICAgICAgICAgICAgIHN0YXR1czogJ2Rpc2Nvbm5lY3RlZCcsXG4gICAgICAgICAgICB9O1xuICAgICAgICAvLyBzd2l0Y2ggb3ZlciB0byBhbm90aGVyIGNvbm5lY3Rpb25cbiAgICAgICAgY29uc3QgbmV4dENvbm5lY3Rpb24gPSBjb25uZWN0aW9ucy52YWx1ZXMoKS5uZXh0KCkudmFsdWU7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi54LFxuICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoY29ubmVjdGlvbnMpLFxuICAgICAgICAgICAgY3VycmVudDogbmV4dENvbm5lY3Rpb24uY29ubmVjdG9yLnVpZCxcbiAgICAgICAgfTtcbiAgICB9KTtcbiAgICAvLyBTZXQgcmVjZW50IGNvbm5lY3RvciBpZiBleGlzdHNcbiAgICB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnQgPSBjb25maWcuc3RhdGUuY3VycmVudDtcbiAgICAgICAgaWYgKCFjdXJyZW50KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBjb25uZWN0b3IgPSBjb25maWcuc3RhdGUuY29ubmVjdGlvbnMuZ2V0KGN1cnJlbnQpPy5jb25uZWN0b3I7XG4gICAgICAgIGlmICghY29ubmVjdG9yKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBhd2FpdCBjb25maWcuc3RvcmFnZT8uc2V0SXRlbSgncmVjZW50Q29ubmVjdG9ySWQnLCBjb25uZWN0b3IuaWQpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpc2Nvbm5lY3QuanMubWFwIl0sIm5hbWVzIjpbImRpc2Nvbm5lY3QiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY29ubmVjdG9yIiwiY29ubmVjdGlvbnMiLCJjdXJyZW50Iiwic3RhdGUiLCJjb25uZWN0aW9uIiwiZ2V0IiwiZW1pdHRlciIsIm9mZiIsIl9pbnRlcm5hbCIsImV2ZW50cyIsImNoYW5nZSIsIm9uIiwiY29ubmVjdCIsImRlbGV0ZSIsInVpZCIsInNldFN0YXRlIiwieCIsInNpemUiLCJNYXAiLCJzdGF0dXMiLCJuZXh0Q29ubmVjdGlvbiIsInZhbHVlcyIsIm5leHQiLCJ2YWx1ZSIsInN0b3JhZ2UiLCJzZXRJdGVtIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/disconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/estimateGas.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/estimateGas.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   estimateGas: () => (/* binding */ estimateGas)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/estimateGas.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/estimateGas */ async function estimateGas(config, parameters) {\n    const { chainId, connector, ...rest } = parameters;\n    let account;\n    if (parameters.account) account = parameters.account;\n    else {\n        const connectorClient = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n            account: parameters.account,\n            chainId,\n            connector\n        });\n        account = connectorClient.account;\n    }\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.estimateGas, \"estimateGas\");\n    return action({\n        ...rest,\n        account\n    });\n} //# sourceMappingURL=estimateGas.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9lc3RpbWF0ZUdhcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdFO0FBQ2Q7QUFDWTtBQUM5RCxrREFBa0QsR0FDM0MsZUFBZUEsWUFBWUksTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUN4QyxJQUFJSTtJQUNKLElBQUlKLFdBQVdJLE9BQU8sRUFDbEJBLFVBQVVKLFdBQVdJLE9BQU87U0FDM0I7UUFDRCxNQUFNQyxrQkFBa0IsTUFBTVAsMEVBQWtCQSxDQUFDQyxRQUFRO1lBQ3JESyxTQUFTSixXQUFXSSxPQUFPO1lBQzNCSDtZQUNBQztRQUNKO1FBQ0FFLFVBQVVDLGdCQUFnQkQsT0FBTztJQUNyQztJQUNBLE1BQU1FLFNBQVNQLE9BQU9RLFNBQVMsQ0FBQztRQUFFTjtJQUFRO0lBQzFDLE1BQU1PLFNBQVNYLDhEQUFTQSxDQUFDUyxRQUFRVixxREFBZ0JBLEVBQUU7SUFDbkQsT0FBT1ksT0FBTztRQUFFLEdBQUdMLElBQUk7UUFBRUM7SUFBUTtBQUNyQyxFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9lc3RpbWF0ZUdhcy5qcz9mNDFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVzdGltYXRlR2FzIGFzIHZpZW1fZXN0aW1hdGVHYXMsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG5pbXBvcnQgeyBnZXRDb25uZWN0b3JDbGllbnQsIH0gZnJvbSAnLi9nZXRDb25uZWN0b3JDbGllbnQuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9lc3RpbWF0ZUdhcyAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVzdGltYXRlR2FzKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgY29ubmVjdG9yLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGxldCBhY2NvdW50O1xuICAgIGlmIChwYXJhbWV0ZXJzLmFjY291bnQpXG4gICAgICAgIGFjY291bnQgPSBwYXJhbWV0ZXJzLmFjY291bnQ7XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3RvckNsaWVudCA9IGF3YWl0IGdldENvbm5lY3RvckNsaWVudChjb25maWcsIHtcbiAgICAgICAgICAgIGFjY291bnQ6IHBhcmFtZXRlcnMuYWNjb3VudCxcbiAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgICAgICBjb25uZWN0b3IsXG4gICAgICAgIH0pO1xuICAgICAgICBhY2NvdW50ID0gY29ubmVjdG9yQ2xpZW50LmFjY291bnQ7XG4gICAgfVxuICAgIGNvbnN0IGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbihjbGllbnQsIHZpZW1fZXN0aW1hdGVHYXMsICdlc3RpbWF0ZUdhcycpO1xuICAgIHJldHVybiBhY3Rpb24oeyAuLi5yZXN0LCBhY2NvdW50IH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXN0aW1hdGVHYXMuanMubWFwIl0sIm5hbWVzIjpbImVzdGltYXRlR2FzIiwidmllbV9lc3RpbWF0ZUdhcyIsImdldEFjdGlvbiIsImdldENvbm5lY3RvckNsaWVudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJjaGFpbklkIiwiY29ubmVjdG9yIiwicmVzdCIsImFjY291bnQiLCJjb25uZWN0b3JDbGllbnQiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/estimateGas.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getAccount.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccount: () => (/* binding */ getAccount)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/getAccount */ function getAccount(config) {\n    const uid = config.state.current;\n    const connection = config.state.connections.get(uid);\n    const addresses = connection?.accounts;\n    const address = addresses?.[0];\n    const chain = config.chains.find((chain)=>chain.id === connection?.chainId);\n    const status = config.state.status;\n    switch(status){\n        case \"connected\":\n            return {\n                address: address,\n                addresses: addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: true,\n                isConnecting: false,\n                isDisconnected: false,\n                isReconnecting: false,\n                status\n            };\n        case \"reconnecting\":\n            return {\n                address,\n                addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: !!address,\n                isConnecting: false,\n                isDisconnected: false,\n                isReconnecting: true,\n                status\n            };\n        case \"connecting\":\n            return {\n                address,\n                addresses,\n                chain,\n                chainId: connection?.chainId,\n                connector: connection?.connector,\n                isConnected: false,\n                isConnecting: true,\n                isDisconnected: false,\n                isReconnecting: false,\n                status\n            };\n        case \"disconnected\":\n            return {\n                address: undefined,\n                addresses: undefined,\n                chain: undefined,\n                chainId: undefined,\n                connector: undefined,\n                isConnected: false,\n                isConnecting: false,\n                isDisconnected: true,\n                isReconnecting: false,\n                status\n            };\n    }\n} //# sourceMappingURL=getAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRBY2NvdW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpREFBaUQsR0FDMUMsU0FBU0EsV0FBV0MsTUFBTTtJQUM3QixNQUFNQyxNQUFNRCxPQUFPRSxLQUFLLENBQUNDLE9BQU87SUFDaEMsTUFBTUMsYUFBYUosT0FBT0UsS0FBSyxDQUFDRyxXQUFXLENBQUNDLEdBQUcsQ0FBQ0w7SUFDaEQsTUFBTU0sWUFBWUgsWUFBWUk7SUFDOUIsTUFBTUMsVUFBVUYsV0FBVyxDQUFDLEVBQUU7SUFDOUIsTUFBTUcsUUFBUVYsT0FBT1csTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQ0YsUUFBVUEsTUFBTUcsRUFBRSxLQUFLVCxZQUFZVTtJQUNyRSxNQUFNQyxTQUFTZixPQUFPRSxLQUFLLENBQUNhLE1BQU07SUFDbEMsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztnQkFDSE4sU0FBU0E7Z0JBQ1RGLFdBQVdBO2dCQUNYRztnQkFDQUksU0FBU1YsWUFBWVU7Z0JBQ3JCRSxXQUFXWixZQUFZWTtnQkFDdkJDLGFBQWE7Z0JBQ2JDLGNBQWM7Z0JBQ2RDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtnQkFDaEJMO1lBQ0o7UUFDSixLQUFLO1lBQ0QsT0FBTztnQkFDSE47Z0JBQ0FGO2dCQUNBRztnQkFDQUksU0FBU1YsWUFBWVU7Z0JBQ3JCRSxXQUFXWixZQUFZWTtnQkFDdkJDLGFBQWEsQ0FBQyxDQUFDUjtnQkFDZlMsY0FBYztnQkFDZEMsZ0JBQWdCO2dCQUNoQkMsZ0JBQWdCO2dCQUNoQkw7WUFDSjtRQUNKLEtBQUs7WUFDRCxPQUFPO2dCQUNITjtnQkFDQUY7Z0JBQ0FHO2dCQUNBSSxTQUFTVixZQUFZVTtnQkFDckJFLFdBQVdaLFlBQVlZO2dCQUN2QkMsYUFBYTtnQkFDYkMsY0FBYztnQkFDZEMsZ0JBQWdCO2dCQUNoQkMsZ0JBQWdCO2dCQUNoQkw7WUFDSjtRQUNKLEtBQUs7WUFDRCxPQUFPO2dCQUNITixTQUFTWTtnQkFDVGQsV0FBV2M7Z0JBQ1hYLE9BQU9XO2dCQUNQUCxTQUFTTztnQkFDVEwsV0FBV0s7Z0JBQ1hKLGFBQWE7Z0JBQ2JDLGNBQWM7Z0JBQ2RDLGdCQUFnQjtnQkFDaEJDLGdCQUFnQjtnQkFDaEJMO1lBQ0o7SUFDUjtBQUNKLEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldEFjY291bnQuanM/YWIxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldEFjY291bnQgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBY2NvdW50KGNvbmZpZykge1xuICAgIGNvbnN0IHVpZCA9IGNvbmZpZy5zdGF0ZS5jdXJyZW50O1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBjb25maWcuc3RhdGUuY29ubmVjdGlvbnMuZ2V0KHVpZCk7XG4gICAgY29uc3QgYWRkcmVzc2VzID0gY29ubmVjdGlvbj8uYWNjb3VudHM7XG4gICAgY29uc3QgYWRkcmVzcyA9IGFkZHJlc3Nlcz8uWzBdO1xuICAgIGNvbnN0IGNoYWluID0gY29uZmlnLmNoYWlucy5maW5kKChjaGFpbikgPT4gY2hhaW4uaWQgPT09IGNvbm5lY3Rpb24/LmNoYWluSWQpO1xuICAgIGNvbnN0IHN0YXR1cyA9IGNvbmZpZy5zdGF0ZS5zdGF0dXM7XG4gICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgICAgY2FzZSAnY29ubmVjdGVkJzpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBhZGRyZXNzZXM6IGFkZHJlc3NlcyxcbiAgICAgICAgICAgICAgICBjaGFpbixcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBjb25uZWN0aW9uPy5jaGFpbklkLFxuICAgICAgICAgICAgICAgIGNvbm5lY3RvcjogY29ubmVjdGlvbj8uY29ubmVjdG9yLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNEaXNjb25uZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzUmVjb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgICAgICB9O1xuICAgICAgICBjYXNlICdyZWNvbm5lY3RpbmcnOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgICAgICAgIGFkZHJlc3NlcyxcbiAgICAgICAgICAgICAgICBjaGFpbixcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBjb25uZWN0aW9uPy5jaGFpbklkLFxuICAgICAgICAgICAgICAgIGNvbm5lY3RvcjogY29ubmVjdGlvbj8uY29ubmVjdG9yLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiAhIWFkZHJlc3MsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc0Rpc2Nvbm5lY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNSZWNvbm5lY3Rpbmc6IHRydWUsXG4gICAgICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSAnY29ubmVjdGluZyc6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGFkZHJlc3MsXG4gICAgICAgICAgICAgICAgYWRkcmVzc2VzLFxuICAgICAgICAgICAgICAgIGNoYWluLFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IGNvbm5lY3Rpb24/LmNoYWluSWQsXG4gICAgICAgICAgICAgICAgY29ubmVjdG9yOiBjb25uZWN0aW9uPy5jb25uZWN0b3IsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzQ29ubmVjdGluZzogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpc0Rpc2Nvbm5lY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNSZWNvbm5lY3Rpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN0YXR1cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgJ2Rpc2Nvbm5lY3RlZCc6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGFkZHJlc3M6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBhZGRyZXNzZXM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBjaGFpbjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBjb25uZWN0b3I6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNDb25uZWN0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc0Rpc2Nvbm5lY3RlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpc1JlY29ubmVjdGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRBY2NvdW50IiwiY29uZmlnIiwidWlkIiwic3RhdGUiLCJjdXJyZW50IiwiY29ubmVjdGlvbiIsImNvbm5lY3Rpb25zIiwiZ2V0IiwiYWRkcmVzc2VzIiwiYWNjb3VudHMiLCJhZGRyZXNzIiwiY2hhaW4iLCJjaGFpbnMiLCJmaW5kIiwiaWQiLCJjaGFpbklkIiwic3RhdHVzIiwiY29ubmVjdG9yIiwiaXNDb25uZWN0ZWQiLCJpc0Nvbm5lY3RpbmciLCJpc0Rpc2Nvbm5lY3RlZCIsImlzUmVjb25uZWN0aW5nIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getBalance.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBalance: () => (/* binding */ getBalance)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/data/trim.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/unit/formatUnits.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getBalance.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _utils_getUnit_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getUnit.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js\");\n/* harmony import */ var _readContracts_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./readContracts.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js\");\n\n\n\n\n\n/** https://wagmi.sh/core/api/actions/getBalance */ async function getBalance(config, parameters) {\n    const { address, blockNumber, blockTag, chainId, token: tokenAddress, unit = \"ether\" } = parameters;\n    if (tokenAddress) {\n        try {\n            return await getTokenBalance(config, {\n                balanceAddress: address,\n                chainId,\n                symbolType: \"string\",\n                tokenAddress\n            });\n        } catch (error) {\n            // In the chance that there is an error upon decoding the contract result,\n            // it could be likely that the contract data is represented as bytes32 instead\n            // of a string.\n            if (error.name === \"ContractFunctionExecutionError\") {\n                const balance = await getTokenBalance(config, {\n                    balanceAddress: address,\n                    chainId,\n                    symbolType: \"bytes32\",\n                    tokenAddress\n                });\n                const symbol = (0,viem__WEBPACK_IMPORTED_MODULE_0__.hexToString)((0,viem__WEBPACK_IMPORTED_MODULE_1__.trim)(balance.symbol, {\n                    dir: \"right\"\n                }));\n                return {\n                    ...balance,\n                    symbol\n                };\n            }\n            throw error;\n        }\n    }\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_2__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_3__.getBalance, \"getBalance\");\n    const value = await action(blockNumber ? {\n        address,\n        blockNumber\n    } : {\n        address,\n        blockTag\n    });\n    const chain = config.chains.find((x)=>x.id === chainId) ?? client.chain;\n    return {\n        decimals: chain.nativeCurrency.decimals,\n        formatted: (0,viem__WEBPACK_IMPORTED_MODULE_4__.formatUnits)(value, (0,_utils_getUnit_js__WEBPACK_IMPORTED_MODULE_5__.getUnit)(unit)),\n        symbol: chain.nativeCurrency.symbol,\n        value\n    };\n}\nasync function getTokenBalance(config, parameters) {\n    const { balanceAddress, chainId, symbolType, tokenAddress, unit } = parameters;\n    const contract = {\n        abi: [\n            {\n                type: \"function\",\n                name: \"balanceOf\",\n                stateMutability: \"view\",\n                inputs: [\n                    {\n                        type: \"address\"\n                    }\n                ],\n                outputs: [\n                    {\n                        type: \"uint256\"\n                    }\n                ]\n            },\n            {\n                type: \"function\",\n                name: \"decimals\",\n                stateMutability: \"view\",\n                inputs: [],\n                outputs: [\n                    {\n                        type: \"uint8\"\n                    }\n                ]\n            },\n            {\n                type: \"function\",\n                name: \"symbol\",\n                stateMutability: \"view\",\n                inputs: [],\n                outputs: [\n                    {\n                        type: symbolType\n                    }\n                ]\n            }\n        ],\n        address: tokenAddress\n    };\n    const [value, decimals, symbol] = await (0,_readContracts_js__WEBPACK_IMPORTED_MODULE_6__.readContracts)(config, {\n        allowFailure: false,\n        contracts: [\n            {\n                ...contract,\n                functionName: \"balanceOf\",\n                args: [\n                    balanceAddress\n                ],\n                chainId\n            },\n            {\n                ...contract,\n                functionName: \"decimals\",\n                chainId\n            },\n            {\n                ...contract,\n                functionName: \"symbol\",\n                chainId\n            }\n        ]\n    });\n    const formatted = (0,viem__WEBPACK_IMPORTED_MODULE_4__.formatUnits)(value ?? \"0\", (0,_utils_getUnit_js__WEBPACK_IMPORTED_MODULE_5__.getUnit)(unit ?? decimals));\n    return {\n        decimals,\n        formatted,\n        symbol,\n        value\n    };\n} //# sourceMappingURL=getBalance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getBalance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getConnectorClient: () => (/* binding */ getConnectorClient)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/custom.js\");\n/* harmony import */ var viem_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/utils */ \"(ssr)/./node_modules/viem/_esm/accounts/utils/parseAccount.js\");\n/* harmony import */ var viem_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/utils */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/getConnectorClient */ async function getConnectorClient(config, parameters = {}) {\n    // Get connection\n    let connection;\n    if (parameters.connector) {\n        const { connector } = parameters;\n        if (config.state.status === \"reconnecting\" && !connector.getAccounts && !connector.getChainId) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorUnavailableReconnectingError({\n            connector\n        });\n        const [accounts, chainId] = await Promise.all([\n            connector.getAccounts().catch((e)=>{\n                if (parameters.account === null) return [];\n                throw e;\n            }),\n            connector.getChainId()\n        ]);\n        connection = {\n            accounts: accounts,\n            chainId,\n            connector\n        };\n    } else connection = config.state.connections.get(config.state.current);\n    if (!connection) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorNotConnectedError();\n    const chainId = parameters.chainId ?? connection.chainId;\n    // Check connector using same chainId as connection\n    const connectorChainId = await connection.connector.getChainId();\n    if (connectorChainId !== connection.chainId) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorChainMismatchError({\n        connectionChainId: connection.chainId,\n        connectorChainId\n    });\n    const connector = connection.connector;\n    if (connector.getClient) return connector.getClient({\n        chainId\n    });\n    // Default using `custom` transport\n    const account = (0,viem_utils__WEBPACK_IMPORTED_MODULE_1__.parseAccount)(parameters.account ?? connection.accounts[0]);\n    if (account) account.address = (0,viem_utils__WEBPACK_IMPORTED_MODULE_2__.getAddress)(account.address); // TODO: Checksum address as part of `parseAccount`?\n    // If account was provided, check that it exists on the connector\n    if (parameters.account && !connection.accounts.some((x)=>x.toLowerCase() === account.address.toLowerCase())) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_0__.ConnectorAccountNotFoundError({\n        address: account.address,\n        connector\n    });\n    const chain = config.chains.find((chain)=>chain.id === chainId);\n    const provider = await connection.connector.getProvider({\n        chainId\n    });\n    return (0,viem__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n        account,\n        chain,\n        name: \"Connector Client\",\n        transport: (opts)=>(0,viem__WEBPACK_IMPORTED_MODULE_4__.custom)(provider)({\n                ...opts,\n                retryCount: 0\n            })\n    });\n} //# sourceMappingURL=getConnectorClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRDb25uZWN0b3JDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ1M7QUFDK0c7QUFDcksseURBQXlELEdBQ2xELGVBQWVRLG1CQUFtQkMsTUFBTSxFQUFFQyxhQUFhLENBQUMsQ0FBQztJQUM1RCxpQkFBaUI7SUFDakIsSUFBSUM7SUFDSixJQUFJRCxXQUFXRSxTQUFTLEVBQUU7UUFDdEIsTUFBTSxFQUFFQSxTQUFTLEVBQUUsR0FBR0Y7UUFDdEIsSUFBSUQsT0FBT0ksS0FBSyxDQUFDQyxNQUFNLEtBQUssa0JBQ3hCLENBQUNGLFVBQVVHLFdBQVcsSUFDdEIsQ0FBQ0gsVUFBVUksVUFBVSxFQUNyQixNQUFNLElBQUlULG9GQUFxQ0EsQ0FBQztZQUFFSztRQUFVO1FBQ2hFLE1BQU0sQ0FBQ0ssVUFBVUMsUUFBUSxHQUFHLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztZQUMxQ1IsVUFBVUcsV0FBVyxHQUFHTSxLQUFLLENBQUMsQ0FBQ0M7Z0JBQzNCLElBQUlaLFdBQVdhLE9BQU8sS0FBSyxNQUN2QixPQUFPLEVBQUU7Z0JBQ2IsTUFBTUQ7WUFDVjtZQUNBVixVQUFVSSxVQUFVO1NBQ3ZCO1FBQ0RMLGFBQWE7WUFDVE0sVUFBVUE7WUFDVkM7WUFDQU47UUFDSjtJQUNKLE9BRUlELGFBQWFGLE9BQU9JLEtBQUssQ0FBQ1csV0FBVyxDQUFDQyxHQUFHLENBQUNoQixPQUFPSSxLQUFLLENBQUNhLE9BQU87SUFDbEUsSUFBSSxDQUFDZixZQUNELE1BQU0sSUFBSUwseUVBQTBCQTtJQUN4QyxNQUFNWSxVQUFVUixXQUFXUSxPQUFPLElBQUlQLFdBQVdPLE9BQU87SUFDeEQsbURBQW1EO0lBQ25ELE1BQU1TLG1CQUFtQixNQUFNaEIsV0FBV0MsU0FBUyxDQUFDSSxVQUFVO0lBQzlELElBQUlXLHFCQUFxQmhCLFdBQVdPLE9BQU8sRUFDdkMsTUFBTSxJQUFJYiwwRUFBMkJBLENBQUM7UUFDbEN1QixtQkFBbUJqQixXQUFXTyxPQUFPO1FBQ3JDUztJQUNKO0lBQ0osTUFBTWYsWUFBWUQsV0FBV0MsU0FBUztJQUN0QyxJQUFJQSxVQUFVaUIsU0FBUyxFQUNuQixPQUFPakIsVUFBVWlCLFNBQVMsQ0FBQztRQUFFWDtJQUFRO0lBQ3pDLG1DQUFtQztJQUNuQyxNQUFNSyxVQUFVcEIsd0RBQVlBLENBQUNPLFdBQVdhLE9BQU8sSUFBSVosV0FBV00sUUFBUSxDQUFDLEVBQUU7SUFDekUsSUFBSU0sU0FDQUEsUUFBUU8sT0FBTyxHQUFHNUIsc0RBQVVBLENBQUNxQixRQUFRTyxPQUFPLEdBQUcsb0RBQW9EO0lBQ3ZHLGlFQUFpRTtJQUNqRSxJQUFJcEIsV0FBV2EsT0FBTyxJQUNsQixDQUFDWixXQUFXTSxRQUFRLENBQUNjLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxXQUFXLE9BQU9WLFFBQVFPLE9BQU8sQ0FBQ0csV0FBVyxLQUNoRixNQUFNLElBQUk3Qiw0RUFBNkJBLENBQUM7UUFDcEMwQixTQUFTUCxRQUFRTyxPQUFPO1FBQ3hCbEI7SUFDSjtJQUNKLE1BQU1zQixRQUFRekIsT0FBTzBCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNGLFFBQVVBLE1BQU1HLEVBQUUsS0FBS25CO0lBQ3pELE1BQU1vQixXQUFZLE1BQU0zQixXQUFXQyxTQUFTLENBQUMyQixXQUFXLENBQUM7UUFBRXJCO0lBQVE7SUFDbkUsT0FBT2xCLGtEQUFZQSxDQUFDO1FBQ2hCdUI7UUFDQVc7UUFDQU0sTUFBTTtRQUNOQyxXQUFXLENBQUNDLE9BQVN6Qyw0Q0FBTUEsQ0FBQ3FDLFVBQVU7Z0JBQUUsR0FBR0ksSUFBSTtnQkFBRUMsWUFBWTtZQUFFO0lBQ25FO0FBQ0osRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0Q29ubmVjdG9yQ2xpZW50LmpzPzdiMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50LCBjdXN0b20sIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyBnZXRBZGRyZXNzLCBwYXJzZUFjY291bnQgfSBmcm9tICd2aWVtL3V0aWxzJztcbmltcG9ydCB7IENvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yLCBDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3IsIENvbm5lY3Rvck5vdENvbm5lY3RlZEVycm9yLCBDb25uZWN0b3JVbmF2YWlsYWJsZVJlY29ubmVjdGluZ0Vycm9yLCB9IGZyb20gJy4uL2Vycm9ycy9jb25maWcuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRDb25uZWN0b3JDbGllbnQgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDb25uZWN0b3JDbGllbnQoY29uZmlnLCBwYXJhbWV0ZXJzID0ge30pIHtcbiAgICAvLyBHZXQgY29ubmVjdGlvblxuICAgIGxldCBjb25uZWN0aW9uO1xuICAgIGlmIChwYXJhbWV0ZXJzLmNvbm5lY3Rvcikge1xuICAgICAgICBjb25zdCB7IGNvbm5lY3RvciB9ID0gcGFyYW1ldGVycztcbiAgICAgICAgaWYgKGNvbmZpZy5zdGF0ZS5zdGF0dXMgPT09ICdyZWNvbm5lY3RpbmcnICYmXG4gICAgICAgICAgICAhY29ubmVjdG9yLmdldEFjY291bnRzICYmXG4gICAgICAgICAgICAhY29ubmVjdG9yLmdldENoYWluSWQpXG4gICAgICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yVW5hdmFpbGFibGVSZWNvbm5lY3RpbmdFcnJvcih7IGNvbm5lY3RvciB9KTtcbiAgICAgICAgY29uc3QgW2FjY291bnRzLCBjaGFpbklkXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgIGNvbm5lY3Rvci5nZXRBY2NvdW50cygpLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHBhcmFtZXRlcnMuYWNjb3VudCA9PT0gbnVsbClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGNvbm5lY3Rvci5nZXRDaGFpbklkKCksXG4gICAgICAgIF0pO1xuICAgICAgICBjb25uZWN0aW9uID0ge1xuICAgICAgICAgICAgYWNjb3VudHM6IGFjY291bnRzLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZVxuICAgICAgICBjb25uZWN0aW9uID0gY29uZmlnLnN0YXRlLmNvbm5lY3Rpb25zLmdldChjb25maWcuc3RhdGUuY3VycmVudCk7XG4gICAgaWYgKCFjb25uZWN0aW9uKVxuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yTm90Q29ubmVjdGVkRXJyb3IoKTtcbiAgICBjb25zdCBjaGFpbklkID0gcGFyYW1ldGVycy5jaGFpbklkID8/IGNvbm5lY3Rpb24uY2hhaW5JZDtcbiAgICAvLyBDaGVjayBjb25uZWN0b3IgdXNpbmcgc2FtZSBjaGFpbklkIGFzIGNvbm5lY3Rpb25cbiAgICBjb25zdCBjb25uZWN0b3JDaGFpbklkID0gYXdhaXQgY29ubmVjdGlvbi5jb25uZWN0b3IuZ2V0Q2hhaW5JZCgpO1xuICAgIGlmIChjb25uZWN0b3JDaGFpbklkICE9PSBjb25uZWN0aW9uLmNoYWluSWQpXG4gICAgICAgIHRocm93IG5ldyBDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgY29ubmVjdGlvbkNoYWluSWQ6IGNvbm5lY3Rpb24uY2hhaW5JZCxcbiAgICAgICAgICAgIGNvbm5lY3RvckNoYWluSWQsXG4gICAgICAgIH0pO1xuICAgIGNvbnN0IGNvbm5lY3RvciA9IGNvbm5lY3Rpb24uY29ubmVjdG9yO1xuICAgIGlmIChjb25uZWN0b3IuZ2V0Q2xpZW50KVxuICAgICAgICByZXR1cm4gY29ubmVjdG9yLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgLy8gRGVmYXVsdCB1c2luZyBgY3VzdG9tYCB0cmFuc3BvcnRcbiAgICBjb25zdCBhY2NvdW50ID0gcGFyc2VBY2NvdW50KHBhcmFtZXRlcnMuYWNjb3VudCA/PyBjb25uZWN0aW9uLmFjY291bnRzWzBdKTtcbiAgICBpZiAoYWNjb3VudClcbiAgICAgICAgYWNjb3VudC5hZGRyZXNzID0gZ2V0QWRkcmVzcyhhY2NvdW50LmFkZHJlc3MpOyAvLyBUT0RPOiBDaGVja3N1bSBhZGRyZXNzIGFzIHBhcnQgb2YgYHBhcnNlQWNjb3VudGA/XG4gICAgLy8gSWYgYWNjb3VudCB3YXMgcHJvdmlkZWQsIGNoZWNrIHRoYXQgaXQgZXhpc3RzIG9uIHRoZSBjb25uZWN0b3JcbiAgICBpZiAocGFyYW1ldGVycy5hY2NvdW50ICYmXG4gICAgICAgICFjb25uZWN0aW9uLmFjY291bnRzLnNvbWUoKHgpID0+IHgudG9Mb3dlckNhc2UoKSA9PT0gYWNjb3VudC5hZGRyZXNzLnRvTG93ZXJDYXNlKCkpKVxuICAgICAgICB0aHJvdyBuZXcgQ29ubmVjdG9yQWNjb3VudE5vdEZvdW5kRXJyb3Ioe1xuICAgICAgICAgICAgYWRkcmVzczogYWNjb3VudC5hZGRyZXNzLFxuICAgICAgICAgICAgY29ubmVjdG9yLFxuICAgICAgICB9KTtcbiAgICBjb25zdCBjaGFpbiA9IGNvbmZpZy5jaGFpbnMuZmluZCgoY2hhaW4pID0+IGNoYWluLmlkID09PSBjaGFpbklkKTtcbiAgICBjb25zdCBwcm92aWRlciA9IChhd2FpdCBjb25uZWN0aW9uLmNvbm5lY3Rvci5nZXRQcm92aWRlcih7IGNoYWluSWQgfSkpO1xuICAgIHJldHVybiBjcmVhdGVDbGllbnQoe1xuICAgICAgICBhY2NvdW50LFxuICAgICAgICBjaGFpbixcbiAgICAgICAgbmFtZTogJ0Nvbm5lY3RvciBDbGllbnQnLFxuICAgICAgICB0cmFuc3BvcnQ6IChvcHRzKSA9PiBjdXN0b20ocHJvdmlkZXIpKHsgLi4ub3B0cywgcmV0cnlDb3VudDogMCB9KSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldENvbm5lY3RvckNsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50IiwiY3VzdG9tIiwiZ2V0QWRkcmVzcyIsInBhcnNlQWNjb3VudCIsIkNvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yIiwiQ29ubmVjdG9yQ2hhaW5NaXNtYXRjaEVycm9yIiwiQ29ubmVjdG9yTm90Q29ubmVjdGVkRXJyb3IiLCJDb25uZWN0b3JVbmF2YWlsYWJsZVJlY29ubmVjdGluZ0Vycm9yIiwiZ2V0Q29ubmVjdG9yQ2xpZW50IiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNvbm5lY3Rpb24iLCJjb25uZWN0b3IiLCJzdGF0ZSIsInN0YXR1cyIsImdldEFjY291bnRzIiwiZ2V0Q2hhaW5JZCIsImFjY291bnRzIiwiY2hhaW5JZCIsIlByb21pc2UiLCJhbGwiLCJjYXRjaCIsImUiLCJhY2NvdW50IiwiY29ubmVjdGlvbnMiLCJnZXQiLCJjdXJyZW50IiwiY29ubmVjdG9yQ2hhaW5JZCIsImNvbm5lY3Rpb25DaGFpbklkIiwiZ2V0Q2xpZW50IiwiYWRkcmVzcyIsInNvbWUiLCJ4IiwidG9Mb3dlckNhc2UiLCJjaGFpbiIsImNoYWlucyIsImZpbmQiLCJpZCIsInByb3ZpZGVyIiwiZ2V0UHJvdmlkZXIiLCJuYW1lIiwidHJhbnNwb3J0Iiwib3B0cyIsInJldHJ5Q291bnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAddress: () => (/* binding */ getEnsAddress)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsAddress.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsAddress */ function getEnsAddress(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsAddress, \"getEnsAddress\");\n    return action(rest);\n} //# sourceMappingURL=getEnsAddress.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBZGRyZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRTtBQUNsQjtBQUNsRCxvREFBb0QsR0FDN0MsU0FBU0EsY0FBY0csTUFBTSxFQUFFQyxVQUFVO0lBQzVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLE1BQU0sR0FBR0Y7SUFDN0IsTUFBTUcsU0FBU0osT0FBT0ssU0FBUyxDQUFDO1FBQUVIO0lBQVE7SUFDMUMsTUFBTUksU0FBU1AsOERBQVNBLENBQUNLLFFBQVFOLHVEQUFrQkEsRUFBRTtJQUNyRCxPQUFPUSxPQUFPSDtBQUNsQixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBZGRyZXNzLmpzPzhmNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RW5zQWRkcmVzcyBhcyB2aWVtX2dldEVuc0FkZHJlc3MsIH0gZnJvbSAndmllbS9hY3Rpb25zJztcbmltcG9ydCB7IGdldEFjdGlvbiB9IGZyb20gJy4uL3V0aWxzL2dldEFjdGlvbi5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL2dldEVuc0FkZHJlc3MgKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnNBZGRyZXNzKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX2dldEVuc0FkZHJlc3MsICdnZXRFbnNBZGRyZXNzJyk7XG4gICAgcmV0dXJuIGFjdGlvbihyZXN0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEVuc0FkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbImdldEVuc0FkZHJlc3MiLCJ2aWVtX2dldEVuc0FkZHJlc3MiLCJnZXRBY3Rpb24iLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiY2hhaW5JZCIsInJlc3QiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAddress.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsAvatar: () => (/* binding */ getEnsAvatar)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsAvatar.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsAvatar */ function getEnsAvatar(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsAvatar, \"getEnsAvatar\");\n    return action(rest);\n} //# sourceMappingURL=getEnsAvatar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNBdmF0YXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2hCO0FBQ2xELG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhRyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sc0RBQWlCQSxFQUFFO0lBQ3BELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL2dldEVuc0F2YXRhci5qcz9hMDcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVuc0F2YXRhciBhcyB2aWVtX2dldEVuc0F2YXRhciwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvZ2V0RW5zQXZhdGFyICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5zQXZhdGFyKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX2dldEVuc0F2YXRhciwgJ2dldEVuc0F2YXRhcicpO1xuICAgIHJldHVybiBhY3Rpb24ocmVzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRFbnNBdmF0YXIuanMubWFwIl0sIm5hbWVzIjpbImdldEVuc0F2YXRhciIsInZpZW1fZ2V0RW5zQXZhdGFyIiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNoYWluSWQiLCJyZXN0IiwiY2xpZW50IiwiZ2V0Q2xpZW50IiwiYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsAvatar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnsName: () => (/* binding */ getEnsName)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/ens/getEnsName.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/getEnsName */ function getEnsName(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.getEnsName, \"getEnsName\");\n    return action(rest);\n} //# sourceMappingURL=getEnsName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9nZXRFbnNOYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4RDtBQUNaO0FBQ2xELGlEQUFpRCxHQUMxQyxTQUFTQSxXQUFXRyxNQUFNLEVBQUVDLFVBQVU7SUFDekMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sb0RBQWVBLEVBQUU7SUFDbEQsT0FBT1EsT0FBT0g7QUFDbEIsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvZ2V0RW5zTmFtZS5qcz9iN2FlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVuc05hbWUgYXMgdmllbV9nZXRFbnNOYW1lLCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9nZXRFbnNOYW1lICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RW5zTmFtZShjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGNoYWluSWQsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9nZXRFbnNOYW1lLCAnZ2V0RW5zTmFtZScpO1xuICAgIHJldHVybiBhY3Rpb24ocmVzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRFbnNOYW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFbnNOYW1lIiwidmllbV9nZXRFbnNOYW1lIiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNoYWluSWQiLCJyZXN0IiwiY2xpZW50IiwiZ2V0Q2xpZW50IiwiYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getEnsName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/multicall.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multicall: () => (/* binding */ multicall)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/multicall.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\nasync function multicall(config, parameters) {\n    const { allowFailure = true, chainId, contracts, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.multicall, \"multicall\");\n    return action({\n        allowFailure,\n        contracts,\n        ...rest\n    });\n} //# sourceMappingURL=multicall.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9tdWx0aWNhbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQ1Q7QUFDM0MsZUFBZUEsVUFBVUcsTUFBTSxFQUFFQyxVQUFVO0lBQzlDLE1BQU0sRUFBRUMsZUFBZSxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE1BQU0sR0FBR0o7SUFDN0QsTUFBTUssU0FBU04sT0FBT08sU0FBUyxDQUFDO1FBQUVKO0lBQVE7SUFDMUMsTUFBTUssU0FBU1QsOERBQVNBLENBQUNPLFFBQVFSLG1EQUFjQSxFQUFFO0lBQ2pELE9BQU9VLE9BQU87UUFDVk47UUFDQUU7UUFDQSxHQUFHQyxJQUFJO0lBQ1g7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9tdWx0aWNhbGwuanM/N2EyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtdWx0aWNhbGwgYXMgdmllbV9tdWx0aWNhbGwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtdWx0aWNhbGwoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBhbGxvd0ZhaWx1cmUgPSB0cnVlLCBjaGFpbklkLCBjb250cmFjdHMsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9tdWx0aWNhbGwsICdtdWx0aWNhbGwnKTtcbiAgICByZXR1cm4gYWN0aW9uKHtcbiAgICAgICAgYWxsb3dGYWlsdXJlLFxuICAgICAgICBjb250cmFjdHMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aWNhbGwuanMubWFwIl0sIm5hbWVzIjpbIm11bHRpY2FsbCIsInZpZW1fbXVsdGljYWxsIiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImFsbG93RmFpbHVyZSIsImNoYWluSWQiLCJjb250cmFjdHMiLCJyZXN0IiwiY2xpZW50IiwiZ2V0Q2xpZW50IiwiYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/prepareTransactionRequest.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/prepareTransactionRequest.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareTransactionRequest: () => (/* binding */ prepareTransactionRequest)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getAccount.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/prepareTransactionRequest */ async function prepareTransactionRequest(config, parameters) {\n    const { account: account_, chainId, ...rest } = parameters;\n    const account = account_ ?? (0,_getAccount_js__WEBPACK_IMPORTED_MODULE_0__.getAccount)(config).address;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.prepareTransactionRequest, \"prepareTransactionRequest\");\n    return action({\n        ...rest,\n        ...account ? {\n            account\n        } : {}\n    });\n} //# sourceMappingURL=prepareTransactionRequest.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9wcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkY7QUFDekM7QUFDTDtBQUM3QyxnRUFBZ0UsR0FDekQsZUFBZUEsMEJBQTBCSSxNQUFNLEVBQUVDLFVBQVU7SUFDOUQsTUFBTSxFQUFFQyxTQUFTQyxRQUFRLEVBQUVDLE9BQU8sRUFBRSxHQUFHQyxNQUFNLEdBQUdKO0lBQ2hELE1BQU1DLFVBQVVDLFlBQVlKLDBEQUFVQSxDQUFDQyxRQUFRTSxPQUFPO0lBQ3RELE1BQU1DLFNBQVNQLE9BQU9RLFNBQVMsQ0FBQztRQUFFSjtJQUFRO0lBQzFDLE1BQU1LLFNBQVNYLDhEQUFTQSxDQUFDUyxRQUFRVixtRUFBOEJBLEVBQUU7SUFDakUsT0FBT1ksT0FBTztRQUNWLEdBQUdKLElBQUk7UUFDUCxHQUFJSCxVQUFVO1lBQUVBO1FBQVEsSUFBSSxDQUFDLENBQUM7SUFDbEM7QUFDSixFQUNBLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9wcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0LmpzPzU0NzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJlcGFyZVRyYW5zYWN0aW9uUmVxdWVzdCBhcyB2aWVtX3ByZXBhcmVUcmFuc2FjdGlvblJlcXVlc3QgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmltcG9ydCB7IGdldEFjY291bnQgfSBmcm9tICcuL2dldEFjY291bnQuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9wcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0ICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlcGFyZVRyYW5zYWN0aW9uUmVxdWVzdChjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGFjY291bnQ6IGFjY291bnRfLCBjaGFpbklkLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IGFjY291bnQgPSBhY2NvdW50XyA/PyBnZXRBY2NvdW50KGNvbmZpZykuYWRkcmVzcztcbiAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX3ByZXBhcmVUcmFuc2FjdGlvblJlcXVlc3QsICdwcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0Jyk7XG4gICAgcmV0dXJuIGFjdGlvbih7XG4gICAgICAgIC4uLnJlc3QsXG4gICAgICAgIC4uLihhY2NvdW50ID8geyBhY2NvdW50IH0gOiB7fSksXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJwcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0IiwidmllbV9wcmVwYXJlVHJhbnNhY3Rpb25SZXF1ZXN0IiwiZ2V0QWN0aW9uIiwiZ2V0QWNjb3VudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJhY2NvdW50IiwiYWNjb3VudF8iLCJjaGFpbklkIiwicmVzdCIsImFkZHJlc3MiLCJjbGllbnQiLCJnZXRDbGllbnQiLCJhY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/prepareTransactionRequest.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/readContract.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContract: () => (/* binding */ readContract)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/readContract.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n/** https://wagmi.sh/core/api/actions/readContract */ function readContract(config, parameters) {\n    const { chainId, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.readContract, \"readContract\");\n    return action(rest);\n} //# sourceMappingURL=readContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ2hCO0FBQ2xELG1EQUFtRCxHQUM1QyxTQUFTQSxhQUFhRyxNQUFNLEVBQUVDLFVBQVU7SUFDM0MsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsTUFBTSxHQUFHRjtJQUM3QixNQUFNRyxTQUFTSixPQUFPSyxTQUFTLENBQUM7UUFBRUg7SUFBUTtJQUMxQyxNQUFNSSxTQUFTUCw4REFBU0EsQ0FBQ0ssUUFBUU4sc0RBQWlCQSxFQUFFO0lBQ3BELE9BQU9RLE9BQU9IO0FBQ2xCLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3JlYWRDb250cmFjdC5qcz9kM2EzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlYWRDb250cmFjdCBhcyB2aWVtX3JlYWRDb250cmFjdCwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvcmVhZENvbnRyYWN0ICovXG5leHBvcnQgZnVuY3Rpb24gcmVhZENvbnRyYWN0KGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX3JlYWRDb250cmFjdCwgJ3JlYWRDb250cmFjdCcpO1xuICAgIHJldHVybiBhY3Rpb24ocmVzdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFkQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbInJlYWRDb250cmFjdCIsInZpZW1fcmVhZENvbnRyYWN0IiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNoYWluSWQiLCJyZXN0IiwiY2xpZW50IiwiZ2V0Q2xpZW50IiwiYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/readContracts.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readContracts: () => (/* binding */ readContracts)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/contract.js\");\n/* harmony import */ var _multicall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multicall.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/multicall.js\");\n/* harmony import */ var _readContract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./readContract.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContract.js\");\n\n\n\nasync function readContracts(config, parameters) {\n    const { allowFailure = true, blockNumber, blockTag, ...rest } = parameters;\n    const contracts = parameters.contracts;\n    try {\n        const contractsByChainId = {};\n        for (const [index, contract] of contracts.entries()){\n            const chainId = contract.chainId ?? config.state.chainId;\n            if (!contractsByChainId[chainId]) contractsByChainId[chainId] = [];\n            contractsByChainId[chainId]?.push({\n                contract,\n                index\n            });\n        }\n        const promises = ()=>Object.entries(contractsByChainId).map(([chainId, contracts])=>(0,_multicall_js__WEBPACK_IMPORTED_MODULE_0__.multicall)(config, {\n                    ...rest,\n                    allowFailure,\n                    blockNumber,\n                    blockTag,\n                    chainId: Number.parseInt(chainId),\n                    contracts: contracts.map(({ contract })=>contract)\n                }));\n        const multicallResults = (await Promise.all(promises())).flat();\n        // Reorder the contract results back to the order they were\n        // provided in.\n        const resultIndexes = Object.values(contractsByChainId).flatMap((contracts)=>contracts.map(({ index })=>index));\n        return multicallResults.reduce((results, result, index)=>{\n            if (results) results[resultIndexes[index]] = result;\n            return results;\n        }, []);\n    } catch (error) {\n        if (error instanceof viem__WEBPACK_IMPORTED_MODULE_1__.ContractFunctionExecutionError) throw error;\n        const promises = ()=>contracts.map((contract)=>(0,_readContract_js__WEBPACK_IMPORTED_MODULE_2__.readContract)(config, {\n                    ...contract,\n                    blockNumber,\n                    blockTag\n                }));\n        if (allowFailure) return (await Promise.allSettled(promises())).map((result)=>{\n            if (result.status === \"fulfilled\") return {\n                result: result.value,\n                status: \"success\"\n            };\n            return {\n                error: result.reason,\n                result: undefined,\n                status: \"failure\"\n            };\n        });\n        return await Promise.all(promises());\n    }\n} //# sourceMappingURL=readContracts.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFDWDtBQUNNO0FBQzFDLGVBQWVHLGNBQWNDLE1BQU0sRUFBRUMsVUFBVTtJQUNsRCxNQUFNLEVBQUVDLGVBQWUsSUFBSSxFQUFFQyxXQUFXLEVBQUVDLFFBQVEsRUFBRSxHQUFHQyxNQUFNLEdBQUdKO0lBQ2hFLE1BQU1LLFlBQVlMLFdBQVdLLFNBQVM7SUFDdEMsSUFBSTtRQUNBLE1BQU1DLHFCQUFxQixDQUFDO1FBQzVCLEtBQUssTUFBTSxDQUFDQyxPQUFPQyxTQUFTLElBQUlILFVBQVVJLE9BQU8sR0FBSTtZQUNqRCxNQUFNQyxVQUFVRixTQUFTRSxPQUFPLElBQUlYLE9BQU9ZLEtBQUssQ0FBQ0QsT0FBTztZQUN4RCxJQUFJLENBQUNKLGtCQUFrQixDQUFDSSxRQUFRLEVBQzVCSixrQkFBa0IsQ0FBQ0ksUUFBUSxHQUFHLEVBQUU7WUFDcENKLGtCQUFrQixDQUFDSSxRQUFRLEVBQUVFLEtBQUs7Z0JBQUVKO2dCQUFVRDtZQUFNO1FBQ3hEO1FBQ0EsTUFBTU0sV0FBVyxJQUFNQyxPQUFPTCxPQUFPLENBQUNILG9CQUFvQlMsR0FBRyxDQUFDLENBQUMsQ0FBQ0wsU0FBU0wsVUFBVSxHQUFLVCx3REFBU0EsQ0FBQ0csUUFBUTtvQkFDdEcsR0FBR0ssSUFBSTtvQkFDUEg7b0JBQ0FDO29CQUNBQztvQkFDQU8sU0FBU00sT0FBT0MsUUFBUSxDQUFDUDtvQkFDekJMLFdBQVdBLFVBQVVVLEdBQUcsQ0FBQyxDQUFDLEVBQUVQLFFBQVEsRUFBRSxHQUFLQTtnQkFDL0M7UUFDQSxNQUFNVSxtQkFBbUIsQ0FBQyxNQUFNQyxRQUFRQyxHQUFHLENBQUNQLFdBQVUsRUFBR1EsSUFBSTtRQUM3RCwyREFBMkQ7UUFDM0QsZUFBZTtRQUNmLE1BQU1DLGdCQUFnQlIsT0FBT1MsTUFBTSxDQUFDakIsb0JBQW9Ca0IsT0FBTyxDQUFDLENBQUNuQixZQUFjQSxVQUFVVSxHQUFHLENBQUMsQ0FBQyxFQUFFUixLQUFLLEVBQUUsR0FBS0E7UUFDNUcsT0FBT1csaUJBQWlCTyxNQUFNLENBQUMsQ0FBQ0MsU0FBU0MsUUFBUXBCO1lBQzdDLElBQUltQixTQUNBQSxPQUFPLENBQUNKLGFBQWEsQ0FBQ2YsTUFBTSxDQUFDLEdBQUdvQjtZQUNwQyxPQUFPRDtRQUNYLEdBQUcsRUFBRTtJQUNULEVBQ0EsT0FBT0UsT0FBTztRQUNWLElBQUlBLGlCQUFpQmpDLGdFQUE4QkEsRUFDL0MsTUFBTWlDO1FBQ1YsTUFBTWYsV0FBVyxJQUFNUixVQUFVVSxHQUFHLENBQUMsQ0FBQ1AsV0FBYVgsOERBQVlBLENBQUNFLFFBQVE7b0JBQUUsR0FBR1MsUUFBUTtvQkFBRU47b0JBQWFDO2dCQUFTO1FBQzdHLElBQUlGLGNBQ0EsT0FBTyxDQUFDLE1BQU1rQixRQUFRVSxVQUFVLENBQUNoQixXQUFVLEVBQUdFLEdBQUcsQ0FBQyxDQUFDWTtZQUMvQyxJQUFJQSxPQUFPRyxNQUFNLEtBQUssYUFDbEIsT0FBTztnQkFBRUgsUUFBUUEsT0FBT0ksS0FBSztnQkFBRUQsUUFBUTtZQUFVO1lBQ3JELE9BQU87Z0JBQUVGLE9BQU9ELE9BQU9LLE1BQU07Z0JBQUVMLFFBQVFNO2dCQUFXSCxRQUFRO1lBQVU7UUFDeEU7UUFDSixPQUFRLE1BQU1YLFFBQVFDLEdBQUcsQ0FBQ1A7SUFDOUI7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9yZWFkQ29udHJhY3RzLmpzP2Y1MDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJhY3RGdW5jdGlvbkV4ZWN1dGlvbkVycm9yIH0gZnJvbSAndmllbSc7XG5pbXBvcnQgeyBtdWx0aWNhbGwgfSBmcm9tICcuL211bHRpY2FsbC5qcyc7XG5pbXBvcnQgeyByZWFkQ29udHJhY3QgfSBmcm9tICcuL3JlYWRDb250cmFjdC5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVhZENvbnRyYWN0cyhjb25maWcsIHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGFsbG93RmFpbHVyZSA9IHRydWUsIGJsb2NrTnVtYmVyLCBibG9ja1RhZywgLi4ucmVzdCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjb250cmFjdHMgPSBwYXJhbWV0ZXJzLmNvbnRyYWN0cztcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBjb250cmFjdHNCeUNoYWluSWQgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBbaW5kZXgsIGNvbnRyYWN0XSBvZiBjb250cmFjdHMuZW50cmllcygpKSB7XG4gICAgICAgICAgICBjb25zdCBjaGFpbklkID0gY29udHJhY3QuY2hhaW5JZCA/PyBjb25maWcuc3RhdGUuY2hhaW5JZDtcbiAgICAgICAgICAgIGlmICghY29udHJhY3RzQnlDaGFpbklkW2NoYWluSWRdKVxuICAgICAgICAgICAgICAgIGNvbnRyYWN0c0J5Q2hhaW5JZFtjaGFpbklkXSA9IFtdO1xuICAgICAgICAgICAgY29udHJhY3RzQnlDaGFpbklkW2NoYWluSWRdPy5wdXNoKHsgY29udHJhY3QsIGluZGV4IH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gKCkgPT4gT2JqZWN0LmVudHJpZXMoY29udHJhY3RzQnlDaGFpbklkKS5tYXAoKFtjaGFpbklkLCBjb250cmFjdHNdKSA9PiBtdWx0aWNhbGwoY29uZmlnLCB7XG4gICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICAgICAgYWxsb3dGYWlsdXJlLFxuICAgICAgICAgICAgYmxvY2tOdW1iZXIsXG4gICAgICAgICAgICBibG9ja1RhZyxcbiAgICAgICAgICAgIGNoYWluSWQ6IE51bWJlci5wYXJzZUludChjaGFpbklkKSxcbiAgICAgICAgICAgIGNvbnRyYWN0czogY29udHJhY3RzLm1hcCgoeyBjb250cmFjdCB9KSA9PiBjb250cmFjdCksXG4gICAgICAgIH0pKTtcbiAgICAgICAgY29uc3QgbXVsdGljYWxsUmVzdWx0cyA9IChhd2FpdCBQcm9taXNlLmFsbChwcm9taXNlcygpKSkuZmxhdCgpO1xuICAgICAgICAvLyBSZW9yZGVyIHRoZSBjb250cmFjdCByZXN1bHRzIGJhY2sgdG8gdGhlIG9yZGVyIHRoZXkgd2VyZVxuICAgICAgICAvLyBwcm92aWRlZCBpbi5cbiAgICAgICAgY29uc3QgcmVzdWx0SW5kZXhlcyA9IE9iamVjdC52YWx1ZXMoY29udHJhY3RzQnlDaGFpbklkKS5mbGF0TWFwKChjb250cmFjdHMpID0+IGNvbnRyYWN0cy5tYXAoKHsgaW5kZXggfSkgPT4gaW5kZXgpKTtcbiAgICAgICAgcmV0dXJuIG11bHRpY2FsbFJlc3VsdHMucmVkdWNlKChyZXN1bHRzLCByZXN1bHQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0cylcbiAgICAgICAgICAgICAgICByZXN1bHRzW3Jlc3VsdEluZGV4ZXNbaW5kZXhdXSA9IHJlc3VsdDtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICB9LCBbXSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBDb250cmFjdEZ1bmN0aW9uRXhlY3V0aW9uRXJyb3IpXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSAoKSA9PiBjb250cmFjdHMubWFwKChjb250cmFjdCkgPT4gcmVhZENvbnRyYWN0KGNvbmZpZywgeyAuLi5jb250cmFjdCwgYmxvY2tOdW1iZXIsIGJsb2NrVGFnIH0pKTtcbiAgICAgICAgaWYgKGFsbG93RmFpbHVyZSlcbiAgICAgICAgICAgIHJldHVybiAoYXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKHByb21pc2VzKCkpKS5tYXAoKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuc3RhdHVzID09PSAnZnVsZmlsbGVkJylcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiByZXN1bHQudmFsdWUsIHN0YXR1czogJ3N1Y2Nlc3MnIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZXJyb3I6IHJlc3VsdC5yZWFzb24sIHJlc3VsdDogdW5kZWZpbmVkLCBzdGF0dXM6ICdmYWlsdXJlJyB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiAoYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMoKSkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWRDb250cmFjdHMuanMubWFwIl0sIm5hbWVzIjpbIkNvbnRyYWN0RnVuY3Rpb25FeGVjdXRpb25FcnJvciIsIm11bHRpY2FsbCIsInJlYWRDb250cmFjdCIsInJlYWRDb250cmFjdHMiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWxsb3dGYWlsdXJlIiwiYmxvY2tOdW1iZXIiLCJibG9ja1RhZyIsInJlc3QiLCJjb250cmFjdHMiLCJjb250cmFjdHNCeUNoYWluSWQiLCJpbmRleCIsImNvbnRyYWN0IiwiZW50cmllcyIsImNoYWluSWQiLCJzdGF0ZSIsInB1c2giLCJwcm9taXNlcyIsIk9iamVjdCIsIm1hcCIsIk51bWJlciIsInBhcnNlSW50IiwibXVsdGljYWxsUmVzdWx0cyIsIlByb21pc2UiLCJhbGwiLCJmbGF0IiwicmVzdWx0SW5kZXhlcyIsInZhbHVlcyIsImZsYXRNYXAiLCJyZWR1Y2UiLCJyZXN1bHRzIiwicmVzdWx0IiwiZXJyb3IiLCJhbGxTZXR0bGVkIiwic3RhdHVzIiwidmFsdWUiLCJyZWFzb24iLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/readContracts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/reconnect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reconnect: () => (/* binding */ reconnect)\n/* harmony export */ });\nlet isReconnecting = false;\n/** https://wagmi.sh/core/api/actions/reconnect */ async function reconnect(config, parameters = {}) {\n    // If already reconnecting, do nothing\n    if (isReconnecting) return [];\n    isReconnecting = true;\n    config.setState((x)=>({\n            ...x,\n            status: x.current ? \"reconnecting\" : \"connecting\"\n        }));\n    const connectors = [];\n    if (parameters.connectors?.length) {\n        for (const connector_ of parameters.connectors){\n            let connector;\n            // \"Register\" connector if not already created\n            if (typeof connector_ === \"function\") connector = config._internal.connectors.setup(connector_);\n            else connector = connector_;\n            connectors.push(connector);\n        }\n    } else connectors.push(...config.connectors);\n    // Try recently-used connectors first\n    let recentConnectorId;\n    try {\n        recentConnectorId = await config.storage?.getItem(\"recentConnectorId\");\n    } catch  {}\n    const scores = {};\n    for (const [, connection] of config.state.connections){\n        scores[connection.connector.id] = 1;\n    }\n    if (recentConnectorId) scores[recentConnectorId] = 0;\n    const sorted = Object.keys(scores).length > 0 ? [\n        ...connectors\n    ].sort((a, b)=>(scores[a.id] ?? 10) - (scores[b.id] ?? 10)) : connectors;\n    // Iterate through each connector and try to connect\n    let connected = false;\n    const connections = [];\n    const providers = [];\n    for (const connector of sorted){\n        const provider = await connector.getProvider().catch(()=>undefined);\n        if (!provider) continue;\n        // If we already have an instance of this connector's provider,\n        // then we have already checked it (ie. injected connectors can\n        // share the same `window.ethereum` instance, so we don't want to\n        // connect to it again).\n        if (providers.some((x)=>x === provider)) continue;\n        const isAuthorized = await connector.isAuthorized();\n        if (!isAuthorized) continue;\n        const data = await connector.connect({\n            isReconnecting: true\n        }).catch(()=>null);\n        if (!data) continue;\n        connector.emitter.off(\"connect\", config._internal.events.connect);\n        connector.emitter.on(\"change\", config._internal.events.change);\n        connector.emitter.on(\"disconnect\", config._internal.events.disconnect);\n        config.setState((x)=>{\n            const connections = new Map(connected ? x.connections : new Map()).set(connector.uid, {\n                accounts: data.accounts,\n                chainId: data.chainId,\n                connector\n            });\n            return {\n                ...x,\n                current: connected ? x.current : connector.uid,\n                connections\n            };\n        });\n        connections.push({\n            accounts: data.accounts,\n            chainId: data.chainId,\n            connector\n        });\n        providers.push(provider);\n        connected = true;\n    }\n    // Prevent overwriting connected status from race condition\n    if (config.state.status === \"reconnecting\" || config.state.status === \"connecting\") {\n        // If connecting didn't succeed, set to disconnected\n        if (!connected) config.setState((x)=>({\n                ...x,\n                connections: new Map(),\n                current: null,\n                status: \"disconnected\"\n            }));\n        else config.setState((x)=>({\n                ...x,\n                status: \"connected\"\n            }));\n    }\n    isReconnecting = false;\n    return connections;\n} //# sourceMappingURL=reconnect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/sendTransaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/sendTransaction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/sendTransaction.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/sendTransaction */ async function sendTransaction(config, parameters) {\n    const { account, chainId, connector, ...rest } = parameters;\n    let client;\n    if (typeof account === \"object\" && account?.type === \"local\") client = config.getClient({\n        chainId\n    });\n    else client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n        account: account ?? undefined,\n        chainId,\n        connector\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.sendTransaction, \"sendTransaction\");\n    const hash = await action({\n        ...rest,\n        ...account ? {\n            account\n        } : {},\n        chain: chainId ? {\n            id: chainId\n        } : null,\n        gas: rest.gas ?? undefined\n    });\n    return hash;\n} //# sourceMappingURL=sendTransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zZW5kVHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1RTtBQUNyQjtBQUNZO0FBQzlELHNEQUFzRCxHQUMvQyxlQUFlQSxnQkFBZ0JJLE1BQU0sRUFBRUMsVUFBVTtJQUNwRCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsTUFBTSxHQUFHSjtJQUNqRCxJQUFJSztJQUNKLElBQUksT0FBT0osWUFBWSxZQUFZQSxTQUFTSyxTQUFTLFNBQ2pERCxTQUFTTixPQUFPUSxTQUFTLENBQUM7UUFBRUw7SUFBUTtTQUVwQ0csU0FBUyxNQUFNUCwwRUFBa0JBLENBQUNDLFFBQVE7UUFDdENFLFNBQVNBLFdBQVdPO1FBQ3BCTjtRQUNBQztJQUNKO0lBQ0osTUFBTU0sU0FBU1osOERBQVNBLENBQUNRLFFBQVFULHlEQUFvQkEsRUFBRTtJQUN2RCxNQUFNYyxPQUFPLE1BQU1ELE9BQU87UUFDdEIsR0FBR0wsSUFBSTtRQUNQLEdBQUlILFVBQVU7WUFBRUE7UUFBUSxJQUFJLENBQUMsQ0FBQztRQUM5QlUsT0FBT1QsVUFBVTtZQUFFVSxJQUFJVjtRQUFRLElBQUk7UUFDbkNXLEtBQUtULEtBQUtTLEdBQUcsSUFBSUw7SUFDckI7SUFDQSxPQUFPRTtBQUNYLEVBQ0EsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3NlbmRUcmFuc2FjdGlvbi5qcz9lZWYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRUcmFuc2FjdGlvbiBhcyB2aWVtX3NlbmRUcmFuc2FjdGlvbiB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuaW1wb3J0IHsgZ2V0Q29ubmVjdG9yQ2xpZW50LCB9IGZyb20gJy4vZ2V0Q29ubmVjdG9yQ2xpZW50LmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvc2VuZFRyYW5zYWN0aW9uICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZFRyYW5zYWN0aW9uKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWNjb3VudCwgY2hhaW5JZCwgY29ubmVjdG9yLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGxldCBjbGllbnQ7XG4gICAgaWYgKHR5cGVvZiBhY2NvdW50ID09PSAnb2JqZWN0JyAmJiBhY2NvdW50Py50eXBlID09PSAnbG9jYWwnKVxuICAgICAgICBjbGllbnQgPSBjb25maWcuZ2V0Q2xpZW50KHsgY2hhaW5JZCB9KTtcbiAgICBlbHNlXG4gICAgICAgIGNsaWVudCA9IGF3YWl0IGdldENvbm5lY3RvckNsaWVudChjb25maWcsIHtcbiAgICAgICAgICAgIGFjY291bnQ6IGFjY291bnQgPz8gdW5kZWZpbmVkLFxuICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgIGNvbm5lY3RvcixcbiAgICAgICAgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9zZW5kVHJhbnNhY3Rpb24sICdzZW5kVHJhbnNhY3Rpb24nKTtcbiAgICBjb25zdCBoYXNoID0gYXdhaXQgYWN0aW9uKHtcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgLi4uKGFjY291bnQgPyB7IGFjY291bnQgfSA6IHt9KSxcbiAgICAgICAgY2hhaW46IGNoYWluSWQgPyB7IGlkOiBjaGFpbklkIH0gOiBudWxsLFxuICAgICAgICBnYXM6IHJlc3QuZ2FzID8/IHVuZGVmaW5lZCxcbiAgICB9KTtcbiAgICByZXR1cm4gaGFzaDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbmRUcmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOlsic2VuZFRyYW5zYWN0aW9uIiwidmllbV9zZW5kVHJhbnNhY3Rpb24iLCJnZXRBY3Rpb24iLCJnZXRDb25uZWN0b3JDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWNjb3VudCIsImNoYWluSWQiLCJjb25uZWN0b3IiLCJyZXN0IiwiY2xpZW50IiwidHlwZSIsImdldENsaWVudCIsInVuZGVmaW5lZCIsImFjdGlvbiIsImhhc2giLCJjaGFpbiIsImlkIiwiZ2FzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/sendTransaction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/signMessage.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signMessage: () => (/* binding */ signMessage)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/signMessage.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/signMessage */ async function signMessage(config, parameters) {\n    const { account, connector, ...rest } = parameters;\n    let client;\n    if (typeof account === \"object\" && account.type === \"local\") client = config.getClient();\n    else client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n        account,\n        connector\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.signMessage, \"signMessage\");\n    return action({\n        ...rest,\n        ...account ? {\n            account\n        } : {}\n    });\n} //# sourceMappingURL=signMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zaWduTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdFO0FBQ2Q7QUFDWTtBQUM5RCxrREFBa0QsR0FDM0MsZUFBZUEsWUFBWUksTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUN4QyxJQUFJSTtJQUNKLElBQUksT0FBT0gsWUFBWSxZQUFZQSxRQUFRSSxJQUFJLEtBQUssU0FDaERELFNBQVNMLE9BQU9PLFNBQVM7U0FFekJGLFNBQVMsTUFBTU4sMEVBQWtCQSxDQUFDQyxRQUFRO1FBQUVFO1FBQVNDO0lBQVU7SUFDbkUsTUFBTUssU0FBU1YsOERBQVNBLENBQUNPLFFBQVFSLHFEQUFnQkEsRUFBRTtJQUNuRCxPQUFPVyxPQUFPO1FBQ1YsR0FBR0osSUFBSTtRQUNQLEdBQUlGLFVBQVU7WUFBRUE7UUFBUSxJQUFJLENBQUMsQ0FBQztJQUNsQztBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3NpZ25NZXNzYWdlLmpzPzRmZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2lnbk1lc3NhZ2UgYXMgdmllbV9zaWduTWVzc2FnZSwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmltcG9ydCB7IGdldENvbm5lY3RvckNsaWVudCwgfSBmcm9tICcuL2dldENvbm5lY3RvckNsaWVudC5qcyc7XG4vKiogaHR0cHM6Ly93YWdtaS5zaC9jb3JlL2FwaS9hY3Rpb25zL3NpZ25NZXNzYWdlICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk1lc3NhZ2UoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBhY2NvdW50LCBjb25uZWN0b3IsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgbGV0IGNsaWVudDtcbiAgICBpZiAodHlwZW9mIGFjY291bnQgPT09ICdvYmplY3QnICYmIGFjY291bnQudHlwZSA9PT0gJ2xvY2FsJylcbiAgICAgICAgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCgpO1xuICAgIGVsc2VcbiAgICAgICAgY2xpZW50ID0gYXdhaXQgZ2V0Q29ubmVjdG9yQ2xpZW50KGNvbmZpZywgeyBhY2NvdW50LCBjb25uZWN0b3IgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV9zaWduTWVzc2FnZSwgJ3NpZ25NZXNzYWdlJyk7XG4gICAgcmV0dXJuIGFjdGlvbih7XG4gICAgICAgIC4uLnJlc3QsXG4gICAgICAgIC4uLihhY2NvdW50ID8geyBhY2NvdW50IH0gOiB7fSksXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduTWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOlsic2lnbk1lc3NhZ2UiLCJ2aWVtX3NpZ25NZXNzYWdlIiwiZ2V0QWN0aW9uIiwiZ2V0Q29ubmVjdG9yQ2xpZW50IiwiY29uZmlnIiwicGFyYW1ldGVycyIsImFjY291bnQiLCJjb25uZWN0b3IiLCJyZXN0IiwiY2xpZW50IiwidHlwZSIsImdldENsaWVudCIsImFjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/signMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/switchChain.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   switchChain: () => (/* binding */ switchChain)\n/* harmony export */ });\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _errors_connector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors/connector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n\n\n/** https://wagmi.sh/core/api/actions/switchChain */ async function switchChain(config, parameters) {\n    const { addEthereumChainParameter, chainId } = parameters;\n    const connection = config.state.connections.get(parameters.connector?.uid ?? config.state.current);\n    if (connection) {\n        const connector = connection.connector;\n        if (!connector.switchChain) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_0__.SwitchChainNotSupportedError({\n            connector\n        });\n        const chain = await connector.switchChain({\n            addEthereumChainParameter,\n            chainId\n        });\n        return chain;\n    }\n    const chain = config.chains.find((x)=>x.id === chainId);\n    if (!chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_1__.ChainNotConfiguredError();\n    config.setState((x)=>({\n            ...x,\n            chainId\n        }));\n    return chain;\n} //# sourceMappingURL=switchChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy9zd2l0Y2hDaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0Q7QUFDUTtBQUN2RSxrREFBa0QsR0FDM0MsZUFBZUUsWUFBWUMsTUFBTSxFQUFFQyxVQUFVO0lBQ2hELE1BQU0sRUFBRUMseUJBQXlCLEVBQUVDLE9BQU8sRUFBRSxHQUFHRjtJQUMvQyxNQUFNRyxhQUFhSixPQUFPSyxLQUFLLENBQUNDLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDTixXQUFXTyxTQUFTLEVBQUVDLE9BQU9ULE9BQU9LLEtBQUssQ0FBQ0ssT0FBTztJQUNqRyxJQUFJTixZQUFZO1FBQ1osTUFBTUksWUFBWUosV0FBV0ksU0FBUztRQUN0QyxJQUFJLENBQUNBLFVBQVVULFdBQVcsRUFDdEIsTUFBTSxJQUFJRCw4RUFBNEJBLENBQUM7WUFBRVU7UUFBVTtRQUN2RCxNQUFNRyxRQUFRLE1BQU1ILFVBQVVULFdBQVcsQ0FBQztZQUN0Q0c7WUFDQUM7UUFDSjtRQUNBLE9BQU9RO0lBQ1g7SUFDQSxNQUFNQSxRQUFRWCxPQUFPWSxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFQyxFQUFFLEtBQUtaO0lBQ2pELElBQUksQ0FBQ1EsT0FDRCxNQUFNLElBQUlkLHNFQUF1QkE7SUFDckNHLE9BQU9nQixRQUFRLENBQUMsQ0FBQ0YsSUFBTztZQUFFLEdBQUdBLENBQUM7WUFBRVg7UUFBUTtJQUN4QyxPQUFPUTtBQUNYLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3N3aXRjaENoYWluLmpzPzkxNmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3IsIH0gZnJvbSAnLi4vZXJyb3JzL2NvbmZpZy5qcyc7XG5pbXBvcnQgeyBTd2l0Y2hDaGFpbk5vdFN1cHBvcnRlZEVycm9yLCB9IGZyb20gJy4uL2Vycm9ycy9jb25uZWN0b3IuanMnO1xuLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy9zd2l0Y2hDaGFpbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN3aXRjaENoYWluKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgYWRkRXRoZXJldW1DaGFpblBhcmFtZXRlciwgY2hhaW5JZCB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjb25uZWN0aW9uID0gY29uZmlnLnN0YXRlLmNvbm5lY3Rpb25zLmdldChwYXJhbWV0ZXJzLmNvbm5lY3Rvcj8udWlkID8/IGNvbmZpZy5zdGF0ZS5jdXJyZW50KTtcbiAgICBpZiAoY29ubmVjdGlvbikge1xuICAgICAgICBjb25zdCBjb25uZWN0b3IgPSBjb25uZWN0aW9uLmNvbm5lY3RvcjtcbiAgICAgICAgaWYgKCFjb25uZWN0b3Iuc3dpdGNoQ2hhaW4pXG4gICAgICAgICAgICB0aHJvdyBuZXcgU3dpdGNoQ2hhaW5Ob3RTdXBwb3J0ZWRFcnJvcih7IGNvbm5lY3RvciB9KTtcbiAgICAgICAgY29uc3QgY2hhaW4gPSBhd2FpdCBjb25uZWN0b3Iuc3dpdGNoQ2hhaW4oe1xuICAgICAgICAgICAgYWRkRXRoZXJldW1DaGFpblBhcmFtZXRlcixcbiAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY2hhaW47XG4gICAgfVxuICAgIGNvbnN0IGNoYWluID0gY29uZmlnLmNoYWlucy5maW5kKCh4KSA9PiB4LmlkID09PSBjaGFpbklkKTtcbiAgICBpZiAoIWNoYWluKVxuICAgICAgICB0aHJvdyBuZXcgQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3IoKTtcbiAgICBjb25maWcuc2V0U3RhdGUoKHgpID0+ICh7IC4uLngsIGNoYWluSWQgfSkpO1xuICAgIHJldHVybiBjaGFpbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN3aXRjaENoYWluLmpzLm1hcCJdLCJuYW1lcyI6WyJDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciIsIlN3aXRjaENoYWluTm90U3VwcG9ydGVkRXJyb3IiLCJzd2l0Y2hDaGFpbiIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJhZGRFdGhlcmV1bUNoYWluUGFyYW1ldGVyIiwiY2hhaW5JZCIsImNvbm5lY3Rpb24iLCJzdGF0ZSIsImNvbm5lY3Rpb25zIiwiZ2V0IiwiY29ubmVjdG9yIiwidWlkIiwiY3VycmVudCIsImNoYWluIiwiY2hhaW5zIiwiZmluZCIsIngiLCJpZCIsInNldFN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/switchChain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   waitForTransactionReceipt: () => (/* binding */ waitForTransactionReceipt)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/fromHex.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/getTransaction.js\");\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/public/call.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n\n\n\nasync function waitForTransactionReceipt(config, parameters) {\n    const { chainId, timeout = 0, ...rest } = parameters;\n    const client = config.getClient({\n        chainId\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_1__.waitForTransactionReceipt, \"waitForTransactionReceipt\");\n    const receipt = await action({\n        ...rest,\n        timeout\n    });\n    if (receipt.status === \"reverted\") {\n        const action_getTransaction = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.getTransaction, \"getTransaction\");\n        const txn = await action_getTransaction({\n            hash: receipt.transactionHash\n        });\n        const action_call = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_0__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_3__.call, \"call\");\n        const code = await action_call({\n            ...txn,\n            data: txn.input,\n            gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : undefined,\n            maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : undefined,\n            maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : undefined\n        });\n        const reason = code?.data ? (0,viem__WEBPACK_IMPORTED_MODULE_4__.hexToString)(`0x${code.data.substring(138)}`) : \"unknown reason\";\n        throw new Error(reason);\n    }\n    return {\n        ...receipt,\n        chainId: client.chain.id\n    };\n} //# sourceMappingURL=waitForTransactionReceipt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtQztBQUMrRTtBQUNoRTtBQUMzQyxlQUFlRywwQkFBMEJHLE1BQU0sRUFBRUMsVUFBVTtJQUM5RCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxDQUFDLEVBQUUsR0FBR0MsTUFBTSxHQUFHSDtJQUMxQyxNQUFNSSxTQUFTTCxPQUFPTSxTQUFTLENBQUM7UUFBRUo7SUFBUTtJQUMxQyxNQUFNSyxTQUFTUiw4REFBU0EsQ0FBQ00sUUFBUVAsbUVBQThCQSxFQUFFO0lBQ2pFLE1BQU1VLFVBQVUsTUFBTUQsT0FBTztRQUFFLEdBQUdILElBQUk7UUFBRUQ7SUFBUTtJQUNoRCxJQUFJSyxRQUFRQyxNQUFNLEtBQUssWUFBWTtRQUMvQixNQUFNQyx3QkFBd0JYLDhEQUFTQSxDQUFDTSxRQUFRVCx3REFBY0EsRUFBRTtRQUNoRSxNQUFNZSxNQUFNLE1BQU1ELHNCQUFzQjtZQUFFRSxNQUFNSixRQUFRSyxlQUFlO1FBQUM7UUFDeEUsTUFBTUMsY0FBY2YsOERBQVNBLENBQUNNLFFBQVFWLDhDQUFJQSxFQUFFO1FBQzVDLE1BQU1vQixPQUFPLE1BQU1ELFlBQVk7WUFDM0IsR0FBR0gsR0FBRztZQUNOSyxNQUFNTCxJQUFJTSxLQUFLO1lBQ2ZDLFVBQVVQLElBQUlRLElBQUksS0FBSyxZQUFZUixJQUFJTyxRQUFRLEdBQUdFO1lBQ2xEQyxjQUFjVixJQUFJUSxJQUFJLEtBQUssWUFBWVIsSUFBSVUsWUFBWSxHQUFHRDtZQUMxREUsc0JBQXNCWCxJQUFJUSxJQUFJLEtBQUssWUFBWVIsSUFBSVcsb0JBQW9CLEdBQUdGO1FBQzlFO1FBQ0EsTUFBTUcsU0FBU1IsTUFBTUMsT0FDZnRCLGlEQUFXQSxDQUFDLENBQUMsRUFBRSxFQUFFcUIsS0FBS0MsSUFBSSxDQUFDUSxTQUFTLENBQUMsS0FBSyxDQUFDLElBQzNDO1FBQ04sTUFBTSxJQUFJQyxNQUFNRjtJQUNwQjtJQUNBLE9BQU87UUFDSCxHQUFHZixPQUFPO1FBQ1ZOLFNBQVNHLE9BQU9xQixLQUFLLENBQUNDLEVBQUU7SUFDNUI7QUFDSixFQUNBLHFEQUFxRCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LmpzPzgzNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGV4VG9TdHJpbmcgfSBmcm9tICd2aWVtJztcbmltcG9ydCB7IGNhbGwsIGdldFRyYW5zYWN0aW9uLCB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IGFzIHZpZW1fd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCwgfSBmcm9tICd2aWVtL2FjdGlvbnMnO1xuaW1wb3J0IHsgZ2V0QWN0aW9uIH0gZnJvbSAnLi4vdXRpbHMvZ2V0QWN0aW9uLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0KGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgY2hhaW5JZCwgdGltZW91dCA9IDAsIC4uLnJlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgY2xpZW50ID0gY29uZmlnLmdldENsaWVudCh7IGNoYWluSWQgfSk7XG4gICAgY29uc3QgYWN0aW9uID0gZ2V0QWN0aW9uKGNsaWVudCwgdmllbV93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0LCAnd2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdCcpO1xuICAgIGNvbnN0IHJlY2VpcHQgPSBhd2FpdCBhY3Rpb24oeyAuLi5yZXN0LCB0aW1lb3V0IH0pO1xuICAgIGlmIChyZWNlaXB0LnN0YXR1cyA9PT0gJ3JldmVydGVkJykge1xuICAgICAgICBjb25zdCBhY3Rpb25fZ2V0VHJhbnNhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCBnZXRUcmFuc2FjdGlvbiwgJ2dldFRyYW5zYWN0aW9uJyk7XG4gICAgICAgIGNvbnN0IHR4biA9IGF3YWl0IGFjdGlvbl9nZXRUcmFuc2FjdGlvbih7IGhhc2g6IHJlY2VpcHQudHJhbnNhY3Rpb25IYXNoIH0pO1xuICAgICAgICBjb25zdCBhY3Rpb25fY2FsbCA9IGdldEFjdGlvbihjbGllbnQsIGNhbGwsICdjYWxsJyk7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBhd2FpdCBhY3Rpb25fY2FsbCh7XG4gICAgICAgICAgICAuLi50eG4sXG4gICAgICAgICAgICBkYXRhOiB0eG4uaW5wdXQsXG4gICAgICAgICAgICBnYXNQcmljZTogdHhuLnR5cGUgIT09ICdlaXAxNTU5JyA/IHR4bi5nYXNQcmljZSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1heEZlZVBlckdhczogdHhuLnR5cGUgPT09ICdlaXAxNTU5JyA/IHR4bi5tYXhGZWVQZXJHYXMgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtYXhQcmlvcml0eUZlZVBlckdhczogdHhuLnR5cGUgPT09ICdlaXAxNTU5JyA/IHR4bi5tYXhQcmlvcml0eUZlZVBlckdhcyA6IHVuZGVmaW5lZCxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlYXNvbiA9IGNvZGU/LmRhdGFcbiAgICAgICAgICAgID8gaGV4VG9TdHJpbmcoYDB4JHtjb2RlLmRhdGEuc3Vic3RyaW5nKDEzOCl9YClcbiAgICAgICAgICAgIDogJ3Vua25vd24gcmVhc29uJztcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlYXNvbik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnJlY2VpcHQsXG4gICAgICAgIGNoYWluSWQ6IGNsaWVudC5jaGFpbi5pZCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2FpdEZvclRyYW5zYWN0aW9uUmVjZWlwdC5qcy5tYXAiXSwibmFtZXMiOlsiaGV4VG9TdHJpbmciLCJjYWxsIiwiZ2V0VHJhbnNhY3Rpb24iLCJ3YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwidmllbV93YWl0Rm9yVHJhbnNhY3Rpb25SZWNlaXB0IiwiZ2V0QWN0aW9uIiwiY29uZmlnIiwicGFyYW1ldGVycyIsImNoYWluSWQiLCJ0aW1lb3V0IiwicmVzdCIsImNsaWVudCIsImdldENsaWVudCIsImFjdGlvbiIsInJlY2VpcHQiLCJzdGF0dXMiLCJhY3Rpb25fZ2V0VHJhbnNhY3Rpb24iLCJ0eG4iLCJoYXNoIiwidHJhbnNhY3Rpb25IYXNoIiwiYWN0aW9uX2NhbGwiLCJjb2RlIiwiZGF0YSIsImlucHV0IiwiZ2FzUHJpY2UiLCJ0eXBlIiwidW5kZWZpbmVkIiwibWF4RmVlUGVyR2FzIiwibWF4UHJpb3JpdHlGZWVQZXJHYXMiLCJyZWFzb24iLCJzdWJzdHJpbmciLCJFcnJvciIsImNoYWluIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/waitForTransactionReceipt.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchAccount: () => (/* binding */ watchAccount)\n/* harmony export */ });\n/* harmony import */ var _utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/deepEqual.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\");\n/* harmony import */ var _getAccount_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getAccount.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getAccount.js\");\n\n\n/** https://wagmi.sh/core/api/actions/watchAccount */ function watchAccount(config, parameters) {\n    const { onChange } = parameters;\n    return config.subscribe(()=>(0,_getAccount_js__WEBPACK_IMPORTED_MODULE_0__.getAccount)(config), onChange, {\n        equalityFn (a, b) {\n            const { connector: aConnector, ...aRest } = a;\n            const { connector: bConnector, ...bRest } = b;\n            return (0,_utils_deepEqual_js__WEBPACK_IMPORTED_MODULE_1__.deepEqual)(aRest, bRest) && // check connector separately\n            aConnector?.id === bConnector?.id && aConnector?.uid === bConnector?.uid;\n        }\n    });\n} //# sourceMappingURL=watchAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaEFjY291bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ0w7QUFDN0MsbURBQW1ELEdBQzVDLFNBQVNFLGFBQWFDLE1BQU0sRUFBRUMsVUFBVTtJQUMzQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUMsSUFBTUwsMERBQVVBLENBQUNFLFNBQVNFLFVBQVU7UUFDeERFLFlBQVdDLENBQUMsRUFBRUMsQ0FBQztZQUNYLE1BQU0sRUFBRUMsV0FBV0MsVUFBVSxFQUFFLEdBQUdDLE9BQU8sR0FBR0o7WUFDNUMsTUFBTSxFQUFFRSxXQUFXRyxVQUFVLEVBQUUsR0FBR0MsT0FBTyxHQUFHTDtZQUM1QyxPQUFRVCw4REFBU0EsQ0FBQ1ksT0FBT0UsVUFDckIsNkJBQTZCO1lBQzdCSCxZQUFZSSxPQUFPRixZQUFZRSxNQUMvQkosWUFBWUssUUFBUUgsWUFBWUc7UUFDeEM7SUFDSjtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9hY3Rpb25zL3dhdGNoQWNjb3VudC5qcz83YjQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZXBFcXVhbCB9IGZyb20gJy4uL3V0aWxzL2RlZXBFcXVhbC5qcyc7XG5pbXBvcnQgeyBnZXRBY2NvdW50IH0gZnJvbSAnLi9nZXRBY2NvdW50LmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd2F0Y2hBY2NvdW50ICovXG5leHBvcnQgZnVuY3Rpb24gd2F0Y2hBY2NvdW50KGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgb25DaGFuZ2UgfSA9IHBhcmFtZXRlcnM7XG4gICAgcmV0dXJuIGNvbmZpZy5zdWJzY3JpYmUoKCkgPT4gZ2V0QWNjb3VudChjb25maWcpLCBvbkNoYW5nZSwge1xuICAgICAgICBlcXVhbGl0eUZuKGEsIGIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgY29ubmVjdG9yOiBhQ29ubmVjdG9yLCAuLi5hUmVzdCB9ID0gYTtcbiAgICAgICAgICAgIGNvbnN0IHsgY29ubmVjdG9yOiBiQ29ubmVjdG9yLCAuLi5iUmVzdCB9ID0gYjtcbiAgICAgICAgICAgIHJldHVybiAoZGVlcEVxdWFsKGFSZXN0LCBiUmVzdCkgJiZcbiAgICAgICAgICAgICAgICAvLyBjaGVjayBjb25uZWN0b3Igc2VwYXJhdGVseVxuICAgICAgICAgICAgICAgIGFDb25uZWN0b3I/LmlkID09PSBiQ29ubmVjdG9yPy5pZCAmJlxuICAgICAgICAgICAgICAgIGFDb25uZWN0b3I/LnVpZCA9PT0gYkNvbm5lY3Rvcj8udWlkKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoQWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOlsiZGVlcEVxdWFsIiwiZ2V0QWNjb3VudCIsIndhdGNoQWNjb3VudCIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJvbkNoYW5nZSIsInN1YnNjcmliZSIsImVxdWFsaXR5Rm4iLCJhIiwiYiIsImNvbm5lY3RvciIsImFDb25uZWN0b3IiLCJhUmVzdCIsImJDb25uZWN0b3IiLCJiUmVzdCIsImlkIiwidWlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   watchConnectors: () => (/* binding */ watchConnectors)\n/* harmony export */ });\n/** https://wagmi.sh/core/api/actions/watchConnectors */ function watchConnectors(config, parameters) {\n    const { onChange } = parameters;\n    return config._internal.connectors.subscribe((connectors, prevConnectors)=>{\n        onChange(Object.values(connectors), prevConnectors);\n    });\n} //# sourceMappingURL=watchConnectors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93YXRjaENvbm5lY3RvcnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNEQUFzRCxHQUMvQyxTQUFTQSxnQkFBZ0JDLE1BQU0sRUFBRUMsVUFBVTtJQUM5QyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHRDtJQUNyQixPQUFPRCxPQUFPRyxTQUFTLENBQUNDLFVBQVUsQ0FBQ0MsU0FBUyxDQUFDLENBQUNELFlBQVlFO1FBQ3RESixTQUFTSyxPQUFPQyxNQUFNLENBQUNKLGFBQWFFO0lBQ3hDO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd2F0Y2hDb25uZWN0b3JzLmpzPzM2ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIGh0dHBzOi8vd2FnbWkuc2gvY29yZS9hcGkvYWN0aW9ucy93YXRjaENvbm5lY3RvcnMgKi9cbmV4cG9ydCBmdW5jdGlvbiB3YXRjaENvbm5lY3RvcnMoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gcGFyYW1ldGVycztcbiAgICByZXR1cm4gY29uZmlnLl9pbnRlcm5hbC5jb25uZWN0b3JzLnN1YnNjcmliZSgoY29ubmVjdG9ycywgcHJldkNvbm5lY3RvcnMpID0+IHtcbiAgICAgICAgb25DaGFuZ2UoT2JqZWN0LnZhbHVlcyhjb25uZWN0b3JzKSwgcHJldkNvbm5lY3RvcnMpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2hDb25uZWN0b3JzLmpzLm1hcCJdLCJuYW1lcyI6WyJ3YXRjaENvbm5lY3RvcnMiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwib25DaGFuZ2UiLCJfaW50ZXJuYWwiLCJjb25uZWN0b3JzIiwic3Vic2NyaWJlIiwicHJldkNvbm5lY3RvcnMiLCJPYmplY3QiLCJ2YWx1ZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/watchConnectors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/actions/writeContract.js":
/*!********************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/actions/writeContract.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   writeContract: () => (/* binding */ writeContract)\n/* harmony export */ });\n/* harmony import */ var viem_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/actions */ \"(ssr)/./node_modules/viem/_esm/actions/wallet/writeContract.js\");\n/* harmony import */ var _utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAction.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\");\n/* harmony import */ var _getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getConnectorClient.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/getConnectorClient.js\");\n\n\n\n/** https://wagmi.sh/core/api/actions/writeContract */ async function writeContract(config, parameters) {\n    const { account, chainId, connector, ...request } = parameters;\n    let client;\n    if (typeof account === \"object\" && account?.type === \"local\") client = config.getClient({\n        chainId\n    });\n    else client = await (0,_getConnectorClient_js__WEBPACK_IMPORTED_MODULE_0__.getConnectorClient)(config, {\n        account: account ?? undefined,\n        chainId,\n        connector\n    });\n    const action = (0,_utils_getAction_js__WEBPACK_IMPORTED_MODULE_1__.getAction)(client, viem_actions__WEBPACK_IMPORTED_MODULE_2__.writeContract, \"writeContract\");\n    const hash = await action({\n        ...request,\n        ...account ? {\n            account\n        } : {},\n        chain: chainId ? {\n            id: chainId\n        } : null\n    });\n    return hash;\n} //# sourceMappingURL=writeContract.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vYWN0aW9ucy93cml0ZUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0U7QUFDbEI7QUFDWTtBQUM5RCxvREFBb0QsR0FDN0MsZUFBZUEsY0FBY0ksTUFBTSxFQUFFQyxVQUFVO0lBQ2xELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxTQUFTLEdBQUdKO0lBQ3BELElBQUlLO0lBQ0osSUFBSSxPQUFPSixZQUFZLFlBQVlBLFNBQVNLLFNBQVMsU0FDakRELFNBQVNOLE9BQU9RLFNBQVMsQ0FBQztRQUFFTDtJQUFRO1NBRXBDRyxTQUFTLE1BQU1QLDBFQUFrQkEsQ0FBQ0MsUUFBUTtRQUN0Q0UsU0FBU0EsV0FBV087UUFDcEJOO1FBQ0FDO0lBQ0o7SUFDSixNQUFNTSxTQUFTWiw4REFBU0EsQ0FBQ1EsUUFBUVQsdURBQWtCQSxFQUFFO0lBQ3JELE1BQU1jLE9BQU8sTUFBTUQsT0FBTztRQUN0QixHQUFHTCxPQUFPO1FBQ1YsR0FBSUgsVUFBVTtZQUFFQTtRQUFRLElBQUksQ0FBQyxDQUFDO1FBQzlCVSxPQUFPVCxVQUFVO1lBQUVVLElBQUlWO1FBQVEsSUFBSTtJQUN2QztJQUNBLE9BQU9RO0FBQ1gsRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2FjdGlvbnMvd3JpdGVDb250cmFjdC5qcz8zN2Q5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdyaXRlQ29udHJhY3QgYXMgdmllbV93cml0ZUNvbnRyYWN0LCB9IGZyb20gJ3ZpZW0vYWN0aW9ucyc7XG5pbXBvcnQgeyBnZXRBY3Rpb24gfSBmcm9tICcuLi91dGlscy9nZXRBY3Rpb24uanMnO1xuaW1wb3J0IHsgZ2V0Q29ubmVjdG9yQ2xpZW50LCB9IGZyb20gJy4vZ2V0Q29ubmVjdG9yQ2xpZW50LmpzJztcbi8qKiBodHRwczovL3dhZ21pLnNoL2NvcmUvYXBpL2FjdGlvbnMvd3JpdGVDb250cmFjdCAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdyaXRlQ29udHJhY3QoY29uZmlnLCBwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBhY2NvdW50LCBjaGFpbklkLCBjb25uZWN0b3IsIC4uLnJlcXVlc3QgfSA9IHBhcmFtZXRlcnM7XG4gICAgbGV0IGNsaWVudDtcbiAgICBpZiAodHlwZW9mIGFjY291bnQgPT09ICdvYmplY3QnICYmIGFjY291bnQ/LnR5cGUgPT09ICdsb2NhbCcpXG4gICAgICAgIGNsaWVudCA9IGNvbmZpZy5nZXRDbGllbnQoeyBjaGFpbklkIH0pO1xuICAgIGVsc2VcbiAgICAgICAgY2xpZW50ID0gYXdhaXQgZ2V0Q29ubmVjdG9yQ2xpZW50KGNvbmZpZywge1xuICAgICAgICAgICAgYWNjb3VudDogYWNjb3VudCA/PyB1bmRlZmluZWQsXG4gICAgICAgICAgICBjaGFpbklkLFxuICAgICAgICAgICAgY29ubmVjdG9yLFxuICAgICAgICB9KTtcbiAgICBjb25zdCBhY3Rpb24gPSBnZXRBY3Rpb24oY2xpZW50LCB2aWVtX3dyaXRlQ29udHJhY3QsICd3cml0ZUNvbnRyYWN0Jyk7XG4gICAgY29uc3QgaGFzaCA9IGF3YWl0IGFjdGlvbih7XG4gICAgICAgIC4uLnJlcXVlc3QsXG4gICAgICAgIC4uLihhY2NvdW50ID8geyBhY2NvdW50IH0gOiB7fSksXG4gICAgICAgIGNoYWluOiBjaGFpbklkID8geyBpZDogY2hhaW5JZCB9IDogbnVsbCxcbiAgICB9KTtcbiAgICByZXR1cm4gaGFzaDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyaXRlQ29udHJhY3QuanMubWFwIl0sIm5hbWVzIjpbIndyaXRlQ29udHJhY3QiLCJ2aWVtX3dyaXRlQ29udHJhY3QiLCJnZXRBY3Rpb24iLCJnZXRDb25uZWN0b3JDbGllbnQiLCJjb25maWciLCJwYXJhbWV0ZXJzIiwiYWNjb3VudCIsImNoYWluSWQiLCJjb25uZWN0b3IiLCJyZXF1ZXN0IiwiY2xpZW50IiwidHlwZSIsImdldENsaWVudCIsInVuZGVmaW5lZCIsImFjdGlvbiIsImhhc2giLCJjaGFpbiIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/actions/writeContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnector: () => (/* binding */ createConnector)\n/* harmony export */ });\nfunction createConnector(createConnectorFn) {\n    return createConnectorFn;\n} //# sourceMappingURL=createConnector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY29ubmVjdG9ycy9jcmVhdGVDb25uZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGdCQUFnQkMsaUJBQWlCO0lBQzdDLE9BQU9BO0FBQ1gsRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2Nvbm5lY3RvcnMvY3JlYXRlQ29ubmVjdG9yLmpzPzE4ZTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3RvcihjcmVhdGVDb25uZWN0b3JGbikge1xuICAgIHJldHVybiBjcmVhdGVDb25uZWN0b3JGbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUNvbm5lY3Rvci5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQ29ubmVjdG9yIiwiY3JlYXRlQ29ubmVjdG9yRm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js":
/*!******************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/connectors/injected.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   injected: () => (/* binding */ injected)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/address/getAddress.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withTimeout.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/promise/withRetry.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors/connector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\");\n/* harmony import */ var _createConnector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createConnector.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/createConnector.js\");\n\n\n\n\ninjected.type = \"injected\";\nfunction injected(parameters = {}) {\n    const { shimDisconnect = true, unstable_shimAsyncInject } = parameters;\n    function getTarget() {\n        const target = parameters.target;\n        if (typeof target === \"function\") {\n            const result = target();\n            if (result) return result;\n        }\n        if (typeof target === \"object\") return target;\n        if (typeof target === \"string\") return {\n            ...targetMap[target] ?? {\n                id: target,\n                name: `${target[0].toUpperCase()}${target.slice(1)}`,\n                provider: `is${target[0].toUpperCase()}${target.slice(1)}`\n            }\n        };\n        return {\n            id: \"injected\",\n            name: \"Injected\",\n            provider (window1) {\n                return window1?.ethereum;\n            }\n        };\n    }\n    let accountsChanged;\n    let chainChanged;\n    let connect;\n    let disconnect;\n    return (0,_createConnector_js__WEBPACK_IMPORTED_MODULE_0__.createConnector)((config)=>({\n            get icon () {\n                return getTarget().icon;\n            },\n            get id () {\n                return getTarget().id;\n            },\n            get name () {\n                return getTarget().name;\n            },\n            /** @deprecated */ get supportsSimulation () {\n                return true;\n            },\n            type: injected.type,\n            async setup () {\n                const provider = await this.getProvider();\n                // Only start listening for events if `target` is set, otherwise `injected()` will also receive events\n                if (provider?.on && parameters.target) {\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                    // We shouldn't need to listen for `'accountsChanged'` here since the `'connect'` event should suffice (and wallet shouldn't be connected yet).\n                    // Some wallets, like MetaMask, do not implement the `'connect'` event and overload `'accountsChanged'` instead.\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                }\n            },\n            async connect ({ chainId, isReconnecting } = {}) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                let accounts = [];\n                if (isReconnecting) accounts = await this.getAccounts().catch(()=>[]);\n                else if (shimDisconnect) {\n                    // Attempt to show another prompt for selecting account if `shimDisconnect` flag is enabled\n                    try {\n                        const permissions = await provider.request({\n                            method: \"wallet_requestPermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        });\n                        accounts = permissions[0]?.caveats?.[0]?.value?.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                        // `'wallet_requestPermissions'` can return a different order of accounts than `'eth_accounts'`\n                        // switch to `'eth_accounts'` ordering if more than one account is connected\n                        // https://github.com/wevm/wagmi/issues/4140\n                        if (accounts.length > 0) {\n                            const sortedAccounts = await this.getAccounts();\n                            accounts = sortedAccounts;\n                        }\n                    } catch (err) {\n                        const error = err;\n                        // Not all injected providers support `wallet_requestPermissions` (e.g. MetaMask iOS).\n                        // Only bubble up error if user rejects request\n                        if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                        // Or prompt is already open\n                        if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError.code) throw error;\n                    }\n                }\n                try {\n                    if (!accounts?.length && !isReconnecting) {\n                        const requestedAccounts = await provider.request({\n                            method: \"eth_requestAccounts\"\n                        });\n                        accounts = requestedAccounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n                    }\n                    // Manage EIP-1193 event listeners\n                    // https://eips.ethereum.org/EIPS/eip-1193#events\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                    // Switch to chain if provided\n                    let currentChainId = await this.getChainId();\n                    if (chainId && currentChainId !== chainId) {\n                        const chain = await this.switchChain({\n                            chainId\n                        }).catch((error)=>{\n                            if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw error;\n                            return {\n                                id: currentChainId\n                            };\n                        });\n                        currentChainId = chain?.id ?? currentChainId;\n                    }\n                    // Remove disconnected shim if it exists\n                    if (shimDisconnect) await config.storage?.removeItem(`${this.id}.disconnected`);\n                    // Add connected shim if no target exists\n                    if (!parameters.target) await config.storage?.setItem(\"injected.connected\", true);\n                    return {\n                        accounts,\n                        chainId: currentChainId\n                    };\n                } catch (err) {\n                    const error = err;\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.ResourceUnavailableRpcError(error);\n                    throw error;\n                }\n            },\n            async disconnect () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                // Manage EIP-1193 event listeners\n                if (chainChanged) {\n                    provider.removeListener(\"chainChanged\", chainChanged);\n                    chainChanged = undefined;\n                }\n                if (disconnect) {\n                    provider.removeListener(\"disconnect\", disconnect);\n                    disconnect = undefined;\n                }\n                if (!connect) {\n                    connect = this.onConnect.bind(this);\n                    provider.on(\"connect\", connect);\n                }\n                // Experimental support for MetaMask disconnect\n                // https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-2.md\n                try {\n                    // Adding timeout as not all wallets support this method and can hang\n                    // https://github.com/wevm/wagmi/issues/4064\n                    await (0,viem__WEBPACK_IMPORTED_MODULE_4__.withTimeout)(()=>// TODO: Remove explicit type for viem@3\n                        provider.request({\n                            // `'wallet_revokePermissions'` added in `viem@2.10.3`\n                            method: \"wallet_revokePermissions\",\n                            params: [\n                                {\n                                    eth_accounts: {}\n                                }\n                            ]\n                        }), {\n                        timeout: 100\n                    });\n                } catch  {}\n                // Add shim signalling connector is disconnected\n                if (shimDisconnect) {\n                    await config.storage?.setItem(`${this.id}.disconnected`, true);\n                }\n                if (!parameters.target) await config.storage?.removeItem(\"injected.connected\");\n            },\n            async getAccounts () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const accounts = await provider.request({\n                    method: \"eth_accounts\"\n                });\n                return accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x));\n            },\n            async getChainId () {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const hexChainId = await provider.request({\n                    method: \"eth_chainId\"\n                });\n                return Number(hexChainId);\n            },\n            async getProvider () {\n                if (true) return undefined;\n                let provider;\n                const target = getTarget();\n                if (typeof target.provider === \"function\") provider = target.provider(window);\n                else if (typeof target.provider === \"string\") provider = findProvider(window, target.provider);\n                else provider = target.provider;\n                // Some wallets do not conform to EIP-1193 (e.g. Trust Wallet)\n                // https://github.com/wevm/wagmi/issues/3526#issuecomment-1912683002\n                if (provider && !provider.removeListener) {\n                    // Try using `off` handler if it exists, otherwise noop\n                    if (\"off\" in provider && typeof provider.off === \"function\") provider.removeListener = provider.off;\n                    else provider.removeListener = ()=>{};\n                }\n                return provider;\n            },\n            async isAuthorized () {\n                try {\n                    const isDisconnected = shimDisconnect && // If shim exists in storage, connector is disconnected\n                    await config.storage?.getItem(`${this.id}.disconnected`);\n                    if (isDisconnected) return false;\n                    // Don't allow injected connector to connect if no target is set and it hasn't already connected\n                    // (e.g. flag in storage is not set). This prevents a targetless injected connector from connecting\n                    // automatically whenever there is a targeted connector configured.\n                    if (!parameters.target) {\n                        const connected = await config.storage?.getItem(\"injected.connected\");\n                        if (!connected) return false;\n                    }\n                    const provider = await this.getProvider();\n                    if (!provider) {\n                        if (unstable_shimAsyncInject !== undefined && unstable_shimAsyncInject !== false) {\n                            // If no provider is found, check for async injection\n                            // https://github.com/wevm/references/issues/167\n                            // https://github.com/MetaMask/detect-provider\n                            const handleEthereum = async ()=>{\n                                if (false) {}\n                                const provider = await this.getProvider();\n                                return !!provider;\n                            };\n                            const timeout = typeof unstable_shimAsyncInject === \"number\" ? unstable_shimAsyncInject : 1000;\n                            const res = await Promise.race([\n                                ... false ? 0 : [],\n                                new Promise((resolve)=>setTimeout(()=>resolve(handleEthereum()), timeout))\n                            ]);\n                            if (res) return true;\n                        }\n                        throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                    }\n                    // Use retry strategy as some injected wallets (e.g. MetaMask) fail to\n                    // immediately resolve JSON-RPC requests on page load.\n                    const accounts = await (0,viem__WEBPACK_IMPORTED_MODULE_5__.withRetry)(()=>this.getAccounts());\n                    return !!accounts.length;\n                } catch  {\n                    return false;\n                }\n            },\n            async switchChain ({ addEthereumChainParameter, chainId }) {\n                const provider = await this.getProvider();\n                if (!provider) throw new _errors_connector_js__WEBPACK_IMPORTED_MODULE_1__.ProviderNotFoundError();\n                const chain = config.chains.find((x)=>x.id === chainId);\n                if (!chain) throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(new _errors_config_js__WEBPACK_IMPORTED_MODULE_6__.ChainNotConfiguredError());\n                const promise = new Promise((resolve)=>{\n                    const listener = (data)=>{\n                        if (\"chainId\" in data && data.chainId === chainId) {\n                            config.emitter.off(\"change\", listener);\n                            resolve();\n                        }\n                    };\n                    config.emitter.on(\"change\", listener);\n                });\n                try {\n                    await Promise.all([\n                        provider.request({\n                            method: \"wallet_switchEthereumChain\",\n                            params: [\n                                {\n                                    chainId: (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId)\n                                }\n                            ]\n                        })// During `'wallet_switchEthereumChain'`, MetaMask makes a `'net_version'` RPC call to the target chain.\n                        // If this request fails, MetaMask does not emit the `'chainChanged'` event, but will still switch the chain.\n                        // To counter this behavior, we request and emit the current chain ID to confirm the chain switch either via\n                        // this callback or an externally emitted `'chainChanged'` event.\n                        // https://github.com/MetaMask/metamask-extension/issues/24247\n                        .then(async ()=>{\n                            const currentChainId = await this.getChainId();\n                            if (currentChainId === chainId) config.emitter.emit(\"change\", {\n                                chainId\n                            });\n                        }),\n                        promise\n                    ]);\n                    return chain;\n                } catch (err) {\n                    const error = err;\n                    // Indicates chain is not added to provider\n                    if (error.code === 4902 || // Unwrapping for MetaMask Mobile\n                    // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n                    error?.data?.originalError?.code === 4902) {\n                        try {\n                            const { default: blockExplorer, ...blockExplorers } = chain.blockExplorers ?? {};\n                            let blockExplorerUrls;\n                            if (addEthereumChainParameter?.blockExplorerUrls) blockExplorerUrls = addEthereumChainParameter.blockExplorerUrls;\n                            else if (blockExplorer) blockExplorerUrls = [\n                                blockExplorer.url,\n                                ...Object.values(blockExplorers).map((x)=>x.url)\n                            ];\n                            let rpcUrls;\n                            if (addEthereumChainParameter?.rpcUrls?.length) rpcUrls = addEthereumChainParameter.rpcUrls;\n                            else rpcUrls = [\n                                chain.rpcUrls.default?.http[0] ?? \"\"\n                            ];\n                            const addEthereumChain = {\n                                blockExplorerUrls,\n                                chainId: (0,viem__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId),\n                                chainName: addEthereumChainParameter?.chainName ?? chain.name,\n                                iconUrls: addEthereumChainParameter?.iconUrls,\n                                nativeCurrency: addEthereumChainParameter?.nativeCurrency ?? chain.nativeCurrency,\n                                rpcUrls\n                            };\n                            await Promise.all([\n                                provider.request({\n                                    method: \"wallet_addEthereumChain\",\n                                    params: [\n                                        addEthereumChain\n                                    ]\n                                }).then(async ()=>{\n                                    const currentChainId = await this.getChainId();\n                                    if (currentChainId === chainId) config.emitter.emit(\"change\", {\n                                        chainId\n                                    });\n                                    else throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(new Error(\"User rejected switch after adding network.\"));\n                                }),\n                                promise\n                            ]);\n                            return chain;\n                        } catch (error) {\n                            throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                        }\n                    }\n                    if (error.code === viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError.code) throw new viem__WEBPACK_IMPORTED_MODULE_3__.UserRejectedRequestError(error);\n                    throw new viem__WEBPACK_IMPORTED_MODULE_3__.SwitchChainError(error);\n                }\n            },\n            async onAccountsChanged (accounts) {\n                // Disconnect if there are no accounts\n                if (accounts.length === 0) this.onDisconnect();\n                else if (config.emitter.listenerCount(\"connect\")) {\n                    const chainId = (await this.getChainId()).toString();\n                    this.onConnect({\n                        chainId\n                    });\n                    // Remove disconnected shim if it exists\n                    if (shimDisconnect) await config.storage?.removeItem(`${this.id}.disconnected`);\n                } else config.emitter.emit(\"change\", {\n                    accounts: accounts.map((x)=>(0,viem__WEBPACK_IMPORTED_MODULE_2__.getAddress)(x))\n                });\n            },\n            onChainChanged (chain) {\n                const chainId = Number(chain);\n                config.emitter.emit(\"change\", {\n                    chainId\n                });\n            },\n            async onConnect (connectInfo) {\n                const accounts = await this.getAccounts();\n                if (accounts.length === 0) return;\n                const chainId = Number(connectInfo.chainId);\n                config.emitter.emit(\"connect\", {\n                    accounts,\n                    chainId\n                });\n                // Manage EIP-1193 event listeners\n                const provider = await this.getProvider();\n                if (provider) {\n                    if (connect) {\n                        provider.removeListener(\"connect\", connect);\n                        connect = undefined;\n                    }\n                    if (!accountsChanged) {\n                        accountsChanged = this.onAccountsChanged.bind(this);\n                        provider.on(\"accountsChanged\", accountsChanged);\n                    }\n                    if (!chainChanged) {\n                        chainChanged = this.onChainChanged.bind(this);\n                        provider.on(\"chainChanged\", chainChanged);\n                    }\n                    if (!disconnect) {\n                        disconnect = this.onDisconnect.bind(this);\n                        provider.on(\"disconnect\", disconnect);\n                    }\n                }\n            },\n            async onDisconnect (error) {\n                const provider = await this.getProvider();\n                // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n                // https://github.com/MetaMask/providers/pull/120\n                if (error && error.code === 1013) {\n                    if (provider && !!(await this.getAccounts()).length) return;\n                }\n                // No need to remove `${this.id}.disconnected` from storage because `onDisconnect` is typically\n                // only called when the wallet is disconnected through the wallet's interface, meaning the wallet\n                // actually disconnected and we don't need to simulate it.\n                config.emitter.emit(\"disconnect\");\n                // Manage EIP-1193 event listeners\n                if (provider) {\n                    if (chainChanged) {\n                        provider.removeListener(\"chainChanged\", chainChanged);\n                        chainChanged = undefined;\n                    }\n                    if (disconnect) {\n                        provider.removeListener(\"disconnect\", disconnect);\n                        disconnect = undefined;\n                    }\n                    if (!connect) {\n                        connect = this.onConnect.bind(this);\n                        provider.on(\"connect\", connect);\n                    }\n                }\n            }\n        }));\n}\nconst targetMap = {\n    coinbaseWallet: {\n        id: \"coinbaseWallet\",\n        name: \"Coinbase Wallet\",\n        provider (window1) {\n            if (window1?.coinbaseWalletExtension) return window1.coinbaseWalletExtension;\n            return findProvider(window1, \"isCoinbaseWallet\");\n        }\n    },\n    metaMask: {\n        id: \"metaMask\",\n        name: \"MetaMask\",\n        provider (window1) {\n            return findProvider(window1, (provider)=>{\n                if (!provider.isMetaMask) return false;\n                // Brave tries to make itself look like MetaMask\n                // Could also try RPC `web3_clientVersion` if following is unreliable\n                if (provider.isBraveWallet && !provider._events && !provider._state) return false;\n                // Other wallets that try to look like MetaMask\n                const flags = [\n                    \"isApexWallet\",\n                    \"isAvalanche\",\n                    \"isBitKeep\",\n                    \"isBlockWallet\",\n                    \"isKuCoinWallet\",\n                    \"isMathWallet\",\n                    \"isOkxWallet\",\n                    \"isOKExWallet\",\n                    \"isOneInchIOSWallet\",\n                    \"isOneInchAndroidWallet\",\n                    \"isOpera\",\n                    \"isPhantom\",\n                    \"isPortal\",\n                    \"isRabby\",\n                    \"isTokenPocket\",\n                    \"isTokenary\",\n                    \"isUniswapWallet\",\n                    \"isZerion\"\n                ];\n                for (const flag of flags)if (provider[flag]) return false;\n                return true;\n            });\n        }\n    },\n    phantom: {\n        id: \"phantom\",\n        name: \"Phantom\",\n        provider (window1) {\n            if (window1?.phantom?.ethereum) return window1.phantom?.ethereum;\n            return findProvider(window1, \"isPhantom\");\n        }\n    }\n};\nfunction findProvider(window1, select) {\n    function isProvider(provider) {\n        if (typeof select === \"function\") return select(provider);\n        if (typeof select === \"string\") return provider[select];\n        return true;\n    }\n    const ethereum = window1.ethereum;\n    if (ethereum?.providers) return ethereum.providers.find((provider)=>isProvider(provider));\n    if (ethereum && isProvider(ethereum)) return ethereum;\n    return undefined;\n} //# sourceMappingURL=injected.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createConfig.js":
/*!***********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createConfig.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConfig: () => (/* binding */ createConfig)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createClient.js\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! zustand/middleware */ \"(ssr)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/vanilla */ \"(ssr)/./node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var _connectors_injected_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./connectors/injected.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/connectors/injected.js\");\n/* harmony import */ var _createEmitter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createEmitter.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js\");\n/* harmony import */ var _createStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createStorage.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js\");\n/* harmony import */ var _errors_config_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors/config.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\");\n/* harmony import */ var _utils_uid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/uid.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./version.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\");\n\n\n\n\n\n\n\n\n\n\nfunction createConfig(parameters) {\n    const { multiInjectedProviderDiscovery = true, storage = (0,_createStorage_js__WEBPACK_IMPORTED_MODULE_0__.createStorage)({\n        storage: (0,_createStorage_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultStorage)()\n    }), syncConnectedChain = true, ssr = false, ...rest } = parameters;\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Set up connectors, clients, etc.\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    const mipd =  false ? 0 : undefined;\n    const chains = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(()=>rest.chains);\n    const connectors = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)(()=>{\n        const collection = [];\n        const rdnsSet = new Set();\n        for (const connectorFns of rest.connectors ?? []){\n            const connector = setup(connectorFns);\n            collection.push(connector);\n            if (!ssr && connector.rdns) {\n                const rdnsValues = typeof connector.rdns === \"string\" ? [\n                    connector.rdns\n                ] : connector.rdns;\n                for (const rdns of rdnsValues){\n                    rdnsSet.add(rdns);\n                }\n            }\n        }\n        if (!ssr && mipd) {\n            const providers = mipd.getProviders();\n            for (const provider of providers){\n                if (rdnsSet.has(provider.info.rdns)) continue;\n                collection.push(setup(providerDetailToConnector(provider)));\n            }\n        }\n        return collection;\n    });\n    function setup(connectorFn) {\n        // Set up emitter with uid and add to connector so they are \"linked\" together.\n        const emitter = (0,_createEmitter_js__WEBPACK_IMPORTED_MODULE_2__.createEmitter)((0,_utils_uid_js__WEBPACK_IMPORTED_MODULE_3__.uid)());\n        const connector = {\n            ...connectorFn({\n                emitter,\n                chains: chains.getState(),\n                storage,\n                transports: rest.transports\n            }),\n            emitter,\n            uid: emitter.uid\n        };\n        // Start listening for `connect` events on connector setup\n        // This allows connectors to \"connect\" themselves without user interaction (e.g. MetaMask's \"Manually connect to current site\")\n        emitter.on(\"connect\", connect);\n        connector.setup?.();\n        return connector;\n    }\n    function providerDetailToConnector(providerDetail) {\n        const { info } = providerDetail;\n        const provider = providerDetail.provider;\n        return (0,_connectors_injected_js__WEBPACK_IMPORTED_MODULE_4__.injected)({\n            target: {\n                ...info,\n                id: info.rdns,\n                provider\n            }\n        });\n    }\n    const clients = new Map();\n    function getClient(config = {}) {\n        const chainId = config.chainId ?? store.getState().chainId;\n        const chain = chains.getState().find((x)=>x.id === chainId);\n        // chainId specified and not configured\n        if (config.chainId && !chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError();\n        {\n            const client = clients.get(store.getState().chainId);\n            if (client && !chain) return client;\n            if (!chain) throw new _errors_config_js__WEBPACK_IMPORTED_MODULE_5__.ChainNotConfiguredError();\n        }\n        // If a memoized client exists for a chain id, use that.\n        {\n            const client = clients.get(chainId);\n            if (client) return client;\n        }\n        let client;\n        if (rest.client) client = rest.client({\n            chain\n        });\n        else {\n            const chainId = chain.id;\n            const chainIds = chains.getState().map((x)=>x.id);\n            // Grab all properties off `rest` and resolve for use in `createClient`\n            const properties = {};\n            const entries = Object.entries(rest);\n            for (const [key, value] of entries){\n                if (key === \"chains\" || key === \"client\" || key === \"connectors\" || key === \"transports\") continue;\n                if (typeof value === \"object\") {\n                    // check if value is chainId-specific since some values can be objects\n                    // e.g. { batch: { multicall: { batchSize: 1024 } } }\n                    if (chainId in value) properties[key] = value[chainId];\n                    else {\n                        // check if value is chainId-specific, but does not have value for current chainId\n                        const hasChainSpecificValue = chainIds.some((x)=>x in value);\n                        if (hasChainSpecificValue) continue;\n                        properties[key] = value;\n                    }\n                } else properties[key] = value;\n            }\n            client = (0,viem__WEBPACK_IMPORTED_MODULE_6__.createClient)({\n                ...properties,\n                chain,\n                batch: properties.batch ?? {\n                    multicall: true\n                },\n                transport: (parameters)=>rest.transports[chainId]({\n                        ...parameters,\n                        connectors\n                    })\n            });\n        }\n        clients.set(chainId, client);\n        return client;\n    }\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Create store\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    function getInitialState() {\n        return {\n            chainId: chains.getState()[0].id,\n            connections: new Map(),\n            current: null,\n            status: \"disconnected\"\n        };\n    }\n    let currentVersion;\n    const prefix = \"0.0.0-canary-\";\n    if (_version_js__WEBPACK_IMPORTED_MODULE_7__.version.startsWith(prefix)) currentVersion = Number.parseInt(_version_js__WEBPACK_IMPORTED_MODULE_7__.version.replace(prefix, \"\"));\n    else currentVersion = Number.parseInt(_version_js__WEBPACK_IMPORTED_MODULE_7__.version.split(\".\")[0] ?? \"0\");\n    const store = (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_1__.createStore)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.subscribeWithSelector)(// only use persist middleware if storage exists\n    storage ? (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_8__.persist)(getInitialState, {\n        migrate (persistedState, version) {\n            if (version === currentVersion) return persistedState;\n            const initialState = getInitialState();\n            const chainId = validatePersistedChainId(persistedState, initialState.chainId);\n            return {\n                ...initialState,\n                chainId\n            };\n        },\n        name: \"store\",\n        partialize (state) {\n            // Only persist \"critical\" store properties to preserve storage size.\n            return {\n                connections: {\n                    __type: \"Map\",\n                    value: Array.from(state.connections.entries()).map(([key, connection])=>{\n                        const { id, name, type, uid } = connection.connector;\n                        const connector = {\n                            id,\n                            name,\n                            type,\n                            uid\n                        };\n                        return [\n                            key,\n                            {\n                                ...connection,\n                                connector\n                            }\n                        ];\n                    })\n                },\n                chainId: state.chainId,\n                current: state.current\n            };\n        },\n        merge (persistedState, currentState) {\n            // `status` should not be persisted as it messes with reconnection\n            if (typeof persistedState === \"object\" && persistedState && \"status\" in persistedState) delete persistedState.status;\n            // Make sure persisted `chainId` is valid\n            const chainId = validatePersistedChainId(persistedState, currentState.chainId);\n            return {\n                ...currentState,\n                ...persistedState,\n                chainId\n            };\n        },\n        skipHydration: ssr,\n        storage: storage,\n        version: currentVersion\n    }) : getInitialState));\n    store.setState(getInitialState());\n    function validatePersistedChainId(persistedState, defaultChainId) {\n        return persistedState && typeof persistedState === \"object\" && \"chainId\" in persistedState && typeof persistedState.chainId === \"number\" && chains.getState().some((x)=>x.id === persistedState.chainId) ? persistedState.chainId : defaultChainId;\n    }\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Subscribe to changes\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Update default chain when connector chain changes\n    if (syncConnectedChain) store.subscribe(({ connections, current })=>current ? connections.get(current)?.chainId : undefined, (chainId)=>{\n        // If chain is not configured, then don't switch over to it.\n        const isChainConfigured = chains.getState().some((x)=>x.id === chainId);\n        if (!isChainConfigured) return;\n        return store.setState((x)=>({\n                ...x,\n                chainId: chainId ?? x.chainId\n            }));\n    });\n    // EIP-6963 subscribe for new wallet providers\n    mipd?.subscribe((providerDetails)=>{\n        const connectorIdSet = new Set();\n        const connectorRdnsSet = new Set();\n        for (const connector of connectors.getState()){\n            connectorIdSet.add(connector.id);\n            if (connector.rdns) {\n                const rdnsValues = typeof connector.rdns === \"string\" ? [\n                    connector.rdns\n                ] : connector.rdns;\n                for (const rdns of rdnsValues){\n                    connectorRdnsSet.add(rdns);\n                }\n            }\n        }\n        const newConnectors = [];\n        for (const providerDetail of providerDetails){\n            if (connectorRdnsSet.has(providerDetail.info.rdns)) continue;\n            const connector = setup(providerDetailToConnector(providerDetail));\n            if (connectorIdSet.has(connector.id)) continue;\n            newConnectors.push(connector);\n        }\n        if (storage && !store.persist.hasHydrated()) return;\n        connectors.setState((x)=>[\n                ...x,\n                ...newConnectors\n            ], true);\n    });\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    // Emitter listeners\n    /////////////////////////////////////////////////////////////////////////////////////////////////\n    function change(data) {\n        store.setState((x)=>{\n            const connection = x.connections.get(data.uid);\n            if (!connection) return x;\n            return {\n                ...x,\n                connections: new Map(x.connections).set(data.uid, {\n                    accounts: data.accounts ?? connection.accounts,\n                    chainId: data.chainId ?? connection.chainId,\n                    connector: connection.connector\n                })\n            };\n        });\n    }\n    function connect(data) {\n        // Disable handling if reconnecting/connecting\n        if (store.getState().status === \"connecting\" || store.getState().status === \"reconnecting\") return;\n        store.setState((x)=>{\n            const connector = connectors.getState().find((x)=>x.uid === data.uid);\n            if (!connector) return x;\n            if (connector.emitter.listenerCount(\"connect\")) connector.emitter.off(\"connect\", change);\n            if (!connector.emitter.listenerCount(\"change\")) connector.emitter.on(\"change\", change);\n            if (!connector.emitter.listenerCount(\"disconnect\")) connector.emitter.on(\"disconnect\", disconnect);\n            return {\n                ...x,\n                connections: new Map(x.connections).set(data.uid, {\n                    accounts: data.accounts,\n                    chainId: data.chainId,\n                    connector: connector\n                }),\n                current: data.uid,\n                status: \"connected\"\n            };\n        });\n    }\n    function disconnect(data) {\n        store.setState((x)=>{\n            const connection = x.connections.get(data.uid);\n            if (connection) {\n                const connector = connection.connector;\n                if (connector.emitter.listenerCount(\"change\")) connection.connector.emitter.off(\"change\", change);\n                if (connector.emitter.listenerCount(\"disconnect\")) connection.connector.emitter.off(\"disconnect\", disconnect);\n                if (!connector.emitter.listenerCount(\"connect\")) connection.connector.emitter.on(\"connect\", connect);\n            }\n            x.connections.delete(data.uid);\n            if (x.connections.size === 0) return {\n                ...x,\n                connections: new Map(),\n                current: null,\n                status: \"disconnected\"\n            };\n            const nextConnection = x.connections.values().next().value;\n            return {\n                ...x,\n                connections: new Map(x.connections),\n                current: nextConnection.connector.uid\n            };\n        });\n    }\n    return {\n        get chains () {\n            return chains.getState();\n        },\n        get connectors () {\n            return connectors.getState();\n        },\n        storage,\n        getClient,\n        get state () {\n            return store.getState();\n        },\n        setState (value) {\n            let newState;\n            if (typeof value === \"function\") newState = value(store.getState());\n            else newState = value;\n            // Reset state if it got set to something not matching the base state\n            const initialState = getInitialState();\n            if (typeof newState !== \"object\") newState = initialState;\n            const isCorrupt = Object.keys(initialState).some((x)=>!(x in newState));\n            if (isCorrupt) newState = initialState;\n            store.setState(newState, true);\n        },\n        subscribe (selector, listener, options) {\n            return store.subscribe(selector, listener, options ? {\n                ...options,\n                fireImmediately: options.emitImmediately\n            } : undefined);\n        },\n        _internal: {\n            mipd,\n            store,\n            ssr: Boolean(ssr),\n            syncConnectedChain,\n            transports: rest.transports,\n            chains: {\n                setState (value) {\n                    const nextChains = typeof value === \"function\" ? value(chains.getState()) : value;\n                    if (nextChains.length === 0) return;\n                    return chains.setState(nextChains, true);\n                },\n                subscribe (listener) {\n                    return chains.subscribe(listener);\n                }\n            },\n            connectors: {\n                providerDetailToConnector,\n                setup: setup,\n                setState (value) {\n                    return connectors.setState(typeof value === \"function\" ? value(connectors.getState()) : value, true);\n                },\n                subscribe (listener) {\n                    return connectors.subscribe(listener);\n                }\n            },\n            events: {\n                change,\n                connect,\n                disconnect\n            }\n        }\n    };\n} //# sourceMappingURL=createConfig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBa0Q7QUFDYjtBQUMrQjtBQUN0QjtBQUNNO0FBQ0Q7QUFDb0I7QUFDVjtBQUN4QjtBQUNFO0FBQ2hDLFNBQVNZLGFBQWFDLFVBQVU7SUFDbkMsTUFBTSxFQUFFQyxpQ0FBaUMsSUFBSSxFQUFFQyxVQUFVUixnRUFBYUEsQ0FBQztRQUNuRVEsU0FBU1Asb0VBQWlCQTtJQUM5QixFQUFFLEVBQUVRLHFCQUFxQixJQUFJLEVBQUVDLE1BQU0sS0FBSyxFQUFFLEdBQUdDLE1BQU0sR0FBR0w7SUFDeEQsaUdBQWlHO0lBQ2pHLG1DQUFtQztJQUNuQyxpR0FBaUc7SUFDakcsTUFBTU0sT0FBTyxNQUErREwsR0FDdEViLENBQVlBLEdBQ1ptQjtJQUNOLE1BQU1DLFNBQVNyQiw0REFBV0EsQ0FBQyxJQUFNa0IsS0FBS0csTUFBTTtJQUM1QyxNQUFNQyxhQUFhdEIsNERBQVdBLENBQUM7UUFDM0IsTUFBTXVCLGFBQWEsRUFBRTtRQUNyQixNQUFNQyxVQUFVLElBQUlDO1FBQ3BCLEtBQUssTUFBTUMsZ0JBQWdCUixLQUFLSSxVQUFVLElBQUksRUFBRSxDQUFFO1lBQzlDLE1BQU1LLFlBQVlDLE1BQU1GO1lBQ3hCSCxXQUFXTSxJQUFJLENBQUNGO1lBQ2hCLElBQUksQ0FBQ1YsT0FBT1UsVUFBVUcsSUFBSSxFQUFFO2dCQUN4QixNQUFNQyxhQUFhLE9BQU9KLFVBQVVHLElBQUksS0FBSyxXQUFXO29CQUFDSCxVQUFVRyxJQUFJO2lCQUFDLEdBQUdILFVBQVVHLElBQUk7Z0JBQ3pGLEtBQUssTUFBTUEsUUFBUUMsV0FBWTtvQkFDM0JQLFFBQVFRLEdBQUcsQ0FBQ0Y7Z0JBQ2hCO1lBQ0o7UUFDSjtRQUNBLElBQUksQ0FBQ2IsT0FBT0UsTUFBTTtZQUNkLE1BQU1jLFlBQVlkLEtBQUtlLFlBQVk7WUFDbkMsS0FBSyxNQUFNQyxZQUFZRixVQUFXO2dCQUM5QixJQUFJVCxRQUFRWSxHQUFHLENBQUNELFNBQVNFLElBQUksQ0FBQ1AsSUFBSSxHQUM5QjtnQkFDSlAsV0FBV00sSUFBSSxDQUFDRCxNQUFNVSwwQkFBMEJIO1lBQ3BEO1FBQ0o7UUFDQSxPQUFPWjtJQUNYO0lBQ0EsU0FBU0ssTUFBTVcsV0FBVztRQUN0Qiw4RUFBOEU7UUFDOUUsTUFBTUMsVUFBVWxDLGdFQUFhQSxDQUFDSSxrREFBR0E7UUFDakMsTUFBTWlCLFlBQVk7WUFDZCxHQUFHWSxZQUFZO2dCQUNYQztnQkFDQW5CLFFBQVFBLE9BQU9vQixRQUFRO2dCQUN2QjFCO2dCQUNBMkIsWUFBWXhCLEtBQUt3QixVQUFVO1lBQy9CLEVBQUU7WUFDRkY7WUFDQTlCLEtBQUs4QixRQUFROUIsR0FBRztRQUNwQjtRQUNBLDBEQUEwRDtRQUMxRCwrSEFBK0g7UUFDL0g4QixRQUFRRyxFQUFFLENBQUMsV0FBV0M7UUFDdEJqQixVQUFVQyxLQUFLO1FBQ2YsT0FBT0Q7SUFDWDtJQUNBLFNBQVNXLDBCQUEwQk8sY0FBYztRQUM3QyxNQUFNLEVBQUVSLElBQUksRUFBRSxHQUFHUTtRQUNqQixNQUFNVixXQUFXVSxlQUFlVixRQUFRO1FBQ3hDLE9BQU85QixpRUFBUUEsQ0FBQztZQUFFeUMsUUFBUTtnQkFBRSxHQUFHVCxJQUFJO2dCQUFFVSxJQUFJVixLQUFLUCxJQUFJO2dCQUFFSztZQUFTO1FBQUU7SUFDbkU7SUFDQSxNQUFNYSxVQUFVLElBQUlDO0lBQ3BCLFNBQVNDLFVBQVVDLFNBQVMsQ0FBQyxDQUFDO1FBQzFCLE1BQU1DLFVBQVVELE9BQU9DLE9BQU8sSUFBSUMsTUFBTVosUUFBUSxHQUFHVyxPQUFPO1FBQzFELE1BQU1FLFFBQVFqQyxPQUFPb0IsUUFBUSxHQUFHYyxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRVQsRUFBRSxLQUFLSztRQUNyRCx1Q0FBdUM7UUFDdkMsSUFBSUQsT0FBT0MsT0FBTyxJQUFJLENBQUNFLE9BQ25CLE1BQU0sSUFBSTdDLHNFQUF1QkE7UUFDckM7WUFDSSxNQUFNZ0QsU0FBU1QsUUFBUVUsR0FBRyxDQUFDTCxNQUFNWixRQUFRLEdBQUdXLE9BQU87WUFDbkQsSUFBSUssVUFBVSxDQUFDSCxPQUNYLE9BQU9HO1lBQ1gsSUFBSSxDQUFDSCxPQUNELE1BQU0sSUFBSTdDLHNFQUF1QkE7UUFDekM7UUFDQSx3REFBd0Q7UUFDeEQ7WUFDSSxNQUFNZ0QsU0FBU1QsUUFBUVUsR0FBRyxDQUFDTjtZQUMzQixJQUFJSyxRQUNBLE9BQU9BO1FBQ2Y7UUFDQSxJQUFJQTtRQUNKLElBQUl2QyxLQUFLdUMsTUFBTSxFQUNYQSxTQUFTdkMsS0FBS3VDLE1BQU0sQ0FBQztZQUFFSDtRQUFNO2FBQzVCO1lBQ0QsTUFBTUYsVUFBVUUsTUFBTVAsRUFBRTtZQUN4QixNQUFNWSxXQUFXdEMsT0FBT29CLFFBQVEsR0FBR21CLEdBQUcsQ0FBQyxDQUFDSixJQUFNQSxFQUFFVCxFQUFFO1lBQ2xELHVFQUF1RTtZQUN2RSxNQUFNYyxhQUFhLENBQUM7WUFDcEIsTUFBTUMsVUFBVUMsT0FBT0QsT0FBTyxDQUFDNUM7WUFDL0IsS0FBSyxNQUFNLENBQUM4QyxLQUFLQyxNQUFNLElBQUlILFFBQVM7Z0JBQ2hDLElBQUlFLFFBQVEsWUFDUkEsUUFBUSxZQUNSQSxRQUFRLGdCQUNSQSxRQUFRLGNBQ1I7Z0JBQ0osSUFBSSxPQUFPQyxVQUFVLFVBQVU7b0JBQzNCLHNFQUFzRTtvQkFDdEUscURBQXFEO29CQUNyRCxJQUFJYixXQUFXYSxPQUNYSixVQUFVLENBQUNHLElBQUksR0FBR0MsS0FBSyxDQUFDYixRQUFRO3lCQUMvQjt3QkFDRCxrRkFBa0Y7d0JBQ2xGLE1BQU1jLHdCQUF3QlAsU0FBU1EsSUFBSSxDQUFDLENBQUNYLElBQU1BLEtBQUtTO3dCQUN4RCxJQUFJQyx1QkFDQTt3QkFDSkwsVUFBVSxDQUFDRyxJQUFJLEdBQUdDO29CQUN0QjtnQkFDSixPQUVJSixVQUFVLENBQUNHLElBQUksR0FBR0M7WUFDMUI7WUFDQVIsU0FBU3ZELGtEQUFZQSxDQUFDO2dCQUNsQixHQUFHMkQsVUFBVTtnQkFDYlA7Z0JBQ0FjLE9BQU9QLFdBQVdPLEtBQUssSUFBSTtvQkFBRUMsV0FBVztnQkFBSztnQkFDN0NDLFdBQVcsQ0FBQ3pELGFBQWVLLEtBQUt3QixVQUFVLENBQUNVLFFBQVEsQ0FBQzt3QkFBRSxHQUFHdkMsVUFBVTt3QkFBRVM7b0JBQVc7WUFDcEY7UUFDSjtRQUNBMEIsUUFBUXVCLEdBQUcsQ0FBQ25CLFNBQVNLO1FBQ3JCLE9BQU9BO0lBQ1g7SUFDQSxpR0FBaUc7SUFDakcsZUFBZTtJQUNmLGlHQUFpRztJQUNqRyxTQUFTZTtRQUNMLE9BQU87WUFDSHBCLFNBQVMvQixPQUFPb0IsUUFBUSxFQUFFLENBQUMsRUFBRSxDQUFDTSxFQUFFO1lBQ2hDMEIsYUFBYSxJQUFJeEI7WUFDakJ5QixTQUFTO1lBQ1RDLFFBQVE7UUFDWjtJQUNKO0lBQ0EsSUFBSUM7SUFDSixNQUFNQyxTQUFTO0lBQ2YsSUFBSWxFLGdEQUFPQSxDQUFDbUUsVUFBVSxDQUFDRCxTQUNuQkQsaUJBQWlCRyxPQUFPQyxRQUFRLENBQUNyRSxnREFBT0EsQ0FBQ3NFLE9BQU8sQ0FBQ0osUUFBUTtTQUd6REQsaUJBQWlCRyxPQUFPQyxRQUFRLENBQUNyRSxnREFBT0EsQ0FBQ3VFLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJO0lBQzlELE1BQU03QixRQUFRckQsNERBQVdBLENBQUNJLHlFQUFxQkEsQ0FDL0MsZ0RBQWdEO0lBQ2hEVyxVQUNNWiwyREFBT0EsQ0FBQ3FFLGlCQUFpQjtRQUN2QlcsU0FBUUMsY0FBYyxFQUFFekUsT0FBTztZQUMzQixJQUFJQSxZQUFZaUUsZ0JBQ1osT0FBT1E7WUFDWCxNQUFNQyxlQUFlYjtZQUNyQixNQUFNcEIsVUFBVWtDLHlCQUF5QkYsZ0JBQWdCQyxhQUFhakMsT0FBTztZQUM3RSxPQUFPO2dCQUFFLEdBQUdpQyxZQUFZO2dCQUFFakM7WUFBUTtRQUN0QztRQUNBbUMsTUFBTTtRQUNOQyxZQUFXQyxLQUFLO1lBQ1oscUVBQXFFO1lBQ3JFLE9BQU87Z0JBQ0hoQixhQUFhO29CQUNUaUIsUUFBUTtvQkFDUnpCLE9BQU8wQixNQUFNQyxJQUFJLENBQUNILE1BQU1oQixXQUFXLENBQUNYLE9BQU8sSUFBSUYsR0FBRyxDQUFDLENBQUMsQ0FBQ0ksS0FBSzZCLFdBQVc7d0JBQ2pFLE1BQU0sRUFBRTlDLEVBQUUsRUFBRXdDLElBQUksRUFBRU8sSUFBSSxFQUFFcEYsR0FBRyxFQUFFLEdBQUdtRixXQUFXbEUsU0FBUzt3QkFDcEQsTUFBTUEsWUFBWTs0QkFBRW9COzRCQUFJd0M7NEJBQU1POzRCQUFNcEY7d0JBQUk7d0JBQ3hDLE9BQU87NEJBQUNzRDs0QkFBSztnQ0FBRSxHQUFHNkIsVUFBVTtnQ0FBRWxFOzRCQUFVO3lCQUFFO29CQUM5QztnQkFDSjtnQkFDQXlCLFNBQVNxQyxNQUFNckMsT0FBTztnQkFDdEJzQixTQUFTZSxNQUFNZixPQUFPO1lBQzFCO1FBQ0o7UUFDQXFCLE9BQU1YLGNBQWMsRUFBRVksWUFBWTtZQUM5QixrRUFBa0U7WUFDbEUsSUFBSSxPQUFPWixtQkFBbUIsWUFDMUJBLGtCQUNBLFlBQVlBLGdCQUNaLE9BQU9BLGVBQWVULE1BQU07WUFDaEMseUNBQXlDO1lBQ3pDLE1BQU12QixVQUFVa0MseUJBQXlCRixnQkFBZ0JZLGFBQWE1QyxPQUFPO1lBQzdFLE9BQU87Z0JBQ0gsR0FBRzRDLFlBQVk7Z0JBQ2YsR0FBR1osY0FBYztnQkFDakJoQztZQUNKO1FBQ0o7UUFDQTZDLGVBQWVoRjtRQUNmRixTQUFTQTtRQUNUSixTQUFTaUU7SUFDYixLQUNFSjtJQUNObkIsTUFBTTZDLFFBQVEsQ0FBQzFCO0lBQ2YsU0FBU2MseUJBQXlCRixjQUFjLEVBQUVlLGNBQWM7UUFDNUQsT0FBT2Ysa0JBQ0gsT0FBT0EsbUJBQW1CLFlBQzFCLGFBQWFBLGtCQUNiLE9BQU9BLGVBQWVoQyxPQUFPLEtBQUssWUFDbEMvQixPQUFPb0IsUUFBUSxHQUFHMEIsSUFBSSxDQUFDLENBQUNYLElBQU1BLEVBQUVULEVBQUUsS0FBS3FDLGVBQWVoQyxPQUFPLElBQzNEZ0MsZUFBZWhDLE9BQU8sR0FDdEIrQztJQUNWO0lBQ0EsaUdBQWlHO0lBQ2pHLHVCQUF1QjtJQUN2QixpR0FBaUc7SUFDakcsb0RBQW9EO0lBQ3BELElBQUluRixvQkFDQXFDLE1BQU0rQyxTQUFTLENBQUMsQ0FBQyxFQUFFM0IsV0FBVyxFQUFFQyxPQUFPLEVBQUUsR0FBS0EsVUFBVUQsWUFBWWYsR0FBRyxDQUFDZ0IsVUFBVXRCLFVBQVVoQyxXQUFXLENBQUNnQztRQUNwRyw0REFBNEQ7UUFDNUQsTUFBTWlELG9CQUFvQmhGLE9BQ3JCb0IsUUFBUSxHQUNSMEIsSUFBSSxDQUFDLENBQUNYLElBQU1BLEVBQUVULEVBQUUsS0FBS0s7UUFDMUIsSUFBSSxDQUFDaUQsbUJBQ0Q7UUFDSixPQUFPaEQsTUFBTTZDLFFBQVEsQ0FBQyxDQUFDMUMsSUFBTztnQkFDMUIsR0FBR0EsQ0FBQztnQkFDSkosU0FBU0EsV0FBV0ksRUFBRUosT0FBTztZQUNqQztJQUNKO0lBQ0osOENBQThDO0lBQzlDakMsTUFBTWlGLFVBQVUsQ0FBQ0U7UUFDYixNQUFNQyxpQkFBaUIsSUFBSTlFO1FBQzNCLE1BQU0rRSxtQkFBbUIsSUFBSS9FO1FBQzdCLEtBQUssTUFBTUUsYUFBYUwsV0FBV21CLFFBQVEsR0FBSTtZQUMzQzhELGVBQWV2RSxHQUFHLENBQUNMLFVBQVVvQixFQUFFO1lBQy9CLElBQUlwQixVQUFVRyxJQUFJLEVBQUU7Z0JBQ2hCLE1BQU1DLGFBQWEsT0FBT0osVUFBVUcsSUFBSSxLQUFLLFdBQVc7b0JBQUNILFVBQVVHLElBQUk7aUJBQUMsR0FBR0gsVUFBVUcsSUFBSTtnQkFDekYsS0FBSyxNQUFNQSxRQUFRQyxXQUFZO29CQUMzQnlFLGlCQUFpQnhFLEdBQUcsQ0FBQ0Y7Z0JBQ3pCO1lBQ0o7UUFDSjtRQUNBLE1BQU0yRSxnQkFBZ0IsRUFBRTtRQUN4QixLQUFLLE1BQU01RCxrQkFBa0J5RCxnQkFBaUI7WUFDMUMsSUFBSUUsaUJBQWlCcEUsR0FBRyxDQUFDUyxlQUFlUixJQUFJLENBQUNQLElBQUksR0FDN0M7WUFDSixNQUFNSCxZQUFZQyxNQUFNVSwwQkFBMEJPO1lBQ2xELElBQUkwRCxlQUFlbkUsR0FBRyxDQUFDVCxVQUFVb0IsRUFBRSxHQUMvQjtZQUNKMEQsY0FBYzVFLElBQUksQ0FBQ0Y7UUFDdkI7UUFDQSxJQUFJWixXQUFXLENBQUNzQyxNQUFNbEQsT0FBTyxDQUFDdUcsV0FBVyxJQUNyQztRQUNKcEYsV0FBVzRFLFFBQVEsQ0FBQyxDQUFDMUMsSUFBTTttQkFBSUE7bUJBQU1pRDthQUFjLEVBQUU7SUFDekQ7SUFDQSxpR0FBaUc7SUFDakcsb0JBQW9CO0lBQ3BCLGlHQUFpRztJQUNqRyxTQUFTRSxPQUFPQyxJQUFJO1FBQ2hCdkQsTUFBTTZDLFFBQVEsQ0FBQyxDQUFDMUM7WUFDWixNQUFNcUMsYUFBYXJDLEVBQUVpQixXQUFXLENBQUNmLEdBQUcsQ0FBQ2tELEtBQUtsRyxHQUFHO1lBQzdDLElBQUksQ0FBQ21GLFlBQ0QsT0FBT3JDO1lBQ1gsT0FBTztnQkFDSCxHQUFHQSxDQUFDO2dCQUNKaUIsYUFBYSxJQUFJeEIsSUFBSU8sRUFBRWlCLFdBQVcsRUFBRUYsR0FBRyxDQUFDcUMsS0FBS2xHLEdBQUcsRUFBRTtvQkFDOUNtRyxVQUFVRCxLQUFLQyxRQUFRLElBQ25CaEIsV0FBV2dCLFFBQVE7b0JBQ3ZCekQsU0FBU3dELEtBQUt4RCxPQUFPLElBQUl5QyxXQUFXekMsT0FBTztvQkFDM0N6QixXQUFXa0UsV0FBV2xFLFNBQVM7Z0JBQ25DO1lBQ0o7UUFDSjtJQUNKO0lBQ0EsU0FBU2lCLFFBQVFnRSxJQUFJO1FBQ2pCLDhDQUE4QztRQUM5QyxJQUFJdkQsTUFBTVosUUFBUSxHQUFHa0MsTUFBTSxLQUFLLGdCQUM1QnRCLE1BQU1aLFFBQVEsR0FBR2tDLE1BQU0sS0FBSyxnQkFDNUI7UUFDSnRCLE1BQU02QyxRQUFRLENBQUMsQ0FBQzFDO1lBQ1osTUFBTTdCLFlBQVlMLFdBQVdtQixRQUFRLEdBQUdjLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFOUMsR0FBRyxLQUFLa0csS0FBS2xHLEdBQUc7WUFDdEUsSUFBSSxDQUFDaUIsV0FDRCxPQUFPNkI7WUFDWCxJQUFJN0IsVUFBVWEsT0FBTyxDQUFDc0UsYUFBYSxDQUFDLFlBQ2hDbkYsVUFBVWEsT0FBTyxDQUFDdUUsR0FBRyxDQUFDLFdBQVdKO1lBQ3JDLElBQUksQ0FBQ2hGLFVBQVVhLE9BQU8sQ0FBQ3NFLGFBQWEsQ0FBQyxXQUNqQ25GLFVBQVVhLE9BQU8sQ0FBQ0csRUFBRSxDQUFDLFVBQVVnRTtZQUNuQyxJQUFJLENBQUNoRixVQUFVYSxPQUFPLENBQUNzRSxhQUFhLENBQUMsZUFDakNuRixVQUFVYSxPQUFPLENBQUNHLEVBQUUsQ0FBQyxjQUFjcUU7WUFDdkMsT0FBTztnQkFDSCxHQUFHeEQsQ0FBQztnQkFDSmlCLGFBQWEsSUFBSXhCLElBQUlPLEVBQUVpQixXQUFXLEVBQUVGLEdBQUcsQ0FBQ3FDLEtBQUtsRyxHQUFHLEVBQUU7b0JBQzlDbUcsVUFBVUQsS0FBS0MsUUFBUTtvQkFDdkJ6RCxTQUFTd0QsS0FBS3hELE9BQU87b0JBQ3JCekIsV0FBV0E7Z0JBQ2Y7Z0JBQ0ErQyxTQUFTa0MsS0FBS2xHLEdBQUc7Z0JBQ2pCaUUsUUFBUTtZQUNaO1FBQ0o7SUFDSjtJQUNBLFNBQVNxQyxXQUFXSixJQUFJO1FBQ3BCdkQsTUFBTTZDLFFBQVEsQ0FBQyxDQUFDMUM7WUFDWixNQUFNcUMsYUFBYXJDLEVBQUVpQixXQUFXLENBQUNmLEdBQUcsQ0FBQ2tELEtBQUtsRyxHQUFHO1lBQzdDLElBQUltRixZQUFZO2dCQUNaLE1BQU1sRSxZQUFZa0UsV0FBV2xFLFNBQVM7Z0JBQ3RDLElBQUlBLFVBQVVhLE9BQU8sQ0FBQ3NFLGFBQWEsQ0FBQyxXQUNoQ2pCLFdBQVdsRSxTQUFTLENBQUNhLE9BQU8sQ0FBQ3VFLEdBQUcsQ0FBQyxVQUFVSjtnQkFDL0MsSUFBSWhGLFVBQVVhLE9BQU8sQ0FBQ3NFLGFBQWEsQ0FBQyxlQUNoQ2pCLFdBQVdsRSxTQUFTLENBQUNhLE9BQU8sQ0FBQ3VFLEdBQUcsQ0FBQyxjQUFjQztnQkFDbkQsSUFBSSxDQUFDckYsVUFBVWEsT0FBTyxDQUFDc0UsYUFBYSxDQUFDLFlBQ2pDakIsV0FBV2xFLFNBQVMsQ0FBQ2EsT0FBTyxDQUFDRyxFQUFFLENBQUMsV0FBV0M7WUFDbkQ7WUFDQVksRUFBRWlCLFdBQVcsQ0FBQ3dDLE1BQU0sQ0FBQ0wsS0FBS2xHLEdBQUc7WUFDN0IsSUFBSThDLEVBQUVpQixXQUFXLENBQUN5QyxJQUFJLEtBQUssR0FDdkIsT0FBTztnQkFDSCxHQUFHMUQsQ0FBQztnQkFDSmlCLGFBQWEsSUFBSXhCO2dCQUNqQnlCLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDWjtZQUNKLE1BQU13QyxpQkFBaUIzRCxFQUFFaUIsV0FBVyxDQUFDMkMsTUFBTSxHQUFHQyxJQUFJLEdBQUdwRCxLQUFLO1lBQzFELE9BQU87Z0JBQ0gsR0FBR1QsQ0FBQztnQkFDSmlCLGFBQWEsSUFBSXhCLElBQUlPLEVBQUVpQixXQUFXO2dCQUNsQ0MsU0FBU3lDLGVBQWV4RixTQUFTLENBQUNqQixHQUFHO1lBQ3pDO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFDSCxJQUFJVyxVQUFTO1lBQ1QsT0FBT0EsT0FBT29CLFFBQVE7UUFDMUI7UUFDQSxJQUFJbkIsY0FBYTtZQUNiLE9BQU9BLFdBQVdtQixRQUFRO1FBQzlCO1FBQ0ExQjtRQUNBbUM7UUFDQSxJQUFJdUMsU0FBUTtZQUNSLE9BQU9wQyxNQUFNWixRQUFRO1FBQ3pCO1FBQ0F5RCxVQUFTakMsS0FBSztZQUNWLElBQUlxRDtZQUNKLElBQUksT0FBT3JELFVBQVUsWUFDakJxRCxXQUFXckQsTUFBTVosTUFBTVosUUFBUTtpQkFFL0I2RSxXQUFXckQ7WUFDZixxRUFBcUU7WUFDckUsTUFBTW9CLGVBQWViO1lBQ3JCLElBQUksT0FBTzhDLGFBQWEsVUFDcEJBLFdBQVdqQztZQUNmLE1BQU1rQyxZQUFZeEQsT0FBT3lELElBQUksQ0FBQ25DLGNBQWNsQixJQUFJLENBQUMsQ0FBQ1gsSUFBTSxDQUFFQSxDQUFBQSxLQUFLOEQsUUFBTztZQUN0RSxJQUFJQyxXQUNBRCxXQUFXakM7WUFDZmhDLE1BQU02QyxRQUFRLENBQUNvQixVQUFVO1FBQzdCO1FBQ0FsQixXQUFVcUIsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLE9BQU87WUFDakMsT0FBT3RFLE1BQU0rQyxTQUFTLENBQUNxQixVQUFVQyxVQUFVQyxVQUNyQztnQkFDRSxHQUFHQSxPQUFPO2dCQUNWQyxpQkFBaUJELFFBQVFFLGVBQWU7WUFFNUMsSUFDRXpHO1FBQ1Y7UUFDQTBHLFdBQVc7WUFDUDNHO1lBQ0FrQztZQUNBcEMsS0FBSzhHLFFBQVE5RztZQUNiRDtZQUNBMEIsWUFBWXhCLEtBQUt3QixVQUFVO1lBQzNCckIsUUFBUTtnQkFDSjZFLFVBQVNqQyxLQUFLO29CQUNWLE1BQU0rRCxhQUFjLE9BQU8vRCxVQUFVLGFBQWFBLE1BQU01QyxPQUFPb0IsUUFBUSxNQUFNd0I7b0JBQzdFLElBQUkrRCxXQUFXQyxNQUFNLEtBQUssR0FDdEI7b0JBQ0osT0FBTzVHLE9BQU82RSxRQUFRLENBQUM4QixZQUFZO2dCQUN2QztnQkFDQTVCLFdBQVVzQixRQUFRO29CQUNkLE9BQU9yRyxPQUFPK0UsU0FBUyxDQUFDc0I7Z0JBQzVCO1lBQ0o7WUFDQXBHLFlBQVk7Z0JBQ1JnQjtnQkFDQVYsT0FBT0E7Z0JBQ1BzRSxVQUFTakMsS0FBSztvQkFDVixPQUFPM0MsV0FBVzRFLFFBQVEsQ0FBQyxPQUFPakMsVUFBVSxhQUFhQSxNQUFNM0MsV0FBV21CLFFBQVEsTUFBTXdCLE9BQU87Z0JBQ25HO2dCQUNBbUMsV0FBVXNCLFFBQVE7b0JBQ2QsT0FBT3BHLFdBQVc4RSxTQUFTLENBQUNzQjtnQkFDaEM7WUFDSjtZQUNBUSxRQUFRO2dCQUFFdkI7Z0JBQVEvRDtnQkFBU29FO1lBQVc7UUFDMUM7SUFDSjtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS9jcmVhdGVDb25maWcuanM/OTRhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTdG9yZSBhcyBjcmVhdGVNaXBkLCB9IGZyb20gJ21pcGQnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50LCB9IGZyb20gJ3ZpZW0nO1xuaW1wb3J0IHsgcGVyc2lzdCwgc3Vic2NyaWJlV2l0aFNlbGVjdG9yIH0gZnJvbSAnenVzdGFuZC9taWRkbGV3YXJlJztcbmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJztcbmltcG9ydCB7IGluamVjdGVkIH0gZnJvbSAnLi9jb25uZWN0b3JzL2luamVjdGVkLmpzJztcbmltcG9ydCB7IGNyZWF0ZUVtaXR0ZXIgfSBmcm9tICcuL2NyZWF0ZUVtaXR0ZXIuanMnO1xuaW1wb3J0IHsgY3JlYXRlU3RvcmFnZSwgZ2V0RGVmYXVsdFN0b3JhZ2UsIH0gZnJvbSAnLi9jcmVhdGVTdG9yYWdlLmpzJztcbmltcG9ydCB7IENoYWluTm90Q29uZmlndXJlZEVycm9yIH0gZnJvbSAnLi9lcnJvcnMvY29uZmlnLmpzJztcbmltcG9ydCB7IHVpZCB9IGZyb20gJy4vdXRpbHMvdWlkLmpzJztcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbmZpZyhwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBtdWx0aUluamVjdGVkUHJvdmlkZXJEaXNjb3ZlcnkgPSB0cnVlLCBzdG9yYWdlID0gY3JlYXRlU3RvcmFnZSh7XG4gICAgICAgIHN0b3JhZ2U6IGdldERlZmF1bHRTdG9yYWdlKCksXG4gICAgfSksIHN5bmNDb25uZWN0ZWRDaGFpbiA9IHRydWUsIHNzciA9IGZhbHNlLCAuLi5yZXN0IH0gPSBwYXJhbWV0ZXJzO1xuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyBTZXQgdXAgY29ubmVjdG9ycywgY2xpZW50cywgZXRjLlxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICBjb25zdCBtaXBkID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgbXVsdGlJbmplY3RlZFByb3ZpZGVyRGlzY292ZXJ5XG4gICAgICAgID8gY3JlYXRlTWlwZCgpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IGNoYWlucyA9IGNyZWF0ZVN0b3JlKCgpID0+IHJlc3QuY2hhaW5zKTtcbiAgICBjb25zdCBjb25uZWN0b3JzID0gY3JlYXRlU3RvcmUoKCkgPT4ge1xuICAgICAgICBjb25zdCBjb2xsZWN0aW9uID0gW107XG4gICAgICAgIGNvbnN0IHJkbnNTZXQgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAoY29uc3QgY29ubmVjdG9yRm5zIG9mIHJlc3QuY29ubmVjdG9ycyA/PyBbXSkge1xuICAgICAgICAgICAgY29uc3QgY29ubmVjdG9yID0gc2V0dXAoY29ubmVjdG9yRm5zKTtcbiAgICAgICAgICAgIGNvbGxlY3Rpb24ucHVzaChjb25uZWN0b3IpO1xuICAgICAgICAgICAgaWYgKCFzc3IgJiYgY29ubmVjdG9yLnJkbnMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZG5zVmFsdWVzID0gdHlwZW9mIGNvbm5lY3Rvci5yZG5zID09PSAnc3RyaW5nJyA/IFtjb25uZWN0b3IucmRuc10gOiBjb25uZWN0b3IucmRucztcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJkbnMgb2YgcmRuc1ZhbHVlcykge1xuICAgICAgICAgICAgICAgICAgICByZG5zU2V0LmFkZChyZG5zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzc3IgJiYgbWlwZCkge1xuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXJzID0gbWlwZC5nZXRQcm92aWRlcnMoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgcHJvdmlkZXJzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJkbnNTZXQuaGFzKHByb3ZpZGVyLmluZm8ucmRucykpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNvbGxlY3Rpb24ucHVzaChzZXR1cChwcm92aWRlckRldGFpbFRvQ29ubmVjdG9yKHByb3ZpZGVyKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICAgIH0pO1xuICAgIGZ1bmN0aW9uIHNldHVwKGNvbm5lY3RvckZuKSB7XG4gICAgICAgIC8vIFNldCB1cCBlbWl0dGVyIHdpdGggdWlkIGFuZCBhZGQgdG8gY29ubmVjdG9yIHNvIHRoZXkgYXJlIFwibGlua2VkXCIgdG9nZXRoZXIuXG4gICAgICAgIGNvbnN0IGVtaXR0ZXIgPSBjcmVhdGVFbWl0dGVyKHVpZCgpKTtcbiAgICAgICAgY29uc3QgY29ubmVjdG9yID0ge1xuICAgICAgICAgICAgLi4uY29ubmVjdG9yRm4oe1xuICAgICAgICAgICAgICAgIGVtaXR0ZXIsXG4gICAgICAgICAgICAgICAgY2hhaW5zOiBjaGFpbnMuZ2V0U3RhdGUoKSxcbiAgICAgICAgICAgICAgICBzdG9yYWdlLFxuICAgICAgICAgICAgICAgIHRyYW5zcG9ydHM6IHJlc3QudHJhbnNwb3J0cyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZW1pdHRlcixcbiAgICAgICAgICAgIHVpZDogZW1pdHRlci51aWQsXG4gICAgICAgIH07XG4gICAgICAgIC8vIFN0YXJ0IGxpc3RlbmluZyBmb3IgYGNvbm5lY3RgIGV2ZW50cyBvbiBjb25uZWN0b3Igc2V0dXBcbiAgICAgICAgLy8gVGhpcyBhbGxvd3MgY29ubmVjdG9ycyB0byBcImNvbm5lY3RcIiB0aGVtc2VsdmVzIHdpdGhvdXQgdXNlciBpbnRlcmFjdGlvbiAoZS5nLiBNZXRhTWFzaydzIFwiTWFudWFsbHkgY29ubmVjdCB0byBjdXJyZW50IHNpdGVcIilcbiAgICAgICAgZW1pdHRlci5vbignY29ubmVjdCcsIGNvbm5lY3QpO1xuICAgICAgICBjb25uZWN0b3Iuc2V0dXA/LigpO1xuICAgICAgICByZXR1cm4gY29ubmVjdG9yO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwcm92aWRlckRldGFpbFRvQ29ubmVjdG9yKHByb3ZpZGVyRGV0YWlsKSB7XG4gICAgICAgIGNvbnN0IHsgaW5mbyB9ID0gcHJvdmlkZXJEZXRhaWw7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gcHJvdmlkZXJEZXRhaWwucHJvdmlkZXI7XG4gICAgICAgIHJldHVybiBpbmplY3RlZCh7IHRhcmdldDogeyAuLi5pbmZvLCBpZDogaW5mby5yZG5zLCBwcm92aWRlciB9IH0pO1xuICAgIH1cbiAgICBjb25zdCBjbGllbnRzID0gbmV3IE1hcCgpO1xuICAgIGZ1bmN0aW9uIGdldENsaWVudChjb25maWcgPSB7fSkge1xuICAgICAgICBjb25zdCBjaGFpbklkID0gY29uZmlnLmNoYWluSWQgPz8gc3RvcmUuZ2V0U3RhdGUoKS5jaGFpbklkO1xuICAgICAgICBjb25zdCBjaGFpbiA9IGNoYWlucy5nZXRTdGF0ZSgpLmZpbmQoKHgpID0+IHguaWQgPT09IGNoYWluSWQpO1xuICAgICAgICAvLyBjaGFpbklkIHNwZWNpZmllZCBhbmQgbm90IGNvbmZpZ3VyZWRcbiAgICAgICAgaWYgKGNvbmZpZy5jaGFpbklkICYmICFjaGFpbilcbiAgICAgICAgICAgIHRocm93IG5ldyBDaGFpbk5vdENvbmZpZ3VyZWRFcnJvcigpO1xuICAgICAgICB7XG4gICAgICAgICAgICBjb25zdCBjbGllbnQgPSBjbGllbnRzLmdldChzdG9yZS5nZXRTdGF0ZSgpLmNoYWluSWQpO1xuICAgICAgICAgICAgaWYgKGNsaWVudCAmJiAhY2hhaW4pXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsaWVudDtcbiAgICAgICAgICAgIGlmICghY2hhaW4pXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENoYWluTm90Q29uZmlndXJlZEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgYSBtZW1vaXplZCBjbGllbnQgZXhpc3RzIGZvciBhIGNoYWluIGlkLCB1c2UgdGhhdC5cbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgY2xpZW50ID0gY2xpZW50cy5nZXQoY2hhaW5JZCk7XG4gICAgICAgICAgICBpZiAoY2xpZW50KVxuICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnQ7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNsaWVudDtcbiAgICAgICAgaWYgKHJlc3QuY2xpZW50KVxuICAgICAgICAgICAgY2xpZW50ID0gcmVzdC5jbGllbnQoeyBjaGFpbiB9KTtcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBjaGFpbklkID0gY2hhaW4uaWQ7XG4gICAgICAgICAgICBjb25zdCBjaGFpbklkcyA9IGNoYWlucy5nZXRTdGF0ZSgpLm1hcCgoeCkgPT4geC5pZCk7XG4gICAgICAgICAgICAvLyBHcmFiIGFsbCBwcm9wZXJ0aWVzIG9mZiBgcmVzdGAgYW5kIHJlc29sdmUgZm9yIHVzZSBpbiBgY3JlYXRlQ2xpZW50YFxuICAgICAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IHt9O1xuICAgICAgICAgICAgY29uc3QgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHJlc3QpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgZW50cmllcykge1xuICAgICAgICAgICAgICAgIGlmIChrZXkgPT09ICdjaGFpbnMnIHx8XG4gICAgICAgICAgICAgICAgICAgIGtleSA9PT0gJ2NsaWVudCcgfHxcbiAgICAgICAgICAgICAgICAgICAga2V5ID09PSAnY29ubmVjdG9ycycgfHxcbiAgICAgICAgICAgICAgICAgICAga2V5ID09PSAndHJhbnNwb3J0cycpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNoZWNrIGlmIHZhbHVlIGlzIGNoYWluSWQtc3BlY2lmaWMgc2luY2Ugc29tZSB2YWx1ZXMgY2FuIGJlIG9iamVjdHNcbiAgICAgICAgICAgICAgICAgICAgLy8gZS5nLiB7IGJhdGNoOiB7IG11bHRpY2FsbDogeyBiYXRjaFNpemU6IDEwMjQgfSB9IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYWluSWQgaW4gdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSB2YWx1ZVtjaGFpbklkXTtcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBjaGVjayBpZiB2YWx1ZSBpcyBjaGFpbklkLXNwZWNpZmljLCBidXQgZG9lcyBub3QgaGF2ZSB2YWx1ZSBmb3IgY3VycmVudCBjaGFpbklkXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYXNDaGFpblNwZWNpZmljVmFsdWUgPSBjaGFpbklkcy5zb21lKCh4KSA9PiB4IGluIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYXNDaGFpblNwZWNpZmljVmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xpZW50ID0gY3JlYXRlQ2xpZW50KHtcbiAgICAgICAgICAgICAgICAuLi5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAgICAgIGNoYWluLFxuICAgICAgICAgICAgICAgIGJhdGNoOiBwcm9wZXJ0aWVzLmJhdGNoID8/IHsgbXVsdGljYWxsOiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgdHJhbnNwb3J0OiAocGFyYW1ldGVycykgPT4gcmVzdC50cmFuc3BvcnRzW2NoYWluSWRdKHsgLi4ucGFyYW1ldGVycywgY29ubmVjdG9ycyB9KSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNsaWVudHMuc2V0KGNoYWluSWQsIGNsaWVudCk7XG4gICAgICAgIHJldHVybiBjbGllbnQ7XG4gICAgfVxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyBDcmVhdGUgc3RvcmVcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgZnVuY3Rpb24gZ2V0SW5pdGlhbFN0YXRlKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY2hhaW5JZDogY2hhaW5zLmdldFN0YXRlKClbMF0uaWQsXG4gICAgICAgICAgICBjb25uZWN0aW9uczogbmV3IE1hcCgpLFxuICAgICAgICAgICAgY3VycmVudDogbnVsbCxcbiAgICAgICAgICAgIHN0YXR1czogJ2Rpc2Nvbm5lY3RlZCcsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGxldCBjdXJyZW50VmVyc2lvbjtcbiAgICBjb25zdCBwcmVmaXggPSAnMC4wLjAtY2FuYXJ5LSc7XG4gICAgaWYgKHZlcnNpb24uc3RhcnRzV2l0aChwcmVmaXgpKVxuICAgICAgICBjdXJyZW50VmVyc2lvbiA9IE51bWJlci5wYXJzZUludCh2ZXJzaW9uLnJlcGxhY2UocHJlZml4LCAnJykpO1xuICAgIC8vIHVzZSBwYWNrYWdlIG1ham9yIHZlcnNpb24gdG8gdmVyc2lvbiBzdG9yZVxuICAgIGVsc2VcbiAgICAgICAgY3VycmVudFZlcnNpb24gPSBOdW1iZXIucGFyc2VJbnQodmVyc2lvbi5zcGxpdCgnLicpWzBdID8/ICcwJyk7XG4gICAgY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShzdWJzY3JpYmVXaXRoU2VsZWN0b3IoXG4gICAgLy8gb25seSB1c2UgcGVyc2lzdCBtaWRkbGV3YXJlIGlmIHN0b3JhZ2UgZXhpc3RzXG4gICAgc3RvcmFnZVxuICAgICAgICA/IHBlcnNpc3QoZ2V0SW5pdGlhbFN0YXRlLCB7XG4gICAgICAgICAgICBtaWdyYXRlKHBlcnNpc3RlZFN0YXRlLCB2ZXJzaW9uKSB7XG4gICAgICAgICAgICAgICAgaWYgKHZlcnNpb24gPT09IGN1cnJlbnRWZXJzaW9uKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGVyc2lzdGVkU3RhdGU7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5pdGlhbFN0YXRlID0gZ2V0SW5pdGlhbFN0YXRlKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hhaW5JZCA9IHZhbGlkYXRlUGVyc2lzdGVkQ2hhaW5JZChwZXJzaXN0ZWRTdGF0ZSwgaW5pdGlhbFN0YXRlLmNoYWluSWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IC4uLmluaXRpYWxTdGF0ZSwgY2hhaW5JZCB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG5hbWU6ICdzdG9yZScsXG4gICAgICAgICAgICBwYXJ0aWFsaXplKHN0YXRlKSB7XG4gICAgICAgICAgICAgICAgLy8gT25seSBwZXJzaXN0IFwiY3JpdGljYWxcIiBzdG9yZSBwcm9wZXJ0aWVzIHRvIHByZXNlcnZlIHN0b3JhZ2Ugc2l6ZS5cbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgX190eXBlOiAnTWFwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBBcnJheS5mcm9tKHN0YXRlLmNvbm5lY3Rpb25zLmVudHJpZXMoKSkubWFwKChba2V5LCBjb25uZWN0aW9uXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgaWQsIG5hbWUsIHR5cGUsIHVpZCB9ID0gY29ubmVjdGlvbi5jb25uZWN0b3I7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29ubmVjdG9yID0geyBpZCwgbmFtZSwgdHlwZSwgdWlkIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtrZXksIHsgLi4uY29ubmVjdGlvbiwgY29ubmVjdG9yIH1dO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoYWluSWQ6IHN0YXRlLmNoYWluSWQsXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnQ6IHN0YXRlLmN1cnJlbnQsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXJnZShwZXJzaXN0ZWRTdGF0ZSwgY3VycmVudFN0YXRlKSB7XG4gICAgICAgICAgICAgICAgLy8gYHN0YXR1c2Agc2hvdWxkIG5vdCBiZSBwZXJzaXN0ZWQgYXMgaXQgbWVzc2VzIHdpdGggcmVjb25uZWN0aW9uXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwZXJzaXN0ZWRTdGF0ZSA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgICAgICAgICAgICAgcGVyc2lzdGVkU3RhdGUgJiZcbiAgICAgICAgICAgICAgICAgICAgJ3N0YXR1cycgaW4gcGVyc2lzdGVkU3RhdGUpXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBwZXJzaXN0ZWRTdGF0ZS5zdGF0dXM7XG4gICAgICAgICAgICAgICAgLy8gTWFrZSBzdXJlIHBlcnNpc3RlZCBgY2hhaW5JZGAgaXMgdmFsaWRcbiAgICAgICAgICAgICAgICBjb25zdCBjaGFpbklkID0gdmFsaWRhdGVQZXJzaXN0ZWRDaGFpbklkKHBlcnNpc3RlZFN0YXRlLCBjdXJyZW50U3RhdGUuY2hhaW5JZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgLi4uY3VycmVudFN0YXRlLFxuICAgICAgICAgICAgICAgICAgICAuLi5wZXJzaXN0ZWRTdGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgY2hhaW5JZCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNraXBIeWRyYXRpb246IHNzcixcbiAgICAgICAgICAgIHN0b3JhZ2U6IHN0b3JhZ2UsXG4gICAgICAgICAgICB2ZXJzaW9uOiBjdXJyZW50VmVyc2lvbixcbiAgICAgICAgfSlcbiAgICAgICAgOiBnZXRJbml0aWFsU3RhdGUpKTtcbiAgICBzdG9yZS5zZXRTdGF0ZShnZXRJbml0aWFsU3RhdGUoKSk7XG4gICAgZnVuY3Rpb24gdmFsaWRhdGVQZXJzaXN0ZWRDaGFpbklkKHBlcnNpc3RlZFN0YXRlLCBkZWZhdWx0Q2hhaW5JZCkge1xuICAgICAgICByZXR1cm4gcGVyc2lzdGVkU3RhdGUgJiZcbiAgICAgICAgICAgIHR5cGVvZiBwZXJzaXN0ZWRTdGF0ZSA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgICAgICdjaGFpbklkJyBpbiBwZXJzaXN0ZWRTdGF0ZSAmJlxuICAgICAgICAgICAgdHlwZW9mIHBlcnNpc3RlZFN0YXRlLmNoYWluSWQgPT09ICdudW1iZXInICYmXG4gICAgICAgICAgICBjaGFpbnMuZ2V0U3RhdGUoKS5zb21lKCh4KSA9PiB4LmlkID09PSBwZXJzaXN0ZWRTdGF0ZS5jaGFpbklkKVxuICAgICAgICAgICAgPyBwZXJzaXN0ZWRTdGF0ZS5jaGFpbklkXG4gICAgICAgICAgICA6IGRlZmF1bHRDaGFpbklkO1xuICAgIH1cbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgLy8gU3Vic2NyaWJlIHRvIGNoYW5nZXNcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgLy8gVXBkYXRlIGRlZmF1bHQgY2hhaW4gd2hlbiBjb25uZWN0b3IgY2hhaW4gY2hhbmdlc1xuICAgIGlmIChzeW5jQ29ubmVjdGVkQ2hhaW4pXG4gICAgICAgIHN0b3JlLnN1YnNjcmliZSgoeyBjb25uZWN0aW9ucywgY3VycmVudCB9KSA9PiBjdXJyZW50ID8gY29ubmVjdGlvbnMuZ2V0KGN1cnJlbnQpPy5jaGFpbklkIDogdW5kZWZpbmVkLCAoY2hhaW5JZCkgPT4ge1xuICAgICAgICAgICAgLy8gSWYgY2hhaW4gaXMgbm90IGNvbmZpZ3VyZWQsIHRoZW4gZG9uJ3Qgc3dpdGNoIG92ZXIgdG8gaXQuXG4gICAgICAgICAgICBjb25zdCBpc0NoYWluQ29uZmlndXJlZCA9IGNoYWluc1xuICAgICAgICAgICAgICAgIC5nZXRTdGF0ZSgpXG4gICAgICAgICAgICAgICAgLnNvbWUoKHgpID0+IHguaWQgPT09IGNoYWluSWQpO1xuICAgICAgICAgICAgaWYgKCFpc0NoYWluQ29uZmlndXJlZClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICByZXR1cm4gc3RvcmUuc2V0U3RhdGUoKHgpID0+ICh7XG4gICAgICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBjaGFpbklkID8/IHguY2hhaW5JZCxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSk7XG4gICAgLy8gRUlQLTY5NjMgc3Vic2NyaWJlIGZvciBuZXcgd2FsbGV0IHByb3ZpZGVyc1xuICAgIG1pcGQ/LnN1YnNjcmliZSgocHJvdmlkZXJEZXRhaWxzKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3RvcklkU2V0ID0gbmV3IFNldCgpO1xuICAgICAgICBjb25zdCBjb25uZWN0b3JSZG5zU2V0ID0gbmV3IFNldCgpO1xuICAgICAgICBmb3IgKGNvbnN0IGNvbm5lY3RvciBvZiBjb25uZWN0b3JzLmdldFN0YXRlKCkpIHtcbiAgICAgICAgICAgIGNvbm5lY3RvcklkU2V0LmFkZChjb25uZWN0b3IuaWQpO1xuICAgICAgICAgICAgaWYgKGNvbm5lY3Rvci5yZG5zKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmRuc1ZhbHVlcyA9IHR5cGVvZiBjb25uZWN0b3IucmRucyA9PT0gJ3N0cmluZycgPyBbY29ubmVjdG9yLnJkbnNdIDogY29ubmVjdG9yLnJkbnM7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCByZG5zIG9mIHJkbnNWYWx1ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdG9yUmRuc1NldC5hZGQocmRucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG5ld0Nvbm5lY3RvcnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBwcm92aWRlckRldGFpbCBvZiBwcm92aWRlckRldGFpbHMpIHtcbiAgICAgICAgICAgIGlmIChjb25uZWN0b3JSZG5zU2V0Lmhhcyhwcm92aWRlckRldGFpbC5pbmZvLnJkbnMpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgY29uc3QgY29ubmVjdG9yID0gc2V0dXAocHJvdmlkZXJEZXRhaWxUb0Nvbm5lY3Rvcihwcm92aWRlckRldGFpbCkpO1xuICAgICAgICAgICAgaWYgKGNvbm5lY3RvcklkU2V0Lmhhcyhjb25uZWN0b3IuaWQpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgbmV3Q29ubmVjdG9ycy5wdXNoKGNvbm5lY3Rvcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0b3JhZ2UgJiYgIXN0b3JlLnBlcnNpc3QuaGFzSHlkcmF0ZWQoKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29ubmVjdG9ycy5zZXRTdGF0ZSgoeCkgPT4gWy4uLngsIC4uLm5ld0Nvbm5lY3RvcnNdLCB0cnVlKTtcbiAgICB9KTtcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgLy8gRW1pdHRlciBsaXN0ZW5lcnNcbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gICAgZnVuY3Rpb24gY2hhbmdlKGRhdGEpIHtcbiAgICAgICAgc3RvcmUuc2V0U3RhdGUoKHgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB4LmNvbm5lY3Rpb25zLmdldChkYXRhLnVpZCk7XG4gICAgICAgICAgICBpZiAoIWNvbm5lY3Rpb24pXG4gICAgICAgICAgICAgICAgcmV0dXJuIHg7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLngsXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoeC5jb25uZWN0aW9ucykuc2V0KGRhdGEudWlkLCB7XG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRzOiBkYXRhLmFjY291bnRzID8/XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uLmFjY291bnRzLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiBkYXRhLmNoYWluSWQgPz8gY29ubmVjdGlvbi5jaGFpbklkLFxuICAgICAgICAgICAgICAgICAgICBjb25uZWN0b3I6IGNvbm5lY3Rpb24uY29ubmVjdG9yLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvbm5lY3QoZGF0YSkge1xuICAgICAgICAvLyBEaXNhYmxlIGhhbmRsaW5nIGlmIHJlY29ubmVjdGluZy9jb25uZWN0aW5nXG4gICAgICAgIGlmIChzdG9yZS5nZXRTdGF0ZSgpLnN0YXR1cyA9PT0gJ2Nvbm5lY3RpbmcnIHx8XG4gICAgICAgICAgICBzdG9yZS5nZXRTdGF0ZSgpLnN0YXR1cyA9PT0gJ3JlY29ubmVjdGluZycpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHN0b3JlLnNldFN0YXRlKCh4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb25uZWN0b3IgPSBjb25uZWN0b3JzLmdldFN0YXRlKCkuZmluZCgoeCkgPT4geC51aWQgPT09IGRhdGEudWlkKTtcbiAgICAgICAgICAgIGlmICghY29ubmVjdG9yKVxuICAgICAgICAgICAgICAgIHJldHVybiB4O1xuICAgICAgICAgICAgaWYgKGNvbm5lY3Rvci5lbWl0dGVyLmxpc3RlbmVyQ291bnQoJ2Nvbm5lY3QnKSlcbiAgICAgICAgICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vZmYoJ2Nvbm5lY3QnLCBjaGFuZ2UpO1xuICAgICAgICAgICAgaWYgKCFjb25uZWN0b3IuZW1pdHRlci5saXN0ZW5lckNvdW50KCdjaGFuZ2UnKSlcbiAgICAgICAgICAgICAgICBjb25uZWN0b3IuZW1pdHRlci5vbignY2hhbmdlJywgY2hhbmdlKTtcbiAgICAgICAgICAgIGlmICghY29ubmVjdG9yLmVtaXR0ZXIubGlzdGVuZXJDb3VudCgnZGlzY29ubmVjdCcpKVxuICAgICAgICAgICAgICAgIGNvbm5lY3Rvci5lbWl0dGVyLm9uKCdkaXNjb25uZWN0JywgZGlzY29ubmVjdCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLngsXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoeC5jb25uZWN0aW9ucykuc2V0KGRhdGEudWlkLCB7XG4gICAgICAgICAgICAgICAgICAgIGFjY291bnRzOiBkYXRhLmFjY291bnRzLFxuICAgICAgICAgICAgICAgICAgICBjaGFpbklkOiBkYXRhLmNoYWluSWQsXG4gICAgICAgICAgICAgICAgICAgIGNvbm5lY3RvcjogY29ubmVjdG9yLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIGN1cnJlbnQ6IGRhdGEudWlkLFxuICAgICAgICAgICAgICAgIHN0YXR1czogJ2Nvbm5lY3RlZCcsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZGlzY29ubmVjdChkYXRhKSB7XG4gICAgICAgIHN0b3JlLnNldFN0YXRlKCh4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb25uZWN0aW9uID0geC5jb25uZWN0aW9ucy5nZXQoZGF0YS51aWQpO1xuICAgICAgICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb25uZWN0b3IgPSBjb25uZWN0aW9uLmNvbm5lY3RvcjtcbiAgICAgICAgICAgICAgICBpZiAoY29ubmVjdG9yLmVtaXR0ZXIubGlzdGVuZXJDb3VudCgnY2hhbmdlJykpXG4gICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdG9yLmVtaXR0ZXIub2ZmKCdjaGFuZ2UnLCBjaGFuZ2UpO1xuICAgICAgICAgICAgICAgIGlmIChjb25uZWN0b3IuZW1pdHRlci5saXN0ZW5lckNvdW50KCdkaXNjb25uZWN0JykpXG4gICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdG9yLmVtaXR0ZXIub2ZmKCdkaXNjb25uZWN0JywgZGlzY29ubmVjdCk7XG4gICAgICAgICAgICAgICAgaWYgKCFjb25uZWN0b3IuZW1pdHRlci5saXN0ZW5lckNvdW50KCdjb25uZWN0JykpXG4gICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdG9yLmVtaXR0ZXIub24oJ2Nvbm5lY3QnLCBjb25uZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHguY29ubmVjdGlvbnMuZGVsZXRlKGRhdGEudWlkKTtcbiAgICAgICAgICAgIGlmICh4LmNvbm5lY3Rpb25zLnNpemUgPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IG5ldyBNYXAoKSxcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnZGlzY29ubmVjdGVkJyxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgbmV4dENvbm5lY3Rpb24gPSB4LmNvbm5lY3Rpb25zLnZhbHVlcygpLm5leHQoKS52YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ueCxcbiAgICAgICAgICAgICAgICBjb25uZWN0aW9uczogbmV3IE1hcCh4LmNvbm5lY3Rpb25zKSxcbiAgICAgICAgICAgICAgICBjdXJyZW50OiBuZXh0Q29ubmVjdGlvbi5jb25uZWN0b3IudWlkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGdldCBjaGFpbnMoKSB7XG4gICAgICAgICAgICByZXR1cm4gY2hhaW5zLmdldFN0YXRlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldCBjb25uZWN0b3JzKCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3RvcnMuZ2V0U3RhdGUoKTtcbiAgICAgICAgfSxcbiAgICAgICAgc3RvcmFnZSxcbiAgICAgICAgZ2V0Q2xpZW50LFxuICAgICAgICBnZXQgc3RhdGUoKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3RhdGUodmFsdWUpIHtcbiAgICAgICAgICAgIGxldCBuZXdTdGF0ZTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpXG4gICAgICAgICAgICAgICAgbmV3U3RhdGUgPSB2YWx1ZShzdG9yZS5nZXRTdGF0ZSgpKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBuZXdTdGF0ZSA9IHZhbHVlO1xuICAgICAgICAgICAgLy8gUmVzZXQgc3RhdGUgaWYgaXQgZ290IHNldCB0byBzb21ldGhpbmcgbm90IG1hdGNoaW5nIHRoZSBiYXNlIHN0YXRlXG4gICAgICAgICAgICBjb25zdCBpbml0aWFsU3RhdGUgPSBnZXRJbml0aWFsU3RhdGUoKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmV3U3RhdGUgIT09ICdvYmplY3QnKVxuICAgICAgICAgICAgICAgIG5ld1N0YXRlID0gaW5pdGlhbFN0YXRlO1xuICAgICAgICAgICAgY29uc3QgaXNDb3JydXB0ID0gT2JqZWN0LmtleXMoaW5pdGlhbFN0YXRlKS5zb21lKCh4KSA9PiAhKHggaW4gbmV3U3RhdGUpKTtcbiAgICAgICAgICAgIGlmIChpc0NvcnJ1cHQpXG4gICAgICAgICAgICAgICAgbmV3U3RhdGUgPSBpbml0aWFsU3RhdGU7XG4gICAgICAgICAgICBzdG9yZS5zZXRTdGF0ZShuZXdTdGF0ZSwgdHJ1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN1YnNjcmliZShzZWxlY3RvciwgbGlzdGVuZXIsIG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHJldHVybiBzdG9yZS5zdWJzY3JpYmUoc2VsZWN0b3IsIGxpc3RlbmVyLCBvcHRpb25zXG4gICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIGZpcmVJbW1lZGlhdGVseTogb3B0aW9ucy5lbWl0SW1tZWRpYXRlbHksXG4gICAgICAgICAgICAgICAgICAgIC8vIFdvcmthcm91bmQgY2FzdCBzaW5jZSBadXN0YW5kIGRvZXMgbm90IHN1cHBvcnQgYCdleGFjdE9wdGlvbmFsUHJvcGVydHlUeXBlcydgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkKTtcbiAgICAgICAgfSxcbiAgICAgICAgX2ludGVybmFsOiB7XG4gICAgICAgICAgICBtaXBkLFxuICAgICAgICAgICAgc3RvcmUsXG4gICAgICAgICAgICBzc3I6IEJvb2xlYW4oc3NyKSxcbiAgICAgICAgICAgIHN5bmNDb25uZWN0ZWRDaGFpbixcbiAgICAgICAgICAgIHRyYW5zcG9ydHM6IHJlc3QudHJhbnNwb3J0cyxcbiAgICAgICAgICAgIGNoYWluczoge1xuICAgICAgICAgICAgICAgIHNldFN0YXRlKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5leHRDaGFpbnMgPSAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nID8gdmFsdWUoY2hhaW5zLmdldFN0YXRlKCkpIDogdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV4dENoYWlucy5sZW5ndGggPT09IDApXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjaGFpbnMuc2V0U3RhdGUobmV4dENoYWlucywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoYWlucy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29ubmVjdG9yczoge1xuICAgICAgICAgICAgICAgIHByb3ZpZGVyRGV0YWlsVG9Db25uZWN0b3IsXG4gICAgICAgICAgICAgICAgc2V0dXA6IHNldHVwLFxuICAgICAgICAgICAgICAgIHNldFN0YXRlKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0b3JzLnNldFN0YXRlKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IHZhbHVlKGNvbm5lY3RvcnMuZ2V0U3RhdGUoKSkgOiB2YWx1ZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3RvcnMuc3Vic2NyaWJlKGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGV2ZW50czogeyBjaGFuZ2UsIGNvbm5lY3QsIGRpc2Nvbm5lY3QgfSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQ29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVTdG9yZSIsImNyZWF0ZU1pcGQiLCJjcmVhdGVDbGllbnQiLCJwZXJzaXN0Iiwic3Vic2NyaWJlV2l0aFNlbGVjdG9yIiwiaW5qZWN0ZWQiLCJjcmVhdGVFbWl0dGVyIiwiY3JlYXRlU3RvcmFnZSIsImdldERlZmF1bHRTdG9yYWdlIiwiQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3IiLCJ1aWQiLCJ2ZXJzaW9uIiwiY3JlYXRlQ29uZmlnIiwicGFyYW1ldGVycyIsIm11bHRpSW5qZWN0ZWRQcm92aWRlckRpc2NvdmVyeSIsInN0b3JhZ2UiLCJzeW5jQ29ubmVjdGVkQ2hhaW4iLCJzc3IiLCJyZXN0IiwibWlwZCIsInVuZGVmaW5lZCIsImNoYWlucyIsImNvbm5lY3RvcnMiLCJjb2xsZWN0aW9uIiwicmRuc1NldCIsIlNldCIsImNvbm5lY3RvckZucyIsImNvbm5lY3RvciIsInNldHVwIiwicHVzaCIsInJkbnMiLCJyZG5zVmFsdWVzIiwiYWRkIiwicHJvdmlkZXJzIiwiZ2V0UHJvdmlkZXJzIiwicHJvdmlkZXIiLCJoYXMiLCJpbmZvIiwicHJvdmlkZXJEZXRhaWxUb0Nvbm5lY3RvciIsImNvbm5lY3RvckZuIiwiZW1pdHRlciIsImdldFN0YXRlIiwidHJhbnNwb3J0cyIsIm9uIiwiY29ubmVjdCIsInByb3ZpZGVyRGV0YWlsIiwidGFyZ2V0IiwiaWQiLCJjbGllbnRzIiwiTWFwIiwiZ2V0Q2xpZW50IiwiY29uZmlnIiwiY2hhaW5JZCIsInN0b3JlIiwiY2hhaW4iLCJmaW5kIiwieCIsImNsaWVudCIsImdldCIsImNoYWluSWRzIiwibWFwIiwicHJvcGVydGllcyIsImVudHJpZXMiLCJPYmplY3QiLCJrZXkiLCJ2YWx1ZSIsImhhc0NoYWluU3BlY2lmaWNWYWx1ZSIsInNvbWUiLCJiYXRjaCIsIm11bHRpY2FsbCIsInRyYW5zcG9ydCIsInNldCIsImdldEluaXRpYWxTdGF0ZSIsImNvbm5lY3Rpb25zIiwiY3VycmVudCIsInN0YXR1cyIsImN1cnJlbnRWZXJzaW9uIiwicHJlZml4Iiwic3RhcnRzV2l0aCIsIk51bWJlciIsInBhcnNlSW50IiwicmVwbGFjZSIsInNwbGl0IiwibWlncmF0ZSIsInBlcnNpc3RlZFN0YXRlIiwiaW5pdGlhbFN0YXRlIiwidmFsaWRhdGVQZXJzaXN0ZWRDaGFpbklkIiwibmFtZSIsInBhcnRpYWxpemUiLCJzdGF0ZSIsIl9fdHlwZSIsIkFycmF5IiwiZnJvbSIsImNvbm5lY3Rpb24iLCJ0eXBlIiwibWVyZ2UiLCJjdXJyZW50U3RhdGUiLCJza2lwSHlkcmF0aW9uIiwic2V0U3RhdGUiLCJkZWZhdWx0Q2hhaW5JZCIsInN1YnNjcmliZSIsImlzQ2hhaW5Db25maWd1cmVkIiwicHJvdmlkZXJEZXRhaWxzIiwiY29ubmVjdG9ySWRTZXQiLCJjb25uZWN0b3JSZG5zU2V0IiwibmV3Q29ubmVjdG9ycyIsImhhc0h5ZHJhdGVkIiwiY2hhbmdlIiwiZGF0YSIsImFjY291bnRzIiwibGlzdGVuZXJDb3VudCIsIm9mZiIsImRpc2Nvbm5lY3QiLCJkZWxldGUiLCJzaXplIiwibmV4dENvbm5lY3Rpb24iLCJ2YWx1ZXMiLCJuZXh0IiwibmV3U3RhdGUiLCJpc0NvcnJ1cHQiLCJrZXlzIiwic2VsZWN0b3IiLCJsaXN0ZW5lciIsIm9wdGlvbnMiLCJmaXJlSW1tZWRpYXRlbHkiLCJlbWl0SW1tZWRpYXRlbHkiLCJfaW50ZXJuYWwiLCJCb29sZWFuIiwibmV4dENoYWlucyIsImxlbmd0aCIsImV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createEmitter.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: () => (/* binding */ Emitter),\n/* harmony export */   createEmitter: () => (/* binding */ createEmitter)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.mjs\");\n\nclass Emitter {\n    constructor(uid){\n        Object.defineProperty(this, \"uid\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: uid\n        });\n        Object.defineProperty(this, \"_emitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new eventemitter3__WEBPACK_IMPORTED_MODULE_0__.EventEmitter()\n        });\n    }\n    on(eventName, fn) {\n        this._emitter.on(eventName, fn);\n    }\n    once(eventName, fn) {\n        this._emitter.once(eventName, fn);\n    }\n    off(eventName, fn) {\n        this._emitter.off(eventName, fn);\n    }\n    emit(eventName, ...params) {\n        const data = params[0];\n        this._emitter.emit(eventName, {\n            uid: this.uid,\n            ...data\n        });\n    }\n    listenerCount(eventName) {\n        return this._emitter.listenerCount(eventName);\n    }\n}\nfunction createEmitter(uid) {\n    return new Emitter(uid);\n} //# sourceMappingURL=createEmitter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlRW1pdHRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDdEMsTUFBTUM7SUFDVEMsWUFBWUMsR0FBRyxDQUFFO1FBQ2JDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsT0FBTztZQUMvQkMsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBT047UUFDWDtRQUNBQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFlBQVk7WUFDcENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sSUFBSVQsdURBQVlBO1FBQzNCO0lBQ0o7SUFDQVUsR0FBR0MsU0FBUyxFQUFFQyxFQUFFLEVBQUU7UUFDZCxJQUFJLENBQUNDLFFBQVEsQ0FBQ0gsRUFBRSxDQUFDQyxXQUFXQztJQUNoQztJQUNBRSxLQUFLSCxTQUFTLEVBQUVDLEVBQUUsRUFBRTtRQUNoQixJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDSCxXQUFXQztJQUNsQztJQUNBRyxJQUFJSixTQUFTLEVBQUVDLEVBQUUsRUFBRTtRQUNmLElBQUksQ0FBQ0MsUUFBUSxDQUFDRSxHQUFHLENBQUNKLFdBQVdDO0lBQ2pDO0lBQ0FJLEtBQUtMLFNBQVMsRUFBRSxHQUFHTSxNQUFNLEVBQUU7UUFDdkIsTUFBTUMsT0FBT0QsTUFBTSxDQUFDLEVBQUU7UUFDdEIsSUFBSSxDQUFDSixRQUFRLENBQUNHLElBQUksQ0FBQ0wsV0FBVztZQUFFUixLQUFLLElBQUksQ0FBQ0EsR0FBRztZQUFFLEdBQUdlLElBQUk7UUFBQztJQUMzRDtJQUNBQyxjQUFjUixTQUFTLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNFLFFBQVEsQ0FBQ00sYUFBYSxDQUFDUjtJQUN2QztBQUNKO0FBQ08sU0FBU1MsY0FBY2pCLEdBQUc7SUFDN0IsT0FBTyxJQUFJRixRQUFRRTtBQUN2QixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlRW1pdHRlci5qcz9mZDcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ2V2ZW50ZW1pdHRlcjMnO1xuZXhwb3J0IGNsYXNzIEVtaXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHVpZCkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ1aWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHVpZFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiX2VtaXR0ZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IG5ldyBFdmVudEVtaXR0ZXIoKVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgb24oZXZlbnROYW1lLCBmbikge1xuICAgICAgICB0aGlzLl9lbWl0dGVyLm9uKGV2ZW50TmFtZSwgZm4pO1xuICAgIH1cbiAgICBvbmNlKGV2ZW50TmFtZSwgZm4pIHtcbiAgICAgICAgdGhpcy5fZW1pdHRlci5vbmNlKGV2ZW50TmFtZSwgZm4pO1xuICAgIH1cbiAgICBvZmYoZXZlbnROYW1lLCBmbikge1xuICAgICAgICB0aGlzLl9lbWl0dGVyLm9mZihldmVudE5hbWUsIGZuKTtcbiAgICB9XG4gICAgZW1pdChldmVudE5hbWUsIC4uLnBhcmFtcykge1xuICAgICAgICBjb25zdCBkYXRhID0gcGFyYW1zWzBdO1xuICAgICAgICB0aGlzLl9lbWl0dGVyLmVtaXQoZXZlbnROYW1lLCB7IHVpZDogdGhpcy51aWQsIC4uLmRhdGEgfSk7XG4gICAgfVxuICAgIGxpc3RlbmVyQ291bnQoZXZlbnROYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lbWl0dGVyLmxpc3RlbmVyQ291bnQoZXZlbnROYW1lKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRW1pdHRlcih1aWQpIHtcbiAgICByZXR1cm4gbmV3IEVtaXR0ZXIodWlkKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUVtaXR0ZXIuanMubWFwIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsIkVtaXR0ZXIiLCJjb25zdHJ1Y3RvciIsInVpZCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiLCJvbiIsImV2ZW50TmFtZSIsImZuIiwiX2VtaXR0ZXIiLCJvbmNlIiwib2ZmIiwiZW1pdCIsInBhcmFtcyIsImRhdGEiLCJsaXN0ZW5lckNvdW50IiwiY3JlYXRlRW1pdHRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createEmitter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/createStorage.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStorage: () => (/* binding */ createStorage),\n/* harmony export */   getDefaultStorage: () => (/* binding */ getDefaultStorage),\n/* harmony export */   noopStorage: () => (/* binding */ noopStorage)\n/* harmony export */ });\n/* harmony import */ var _utils_deserialize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/deserialize.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js\");\n/* harmony import */ var _utils_serialize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/serialize.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js\");\n\n\nfunction createStorage(parameters) {\n    const { deserialize = _utils_deserialize_js__WEBPACK_IMPORTED_MODULE_0__.deserialize, key: prefix = \"wagmi\", serialize = _utils_serialize_js__WEBPACK_IMPORTED_MODULE_1__.serialize, storage = noopStorage } = parameters;\n    function unwrap(value) {\n        if (value instanceof Promise) return value.then((x)=>x).catch(()=>null);\n        return value;\n    }\n    return {\n        ...storage,\n        key: prefix,\n        async getItem (key, defaultValue) {\n            const value = storage.getItem(`${prefix}.${key}`);\n            const unwrapped = await unwrap(value);\n            if (unwrapped) return deserialize(unwrapped) ?? null;\n            return defaultValue ?? null;\n        },\n        async setItem (key, value) {\n            const storageKey = `${prefix}.${key}`;\n            if (value === null) await unwrap(storage.removeItem(storageKey));\n            else await unwrap(storage.setItem(storageKey, serialize(value)));\n        },\n        async removeItem (key) {\n            await unwrap(storage.removeItem(`${prefix}.${key}`));\n        }\n    };\n}\nconst noopStorage = {\n    getItem: ()=>null,\n    setItem: ()=>{},\n    removeItem: ()=>{}\n};\nfunction getDefaultStorage() {\n    const storage = (()=>{\n        if (false) {}\n        return noopStorage;\n    })();\n    return {\n        getItem (key) {\n            return storage.getItem(key);\n        },\n        removeItem (key) {\n            storage.removeItem(key);\n        },\n        setItem (key, value) {\n            try {\n                storage.setItem(key, value);\n            // silence errors by default (QuotaExceededError, SecurityError, etc.)\n            } catch  {}\n        }\n    };\n} //# sourceMappingURL=createStorage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRTtBQUNOO0FBQ3hELFNBQVNJLGNBQWNDLFVBQVU7SUFDcEMsTUFBTSxFQUFFTCxjQUFjQyw4REFBWSxFQUFFSyxLQUFLQyxTQUFTLE9BQU8sRUFBRUwsWUFBWUMsMERBQVUsRUFBRUssVUFBVUMsV0FBVyxFQUFHLEdBQUdKO0lBQzlHLFNBQVNLLE9BQU9DLEtBQUs7UUFDakIsSUFBSUEsaUJBQWlCQyxTQUNqQixPQUFPRCxNQUFNRSxJQUFJLENBQUMsQ0FBQ0MsSUFBTUEsR0FBR0MsS0FBSyxDQUFDLElBQU07UUFDNUMsT0FBT0o7SUFDWDtJQUNBLE9BQU87UUFDSCxHQUFHSCxPQUFPO1FBQ1ZGLEtBQUtDO1FBQ0wsTUFBTVMsU0FBUVYsR0FBRyxFQUFFVyxZQUFZO1lBQzNCLE1BQU1OLFFBQVFILFFBQVFRLE9BQU8sQ0FBQyxDQUFDLEVBQUVULE9BQU8sQ0FBQyxFQUFFRCxJQUFJLENBQUM7WUFDaEQsTUFBTVksWUFBWSxNQUFNUixPQUFPQztZQUMvQixJQUFJTyxXQUNBLE9BQU9sQixZQUFZa0IsY0FBYztZQUNyQyxPQUFRRCxnQkFBZ0I7UUFDNUI7UUFDQSxNQUFNRSxTQUFRYixHQUFHLEVBQUVLLEtBQUs7WUFDcEIsTUFBTVMsYUFBYSxDQUFDLEVBQUViLE9BQU8sQ0FBQyxFQUFFRCxJQUFJLENBQUM7WUFDckMsSUFBSUssVUFBVSxNQUNWLE1BQU1ELE9BQU9GLFFBQVFhLFVBQVUsQ0FBQ0Q7aUJBRWhDLE1BQU1WLE9BQU9GLFFBQVFXLE9BQU8sQ0FBQ0MsWUFBWWxCLFVBQVVTO1FBQzNEO1FBQ0EsTUFBTVUsWUFBV2YsR0FBRztZQUNoQixNQUFNSSxPQUFPRixRQUFRYSxVQUFVLENBQUMsQ0FBQyxFQUFFZCxPQUFPLENBQUMsRUFBRUQsSUFBSSxDQUFDO1FBQ3REO0lBQ0o7QUFDSjtBQUNPLE1BQU1HLGNBQWM7SUFDdkJPLFNBQVMsSUFBTTtJQUNmRyxTQUFTLEtBQVE7SUFDakJFLFlBQVksS0FBUTtBQUN4QixFQUFFO0FBQ0ssU0FBU0M7SUFDWixNQUFNZCxVQUFVLENBQUM7UUFDYixJQUFJLEtBQW9ELEVBQ3BELEVBQTJCO1FBQy9CLE9BQU9DO0lBQ1g7SUFDQSxPQUFPO1FBQ0hPLFNBQVFWLEdBQUc7WUFDUCxPQUFPRSxRQUFRUSxPQUFPLENBQUNWO1FBQzNCO1FBQ0FlLFlBQVdmLEdBQUc7WUFDVkUsUUFBUWEsVUFBVSxDQUFDZjtRQUN2QjtRQUNBYSxTQUFRYixHQUFHLEVBQUVLLEtBQUs7WUFDZCxJQUFJO2dCQUNBSCxRQUFRVyxPQUFPLENBQUNiLEtBQUtLO1lBQ3JCLHNFQUFzRTtZQUMxRSxFQUNBLE9BQU0sQ0FBRTtRQUNaO0lBQ0o7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vY3JlYXRlU3RvcmFnZS5qcz85MmE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlc2VyaWFsaXplIGFzIGRlc2VyaWFsaXplXyB9IGZyb20gJy4vdXRpbHMvZGVzZXJpYWxpemUuanMnO1xuaW1wb3J0IHsgc2VyaWFsaXplIGFzIHNlcmlhbGl6ZV8gfSBmcm9tICcuL3V0aWxzL3NlcmlhbGl6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RvcmFnZShwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBkZXNlcmlhbGl6ZSA9IGRlc2VyaWFsaXplXywga2V5OiBwcmVmaXggPSAnd2FnbWknLCBzZXJpYWxpemUgPSBzZXJpYWxpemVfLCBzdG9yYWdlID0gbm9vcFN0b3JhZ2UsIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGZ1bmN0aW9uIHVud3JhcCh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRoZW4oKHgpID0+IHgpLmNhdGNoKCgpID0+IG51bGwpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0b3JhZ2UsXG4gICAgICAgIGtleTogcHJlZml4LFxuICAgICAgICBhc3luYyBnZXRJdGVtKGtleSwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHN0b3JhZ2UuZ2V0SXRlbShgJHtwcmVmaXh9LiR7a2V5fWApO1xuICAgICAgICAgICAgY29uc3QgdW53cmFwcGVkID0gYXdhaXQgdW53cmFwKHZhbHVlKTtcbiAgICAgICAgICAgIGlmICh1bndyYXBwZWQpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlc2VyaWFsaXplKHVud3JhcHBlZCkgPz8gbnVsbDtcbiAgICAgICAgICAgIHJldHVybiAoZGVmYXVsdFZhbHVlID8/IG51bGwpO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBzZXRJdGVtKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0b3JhZ2VLZXkgPSBgJHtwcmVmaXh9LiR7a2V5fWA7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpXG4gICAgICAgICAgICAgICAgYXdhaXQgdW53cmFwKHN0b3JhZ2UucmVtb3ZlSXRlbShzdG9yYWdlS2V5KSk7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgYXdhaXQgdW53cmFwKHN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlS2V5LCBzZXJpYWxpemUodmFsdWUpKSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHJlbW92ZUl0ZW0oa2V5KSB7XG4gICAgICAgICAgICBhd2FpdCB1bndyYXAoc3RvcmFnZS5yZW1vdmVJdGVtKGAke3ByZWZpeH0uJHtrZXl9YCkpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnQgY29uc3Qgbm9vcFN0b3JhZ2UgPSB7XG4gICAgZ2V0SXRlbTogKCkgPT4gbnVsbCxcbiAgICBzZXRJdGVtOiAoKSA9PiB7IH0sXG4gICAgcmVtb3ZlSXRlbTogKCkgPT4geyB9LFxufTtcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0U3RvcmFnZSgpIHtcbiAgICBjb25zdCBzdG9yYWdlID0gKCgpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UpXG4gICAgICAgICAgICByZXR1cm4gd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgICAgICAgcmV0dXJuIG5vb3BTdG9yYWdlO1xuICAgIH0pKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0SXRlbShrZXkpIHtcbiAgICAgICAgICAgIHJldHVybiBzdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlSXRlbShrZXkpIHtcbiAgICAgICAgICAgIHN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICB9LFxuICAgICAgICBzZXRJdGVtKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIC8vIHNpbGVuY2UgZXJyb3JzIGJ5IGRlZmF1bHQgKFF1b3RhRXhjZWVkZWRFcnJvciwgU2VjdXJpdHlFcnJvciwgZXRjLilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIHsgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVTdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXNlcmlhbGl6ZSIsImRlc2VyaWFsaXplXyIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZV8iLCJjcmVhdGVTdG9yYWdlIiwicGFyYW1ldGVycyIsImtleSIsInByZWZpeCIsInN0b3JhZ2UiLCJub29wU3RvcmFnZSIsInVud3JhcCIsInZhbHVlIiwiUHJvbWlzZSIsInRoZW4iLCJ4IiwiY2F0Y2giLCJnZXRJdGVtIiwiZGVmYXVsdFZhbHVlIiwidW53cmFwcGVkIiwic2V0SXRlbSIsInN0b3JhZ2VLZXkiLCJyZW1vdmVJdGVtIiwiZ2V0RGVmYXVsdFN0b3JhZ2UiLCJ3aW5kb3ciLCJsb2NhbFN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/createStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/base.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseError: () => (/* binding */ BaseError)\n/* harmony export */ });\n/* harmony import */ var _utils_getVersion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/getVersion.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js\");\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseError_instances, _BaseError_walk;\n\nclass BaseError extends Error {\n    get docsBaseUrl() {\n        return \"https://wagmi.sh/core\";\n    }\n    get version() {\n        return (0,_utils_getVersion_js__WEBPACK_IMPORTED_MODULE_0__.getVersion)();\n    }\n    constructor(shortMessage, options = {}){\n        super();\n        _BaseError_instances.add(this);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"WagmiCoreError\"\n        });\n        const details = options.cause instanceof BaseError ? options.cause.details : options.cause?.message ? options.cause.message : options.details;\n        const docsPath = options.cause instanceof BaseError ? options.cause.docsPath || options.docsPath : options.docsPath;\n        this.message = [\n            shortMessage || \"An error occurred.\",\n            \"\",\n            ...options.metaMessages ? [\n                ...options.metaMessages,\n                \"\"\n            ] : [],\n            ...docsPath ? [\n                `Docs: ${this.docsBaseUrl}${docsPath}.html${options.docsSlug ? `#${options.docsSlug}` : \"\"}`\n            ] : [],\n            ...details ? [\n                `Details: ${details}`\n            ] : [],\n            `Version: ${this.version}`\n        ].join(\"\\n\");\n        if (options.cause) this.cause = options.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = options.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, this, fn);\n    }\n}\n_BaseError_instances = new WeakSet(), _BaseError_walk = function _BaseError_walk(err, fn) {\n    if (fn?.(err)) return err;\n    if (err.cause) return __classPrivateFieldGet(this, _BaseError_instances, \"m\", _BaseError_walk).call(this, err.cause, fn);\n    return err;\n}; //# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/config.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainNotConfiguredError: () => (/* binding */ ChainNotConfiguredError),\n/* harmony export */   ConnectorAccountNotFoundError: () => (/* binding */ ConnectorAccountNotFoundError),\n/* harmony export */   ConnectorAlreadyConnectedError: () => (/* binding */ ConnectorAlreadyConnectedError),\n/* harmony export */   ConnectorChainMismatchError: () => (/* binding */ ConnectorChainMismatchError),\n/* harmony export */   ConnectorNotConnectedError: () => (/* binding */ ConnectorNotConnectedError),\n/* harmony export */   ConnectorNotFoundError: () => (/* binding */ ConnectorNotFoundError),\n/* harmony export */   ConnectorUnavailableReconnectingError: () => (/* binding */ ConnectorUnavailableReconnectingError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\");\n\nclass ChainNotConfiguredError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Chain not configured.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ChainNotConfiguredError\"\n        });\n    }\n}\nclass ConnectorAlreadyConnectedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector already connected.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorAlreadyConnectedError\"\n        });\n    }\n}\nclass ConnectorNotConnectedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector not connected.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorNotConnectedError\"\n        });\n    }\n}\nclass ConnectorNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Connector not found.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorNotFoundError\"\n        });\n    }\n}\nclass ConnectorAccountNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ address, connector }){\n        super(`Account \"${address}\" not found for connector \"${connector.name}\".`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorAccountNotFoundError\"\n        });\n    }\n}\nclass ConnectorChainMismatchError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connectionChainId, connectorChainId }){\n        super(`The current chain of the connector (id: ${connectorChainId}) does not match the connection's chain (id: ${connectionChainId}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${connectorChainId}`,\n                `Expected Chain ID: ${connectionChainId}`\n            ]\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorChainMismatchError\"\n        });\n    }\n}\nclass ConnectorUnavailableReconnectingError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connector }){\n        super(`Connector \"${connector.name}\" unavailable while reconnecting.`, {\n            details: [\n                \"During the reconnection step, the only connector methods guaranteed to be available are: `id`, `name`, `type`, `uid`.\",\n                \"All other methods are not guaranteed to be available until reconnection completes and connectors are fully restored.\",\n                \"This error commonly occurs for connectors that asynchronously inject after reconnection has already started.\"\n            ].join(\" \")\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ConnectorUnavailableReconnectingError\"\n        });\n    }\n} //# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzQztBQUMvQixNQUFNQyxnQ0FBZ0NELCtDQUFTQTtJQUNsREUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNQyx1Q0FBdUNULCtDQUFTQTtJQUN6REUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNRSxtQ0FBbUNWLCtDQUFTQTtJQUNyREUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNRywrQkFBK0JYLCtDQUFTQTtJQUNqREUsYUFBYztRQUNWLEtBQUssQ0FBQztRQUNOQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNSSxzQ0FBc0NaLCtDQUFTQTtJQUN4REUsWUFBWSxFQUFFVyxPQUFPLEVBQUVDLFNBQVMsRUFBRyxDQUFFO1FBQ2pDLEtBQUssQ0FBQyxDQUFDLFNBQVMsRUFBRUQsUUFBUSwyQkFBMkIsRUFBRUMsVUFBVUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN6RVosT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPO1FBQ1g7SUFDSjtBQUNKO0FBQ08sTUFBTVEsb0NBQW9DaEIsK0NBQVNBO0lBQ3RERSxZQUFZLEVBQUVlLGlCQUFpQixFQUFFQyxnQkFBZ0IsRUFBRyxDQUFFO1FBQ2xELEtBQUssQ0FBQyxDQUFDLHdDQUF3QyxFQUFFQSxpQkFBaUIsNkNBQTZDLEVBQUVELGtCQUFrQixFQUFFLENBQUMsRUFBRTtZQUNwSUUsY0FBYztnQkFDVixDQUFDLG1CQUFtQixFQUFFRCxpQkFBaUIsQ0FBQztnQkFDeEMsQ0FBQyxtQkFBbUIsRUFBRUQsa0JBQWtCLENBQUM7YUFDNUM7UUFDTDtRQUNBZCxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0o7QUFDTyxNQUFNWSw4Q0FBOENwQiwrQ0FBU0E7SUFDaEVFLFlBQVksRUFBRVksU0FBUyxFQUFFLENBQUU7UUFDdkIsS0FBSyxDQUFDLENBQUMsV0FBVyxFQUFFQSxVQUFVQyxJQUFJLENBQUMsaUNBQWlDLENBQUMsRUFBRTtZQUNuRU0sU0FBUztnQkFDTDtnQkFDQTtnQkFDQTthQUNILENBQUNDLElBQUksQ0FBQztRQUNYO1FBQ0FuQixPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU87UUFDWDtJQUNKO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2Vycm9ycy9jb25maWcuanM/YTgzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlRXJyb3IgfSBmcm9tICcuL2Jhc2UuanMnO1xuZXhwb3J0IGNsYXNzIENoYWluTm90Q29uZmlndXJlZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0NoYWluIG5vdCBjb25maWd1cmVkLicpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQ2hhaW5Ob3RDb25maWd1cmVkRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25uZWN0b3JBbHJlYWR5Q29ubmVjdGVkRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignQ29ubmVjdG9yIGFscmVhZHkgY29ubmVjdGVkLicpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQ29ubmVjdG9yQWxyZWFkeUNvbm5lY3RlZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgQ29ubmVjdG9yTm90Q29ubmVjdGVkRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignQ29ubmVjdG9yIG5vdCBjb25uZWN0ZWQuJyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdDb25uZWN0b3JOb3RDb25uZWN0ZWRFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIENvbm5lY3Rvck5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignQ29ubmVjdG9yIG5vdCBmb3VuZC4nKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3Rvck5vdEZvdW5kRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25uZWN0b3JBY2NvdW50Tm90Rm91bmRFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBhZGRyZXNzLCBjb25uZWN0b3IsIH0pIHtcbiAgICAgICAgc3VwZXIoYEFjY291bnQgXCIke2FkZHJlc3N9XCIgbm90IGZvdW5kIGZvciBjb25uZWN0b3IgXCIke2Nvbm5lY3Rvci5uYW1lfVwiLmApO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQ29ubmVjdG9yQWNjb3VudE5vdEZvdW5kRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgY29ubmVjdGlvbkNoYWluSWQsIGNvbm5lY3RvckNoYWluSWQsIH0pIHtcbiAgICAgICAgc3VwZXIoYFRoZSBjdXJyZW50IGNoYWluIG9mIHRoZSBjb25uZWN0b3IgKGlkOiAke2Nvbm5lY3RvckNoYWluSWR9KSBkb2VzIG5vdCBtYXRjaCB0aGUgY29ubmVjdGlvbidzIGNoYWluIChpZDogJHtjb25uZWN0aW9uQ2hhaW5JZH0pLmAsIHtcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW1xuICAgICAgICAgICAgICAgIGBDdXJyZW50IENoYWluIElEOiAgJHtjb25uZWN0b3JDaGFpbklkfWAsXG4gICAgICAgICAgICAgICAgYEV4cGVjdGVkIENoYWluIElEOiAke2Nvbm5lY3Rpb25DaGFpbklkfWAsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ0Nvbm5lY3RvckNoYWluTWlzbWF0Y2hFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIENvbm5lY3RvclVuYXZhaWxhYmxlUmVjb25uZWN0aW5nRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgY29ubmVjdG9yIH0pIHtcbiAgICAgICAgc3VwZXIoYENvbm5lY3RvciBcIiR7Y29ubmVjdG9yLm5hbWV9XCIgdW5hdmFpbGFibGUgd2hpbGUgcmVjb25uZWN0aW5nLmAsIHtcbiAgICAgICAgICAgIGRldGFpbHM6IFtcbiAgICAgICAgICAgICAgICAnRHVyaW5nIHRoZSByZWNvbm5lY3Rpb24gc3RlcCwgdGhlIG9ubHkgY29ubmVjdG9yIG1ldGhvZHMgZ3VhcmFudGVlZCB0byBiZSBhdmFpbGFibGUgYXJlOiBgaWRgLCBgbmFtZWAsIGB0eXBlYCwgYHVpZGAuJyxcbiAgICAgICAgICAgICAgICAnQWxsIG90aGVyIG1ldGhvZHMgYXJlIG5vdCBndWFyYW50ZWVkIHRvIGJlIGF2YWlsYWJsZSB1bnRpbCByZWNvbm5lY3Rpb24gY29tcGxldGVzIGFuZCBjb25uZWN0b3JzIGFyZSBmdWxseSByZXN0b3JlZC4nLFxuICAgICAgICAgICAgICAgICdUaGlzIGVycm9yIGNvbW1vbmx5IG9jY3VycyBmb3IgY29ubmVjdG9ycyB0aGF0IGFzeW5jaHJvbm91c2x5IGluamVjdCBhZnRlciByZWNvbm5lY3Rpb24gaGFzIGFscmVhZHkgc3RhcnRlZC4nLFxuICAgICAgICAgICAgXS5qb2luKCcgJyksXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAnQ29ubmVjdG9yVW5hdmFpbGFibGVSZWNvbm5lY3RpbmdFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6WyJCYXNlRXJyb3IiLCJDaGFpbk5vdENvbmZpZ3VyZWRFcnJvciIsImNvbnN0cnVjdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIkNvbm5lY3RvckFscmVhZHlDb25uZWN0ZWRFcnJvciIsIkNvbm5lY3Rvck5vdENvbm5lY3RlZEVycm9yIiwiQ29ubmVjdG9yTm90Rm91bmRFcnJvciIsIkNvbm5lY3RvckFjY291bnROb3RGb3VuZEVycm9yIiwiYWRkcmVzcyIsImNvbm5lY3RvciIsIm5hbWUiLCJDb25uZWN0b3JDaGFpbk1pc21hdGNoRXJyb3IiLCJjb25uZWN0aW9uQ2hhaW5JZCIsImNvbm5lY3RvckNoYWluSWQiLCJtZXRhTWVzc2FnZXMiLCJDb25uZWN0b3JVbmF2YWlsYWJsZVJlY29ubmVjdGluZ0Vycm9yIiwiZGV0YWlscyIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/errors/connector.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProviderNotFoundError: () => (/* binding */ ProviderNotFoundError),\n/* harmony export */   SwitchChainNotSupportedError: () => (/* binding */ SwitchChainNotSupportedError)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/errors/base.js\");\n\nclass ProviderNotFoundError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(){\n        super(\"Provider not found.\");\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ProviderNotFoundError\"\n        });\n    }\n}\nclass SwitchChainNotSupportedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ connector }){\n        super(`\"${connector.name}\" does not support programmatic chain switching.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"SwitchChainNotSupportedError\"\n        });\n    }\n} //# sourceMappingURL=connector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2Nvbm5lY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFDL0IsTUFBTUMsOEJBQThCRCwrQ0FBU0E7SUFDaERFLGFBQWM7UUFDVixLQUFLLENBQUM7UUFDTkMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPO1FBQ1g7SUFDSjtBQUNKO0FBQ08sTUFBTUMscUNBQXFDVCwrQ0FBU0E7SUFDdkRFLFlBQVksRUFBRVEsU0FBUyxFQUFFLENBQUU7UUFDdkIsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFQSxVQUFVQyxJQUFJLENBQUMsZ0RBQWdELENBQUM7UUFDMUVSLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO0lBQ0o7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vZXJyb3JzL2Nvbm5lY3Rvci5qcz85NWU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VFcnJvciB9IGZyb20gJy4vYmFzZS5qcyc7XG5leHBvcnQgY2xhc3MgUHJvdmlkZXJOb3RGb3VuZEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ1Byb3ZpZGVyIG5vdCBmb3VuZC4nKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogJ1Byb3ZpZGVyTm90Rm91bmRFcnJvcidcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFN3aXRjaENoYWluTm90U3VwcG9ydGVkRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgY29ubmVjdG9yIH0pIHtcbiAgICAgICAgc3VwZXIoYFwiJHtjb25uZWN0b3IubmFtZX1cIiBkb2VzIG5vdCBzdXBwb3J0IHByb2dyYW1tYXRpYyBjaGFpbiBzd2l0Y2hpbmcuYCk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdTd2l0Y2hDaGFpbk5vdFN1cHBvcnRlZEVycm9yJ1xuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25uZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbIkJhc2VFcnJvciIsIlByb3ZpZGVyTm90Rm91bmRFcnJvciIsImNvbnN0cnVjdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIlN3aXRjaENoYWluTm90U3VwcG9ydGVkRXJyb3IiLCJjb25uZWN0b3IiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/errors/connector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/hydrate.js":
/*!******************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/hydrate.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hydrate: () => (/* binding */ hydrate)\n/* harmony export */ });\n/* harmony import */ var _actions_reconnect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions/reconnect.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/actions/reconnect.js\");\n\nfunction hydrate(config, parameters) {\n    const { initialState, reconnectOnMount } = parameters;\n    if (initialState && !config._internal.store.persist.hasHydrated()) config.setState({\n        ...initialState,\n        chainId: config.chains.some((x)=>x.id === initialState.chainId) ? initialState.chainId : config.chains[0].id,\n        connections: reconnectOnMount ? initialState.connections : new Map(),\n        status: reconnectOnMount ? \"reconnecting\" : \"disconnected\"\n    });\n    return {\n        async onMount () {\n            if (config._internal.ssr) {\n                await config._internal.store.persist.rehydrate();\n                if (config._internal.mipd) {\n                    config._internal.connectors.setState((connectors)=>{\n                        const rdnsSet = new Set();\n                        for (const connector of connectors ?? []){\n                            if (connector.rdns) {\n                                const rdnsValues = Array.isArray(connector.rdns) ? connector.rdns : [\n                                    connector.rdns\n                                ];\n                                for (const rdns of rdnsValues){\n                                    rdnsSet.add(rdns);\n                                }\n                            }\n                        }\n                        const mipdConnectors = [];\n                        const providers = config._internal.mipd?.getProviders() ?? [];\n                        for (const provider of providers){\n                            if (rdnsSet.has(provider.info.rdns)) continue;\n                            const connectorFn = config._internal.connectors.providerDetailToConnector(provider);\n                            const connector = config._internal.connectors.setup(connectorFn);\n                            mipdConnectors.push(connector);\n                        }\n                        return [\n                            ...connectors,\n                            ...mipdConnectors\n                        ];\n                    });\n                }\n            }\n            if (reconnectOnMount) (0,_actions_reconnect_js__WEBPACK_IMPORTED_MODULE_0__.reconnect)(config);\n            else if (config.storage) // Reset connections that may have been hydrated from storage.\n            config.setState((x)=>({\n                    ...x,\n                    connections: new Map()\n                }));\n        }\n    };\n} //# sourceMappingURL=hydrate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vaHlkcmF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QyxTQUFTQyxRQUFRQyxNQUFNLEVBQUVDLFVBQVU7SUFDdEMsTUFBTSxFQUFFQyxZQUFZLEVBQUVDLGdCQUFnQixFQUFFLEdBQUdGO0lBQzNDLElBQUlDLGdCQUFnQixDQUFDRixPQUFPSSxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDQyxXQUFXLElBQzNEUCxPQUFPUSxRQUFRLENBQUM7UUFDWixHQUFHTixZQUFZO1FBQ2ZPLFNBQVNULE9BQU9VLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUNDLElBQU1BLEVBQUVDLEVBQUUsS0FBS1gsYUFBYU8sT0FBTyxJQUMxRFAsYUFBYU8sT0FBTyxHQUNwQlQsT0FBT1UsTUFBTSxDQUFDLEVBQUUsQ0FBQ0csRUFBRTtRQUN6QkMsYUFBYVgsbUJBQW1CRCxhQUFhWSxXQUFXLEdBQUcsSUFBSUM7UUFDL0RDLFFBQVFiLG1CQUFtQixpQkFBaUI7SUFDaEQ7SUFDSixPQUFPO1FBQ0gsTUFBTWM7WUFDRixJQUFJakIsT0FBT0ksU0FBUyxDQUFDYyxHQUFHLEVBQUU7Z0JBQ3RCLE1BQU1sQixPQUFPSSxTQUFTLENBQUNDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDYSxTQUFTO2dCQUM5QyxJQUFJbkIsT0FBT0ksU0FBUyxDQUFDZ0IsSUFBSSxFQUFFO29CQUN2QnBCLE9BQU9JLFNBQVMsQ0FBQ2lCLFVBQVUsQ0FBQ2IsUUFBUSxDQUFDLENBQUNhO3dCQUNsQyxNQUFNQyxVQUFVLElBQUlDO3dCQUNwQixLQUFLLE1BQU1DLGFBQWFILGNBQWMsRUFBRSxDQUFFOzRCQUN0QyxJQUFJRyxVQUFVQyxJQUFJLEVBQUU7Z0NBQ2hCLE1BQU1DLGFBQWFDLE1BQU1DLE9BQU8sQ0FBQ0osVUFBVUMsSUFBSSxJQUN6Q0QsVUFBVUMsSUFBSSxHQUNkO29DQUFDRCxVQUFVQyxJQUFJO2lDQUFDO2dDQUN0QixLQUFLLE1BQU1BLFFBQVFDLFdBQVk7b0NBQzNCSixRQUFRTyxHQUFHLENBQUNKO2dDQUNoQjs0QkFDSjt3QkFDSjt3QkFDQSxNQUFNSyxpQkFBaUIsRUFBRTt3QkFDekIsTUFBTUMsWUFBWS9CLE9BQU9JLFNBQVMsQ0FBQ2dCLElBQUksRUFBRVksa0JBQWtCLEVBQUU7d0JBQzdELEtBQUssTUFBTUMsWUFBWUYsVUFBVzs0QkFDOUIsSUFBSVQsUUFBUVksR0FBRyxDQUFDRCxTQUFTRSxJQUFJLENBQUNWLElBQUksR0FDOUI7NEJBQ0osTUFBTVcsY0FBY3BDLE9BQU9JLFNBQVMsQ0FBQ2lCLFVBQVUsQ0FBQ2dCLHlCQUF5QixDQUFDSjs0QkFDMUUsTUFBTVQsWUFBWXhCLE9BQU9JLFNBQVMsQ0FBQ2lCLFVBQVUsQ0FBQ2lCLEtBQUssQ0FBQ0Y7NEJBQ3BETixlQUFlUyxJQUFJLENBQUNmO3dCQUN4Qjt3QkFDQSxPQUFPOytCQUFJSDsrQkFBZVM7eUJBQWU7b0JBQzdDO2dCQUNKO1lBQ0o7WUFDQSxJQUFJM0Isa0JBQ0FMLGdFQUFTQSxDQUFDRTtpQkFDVCxJQUFJQSxPQUFPd0MsT0FBTyxFQUNuQiw4REFBOEQ7WUFDOUR4QyxPQUFPUSxRQUFRLENBQUMsQ0FBQ0ksSUFBTztvQkFDcEIsR0FBR0EsQ0FBQztvQkFDSkUsYUFBYSxJQUFJQztnQkFDckI7UUFDUjtJQUNKO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL2h5ZHJhdGUuanM/MjdjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWNvbm5lY3QgfSBmcm9tICcuL2FjdGlvbnMvcmVjb25uZWN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBoeWRyYXRlKGNvbmZpZywgcGFyYW1ldGVycykge1xuICAgIGNvbnN0IHsgaW5pdGlhbFN0YXRlLCByZWNvbm5lY3RPbk1vdW50IH0gPSBwYXJhbWV0ZXJzO1xuICAgIGlmIChpbml0aWFsU3RhdGUgJiYgIWNvbmZpZy5faW50ZXJuYWwuc3RvcmUucGVyc2lzdC5oYXNIeWRyYXRlZCgpKVxuICAgICAgICBjb25maWcuc2V0U3RhdGUoe1xuICAgICAgICAgICAgLi4uaW5pdGlhbFN0YXRlLFxuICAgICAgICAgICAgY2hhaW5JZDogY29uZmlnLmNoYWlucy5zb21lKCh4KSA9PiB4LmlkID09PSBpbml0aWFsU3RhdGUuY2hhaW5JZClcbiAgICAgICAgICAgICAgICA/IGluaXRpYWxTdGF0ZS5jaGFpbklkXG4gICAgICAgICAgICAgICAgOiBjb25maWcuY2hhaW5zWzBdLmlkLFxuICAgICAgICAgICAgY29ubmVjdGlvbnM6IHJlY29ubmVjdE9uTW91bnQgPyBpbml0aWFsU3RhdGUuY29ubmVjdGlvbnMgOiBuZXcgTWFwKCksXG4gICAgICAgICAgICBzdGF0dXM6IHJlY29ubmVjdE9uTW91bnQgPyAncmVjb25uZWN0aW5nJyA6ICdkaXNjb25uZWN0ZWQnLFxuICAgICAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhc3luYyBvbk1vdW50KCkge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5faW50ZXJuYWwuc3NyKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgY29uZmlnLl9pbnRlcm5hbC5zdG9yZS5wZXJzaXN0LnJlaHlkcmF0ZSgpO1xuICAgICAgICAgICAgICAgIGlmIChjb25maWcuX2ludGVybmFsLm1pcGQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uZmlnLl9pbnRlcm5hbC5jb25uZWN0b3JzLnNldFN0YXRlKChjb25uZWN0b3JzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZG5zU2V0ID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBjb25uZWN0b3Igb2YgY29ubmVjdG9ycyA/PyBbXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25uZWN0b3IucmRucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZG5zVmFsdWVzID0gQXJyYXkuaXNBcnJheShjb25uZWN0b3IucmRucylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gY29ubmVjdG9yLnJkbnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogW2Nvbm5lY3Rvci5yZG5zXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCByZG5zIG9mIHJkbnNWYWx1ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJkbnNTZXQuYWRkKHJkbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWlwZENvbm5lY3RvcnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb3ZpZGVycyA9IGNvbmZpZy5faW50ZXJuYWwubWlwZD8uZ2V0UHJvdmlkZXJzKCkgPz8gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb3ZpZGVyIG9mIHByb3ZpZGVycykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZG5zU2V0Lmhhcyhwcm92aWRlci5pbmZvLnJkbnMpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb25uZWN0b3JGbiA9IGNvbmZpZy5faW50ZXJuYWwuY29ubmVjdG9ycy5wcm92aWRlckRldGFpbFRvQ29ubmVjdG9yKHByb3ZpZGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb25uZWN0b3IgPSBjb25maWcuX2ludGVybmFsLmNvbm5lY3RvcnMuc2V0dXAoY29ubmVjdG9yRm4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pcGRDb25uZWN0b3JzLnB1c2goY29ubmVjdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbLi4uY29ubmVjdG9ycywgLi4ubWlwZENvbm5lY3RvcnNdO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVjb25uZWN0T25Nb3VudClcbiAgICAgICAgICAgICAgICByZWNvbm5lY3QoY29uZmlnKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbmZpZy5zdG9yYWdlKVxuICAgICAgICAgICAgICAgIC8vIFJlc2V0IGNvbm5lY3Rpb25zIHRoYXQgbWF5IGhhdmUgYmVlbiBoeWRyYXRlZCBmcm9tIHN0b3JhZ2UuXG4gICAgICAgICAgICAgICAgY29uZmlnLnNldFN0YXRlKCh4KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAuLi54LFxuICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uczogbmV3IE1hcCgpLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHlkcmF0ZS5qcy5tYXAiXSwibmFtZXMiOlsicmVjb25uZWN0IiwiaHlkcmF0ZSIsImNvbmZpZyIsInBhcmFtZXRlcnMiLCJpbml0aWFsU3RhdGUiLCJyZWNvbm5lY3RPbk1vdW50IiwiX2ludGVybmFsIiwic3RvcmUiLCJwZXJzaXN0IiwiaGFzSHlkcmF0ZWQiLCJzZXRTdGF0ZSIsImNoYWluSWQiLCJjaGFpbnMiLCJzb21lIiwieCIsImlkIiwiY29ubmVjdGlvbnMiLCJNYXAiLCJzdGF0dXMiLCJvbk1vdW50Iiwic3NyIiwicmVoeWRyYXRlIiwibWlwZCIsImNvbm5lY3RvcnMiLCJyZG5zU2V0IiwiU2V0IiwiY29ubmVjdG9yIiwicmRucyIsInJkbnNWYWx1ZXMiLCJBcnJheSIsImlzQXJyYXkiLCJhZGQiLCJtaXBkQ29ubmVjdG9ycyIsInByb3ZpZGVycyIsImdldFByb3ZpZGVycyIsInByb3ZpZGVyIiwiaGFzIiwiaW5mbyIsImNvbm5lY3RvckZuIiwicHJvdmlkZXJEZXRhaWxUb0Nvbm5lY3RvciIsInNldHVwIiwicHVzaCIsInN0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/hydrate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepEqual: () => (/* binding */ deepEqual)\n/* harmony export */ });\n/** Forked from https://github.com/epoberezkin/fast-deep-equal */ function deepEqual(a, b) {\n    if (a === b) return true;\n    if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n        if (a.constructor !== b.constructor) return false;\n        let length;\n        let i;\n        if (Array.isArray(a) && Array.isArray(b)) {\n            length = a.length;\n            if (length !== b.length) return false;\n            for(i = length; i-- !== 0;)if (!deepEqual(a[i], b[i])) return false;\n            return true;\n        }\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n        const keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length) return false;\n        for(i = length; i-- !== 0;)if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n        for(i = length; i-- !== 0;){\n            const key = keys[i];\n            if (key && !deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    // true if both NaN, false otherwise\n    // biome-ignore lint/suspicious/noSelfCompare: <explanation>\n    return a !== a && b !== b;\n} //# sourceMappingURL=deepEqual.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVlcEVxdWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwrREFBK0QsR0FDeEQsU0FBU0EsVUFBVUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzFCLElBQUlELE1BQU1DLEdBQ04sT0FBTztJQUNYLElBQUlELEtBQUtDLEtBQUssT0FBT0QsTUFBTSxZQUFZLE9BQU9DLE1BQU0sVUFBVTtRQUMxRCxJQUFJRCxFQUFFRSxXQUFXLEtBQUtELEVBQUVDLFdBQVcsRUFDL0IsT0FBTztRQUNYLElBQUlDO1FBQ0osSUFBSUM7UUFDSixJQUFJQyxNQUFNQyxPQUFPLENBQUNOLE1BQU1LLE1BQU1DLE9BQU8sQ0FBQ0wsSUFBSTtZQUN0Q0UsU0FBU0gsRUFBRUcsTUFBTTtZQUNqQixJQUFJQSxXQUFXRixFQUFFRSxNQUFNLEVBQ25CLE9BQU87WUFDWCxJQUFLQyxJQUFJRCxRQUFRQyxRQUFRLEdBQ3JCLElBQUksQ0FBQ0wsVUFBVUMsQ0FBQyxDQUFDSSxFQUFFLEVBQUVILENBQUMsQ0FBQ0csRUFBRSxHQUNyQixPQUFPO1lBQ2YsT0FBTztRQUNYO1FBQ0EsSUFBSUosRUFBRU8sT0FBTyxLQUFLQyxPQUFPQyxTQUFTLENBQUNGLE9BQU8sRUFDdEMsT0FBT1AsRUFBRU8sT0FBTyxPQUFPTixFQUFFTSxPQUFPO1FBQ3BDLElBQUlQLEVBQUVVLFFBQVEsS0FBS0YsT0FBT0MsU0FBUyxDQUFDQyxRQUFRLEVBQ3hDLE9BQU9WLEVBQUVVLFFBQVEsT0FBT1QsRUFBRVMsUUFBUTtRQUN0QyxNQUFNQyxPQUFPSCxPQUFPRyxJQUFJLENBQUNYO1FBQ3pCRyxTQUFTUSxLQUFLUixNQUFNO1FBQ3BCLElBQUlBLFdBQVdLLE9BQU9HLElBQUksQ0FBQ1YsR0FBR0UsTUFBTSxFQUNoQyxPQUFPO1FBQ1gsSUFBS0MsSUFBSUQsUUFBUUMsUUFBUSxHQUNyQixJQUFJLENBQUNJLE9BQU9DLFNBQVMsQ0FBQ0csY0FBYyxDQUFDQyxJQUFJLENBQUNaLEdBQUdVLElBQUksQ0FBQ1AsRUFBRSxHQUNoRCxPQUFPO1FBQ2YsSUFBS0EsSUFBSUQsUUFBUUMsUUFBUSxHQUFJO1lBQ3pCLE1BQU1VLE1BQU1ILElBQUksQ0FBQ1AsRUFBRTtZQUNuQixJQUFJVSxPQUFPLENBQUNmLFVBQVVDLENBQUMsQ0FBQ2MsSUFBSSxFQUFFYixDQUFDLENBQUNhLElBQUksR0FDaEMsT0FBTztRQUNmO1FBQ0EsT0FBTztJQUNYO0lBQ0Esb0NBQW9DO0lBQ3BDLDREQUE0RDtJQUM1RCxPQUFPZCxNQUFNQSxLQUFLQyxNQUFNQTtBQUM1QixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVlcEVxdWFsLmpzPzYwOWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEZvcmtlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9lcG9iZXJlemtpbi9mYXN0LWRlZXAtZXF1YWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWVwRXF1YWwoYSwgYikge1xuICAgIGlmIChhID09PSBiKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKGEuY29uc3RydWN0b3IgIT09IGIuY29uc3RydWN0b3IpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIGxldCBsZW5ndGg7XG4gICAgICAgIGxldCBpO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhKSAmJiBBcnJheS5pc0FycmF5KGIpKSB7XG4gICAgICAgICAgICBsZW5ndGggPSBhLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChsZW5ndGggIT09IGIubGVuZ3RoKVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOylcbiAgICAgICAgICAgICAgICBpZiAoIWRlZXBFcXVhbChhW2ldLCBiW2ldKSlcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGEudmFsdWVPZiAhPT0gT2JqZWN0LnByb3RvdHlwZS52YWx1ZU9mKVxuICAgICAgICAgICAgcmV0dXJuIGEudmFsdWVPZigpID09PSBiLnZhbHVlT2YoKTtcbiAgICAgICAgaWYgKGEudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpXG4gICAgICAgICAgICByZXR1cm4gYS50b1N0cmluZygpID09PSBiLnRvU3RyaW5nKCk7XG4gICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhhKTtcbiAgICAgICAgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgICAgIGlmIChsZW5ndGggIT09IE9iamVjdC5rZXlzKGIpLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwga2V5c1tpXSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspIHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICBpZiAoa2V5ICYmICFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0pKVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLy8gdHJ1ZSBpZiBib3RoIE5hTiwgZmFsc2Ugb3RoZXJ3aXNlXG4gICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub1NlbGZDb21wYXJlOiA8ZXhwbGFuYXRpb24+XG4gICAgcmV0dXJuIGEgIT09IGEgJiYgYiAhPT0gYjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZXBFcXVhbC5qcy5tYXAiXSwibmFtZXMiOlsiZGVlcEVxdWFsIiwiYSIsImIiLCJjb25zdHJ1Y3RvciIsImxlbmd0aCIsImkiLCJBcnJheSIsImlzQXJyYXkiLCJ2YWx1ZU9mIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJrZXlzIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deepEqual.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js":
/*!****************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/deserialize.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserialize: () => (/* binding */ deserialize)\n/* harmony export */ });\nfunction deserialize(value, reviver) {\n    return JSON.parse(value, (key, value_)=>{\n        let value = value_;\n        if (value?.__type === \"bigint\") value = BigInt(value.value);\n        if (value?.__type === \"Map\") value = new Map(value.value);\n        return reviver?.(key, value) ?? value;\n    });\n} //# sourceMappingURL=deserialize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZGVzZXJpYWxpemUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLFlBQVlDLEtBQUssRUFBRUMsT0FBTztJQUN0QyxPQUFPQyxLQUFLQyxLQUFLLENBQUNILE9BQU8sQ0FBQ0ksS0FBS0M7UUFDM0IsSUFBSUwsUUFBUUs7UUFDWixJQUFJTCxPQUFPTSxXQUFXLFVBQ2xCTixRQUFRTyxPQUFPUCxNQUFNQSxLQUFLO1FBQzlCLElBQUlBLE9BQU9NLFdBQVcsT0FDbEJOLFFBQVEsSUFBSVEsSUFBSVIsTUFBTUEsS0FBSztRQUMvQixPQUFPQyxVQUFVRyxLQUFLSixVQUFVQTtJQUNwQztBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy9kZXNlcmlhbGl6ZS5qcz85NjFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBkZXNlcmlhbGl6ZSh2YWx1ZSwgcmV2aXZlcikge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlLCAoa2V5LCB2YWx1ZV8pID0+IHtcbiAgICAgICAgbGV0IHZhbHVlID0gdmFsdWVfO1xuICAgICAgICBpZiAodmFsdWU/Ll9fdHlwZSA9PT0gJ2JpZ2ludCcpXG4gICAgICAgICAgICB2YWx1ZSA9IEJpZ0ludCh2YWx1ZS52YWx1ZSk7XG4gICAgICAgIGlmICh2YWx1ZT8uX190eXBlID09PSAnTWFwJylcbiAgICAgICAgICAgIHZhbHVlID0gbmV3IE1hcCh2YWx1ZS52YWx1ZSk7XG4gICAgICAgIHJldHVybiByZXZpdmVyPy4oa2V5LCB2YWx1ZSkgPz8gdmFsdWU7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXNlcmlhbGl6ZS5qcy5tYXAiXSwibmFtZXMiOlsiZGVzZXJpYWxpemUiLCJ2YWx1ZSIsInJldml2ZXIiLCJKU09OIiwicGFyc2UiLCJrZXkiLCJ2YWx1ZV8iLCJfX3R5cGUiLCJCaWdJbnQiLCJNYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/deserialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getAction.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAction: () => (/* binding */ getAction)\n/* harmony export */ });\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */ function getAction(client, actionFn, // Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n// meaning that `actionFn.name` will not always work. For that case, the consumer\n// needs to pass the name explicitly.\nname) {\n    const action_implicit = client[actionFn.name];\n    if (typeof action_implicit === \"function\") return action_implicit;\n    const action_explicit = client[name];\n    if (typeof action_explicit === \"function\") return action_explicit;\n    return (params)=>actionFn(client, params);\n} //# sourceMappingURL=getAction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0QWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDTSxTQUFTQSxVQUFVQyxNQUFNLEVBQUVDLFFBQVEsRUFDMUMsbUZBQW1GO0FBQ25GLGlGQUFpRjtBQUNqRixxQ0FBcUM7QUFDckNDLElBQUk7SUFDQSxNQUFNQyxrQkFBa0JILE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0lBQzdDLElBQUksT0FBT0Msb0JBQW9CLFlBQzNCLE9BQU9BO0lBQ1gsTUFBTUMsa0JBQWtCSixNQUFNLENBQUNFLEtBQUs7SUFDcEMsSUFBSSxPQUFPRSxvQkFBb0IsWUFDM0IsT0FBT0E7SUFDWCxPQUFPLENBQUNDLFNBQVdKLFNBQVNELFFBQVFLO0FBQ3hDLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy9nZXRBY3Rpb24uanM/YjgxZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHJpZXZlcyBhbmQgcmV0dXJucyBhbiBhY3Rpb24gZnJvbSB0aGUgY2xpZW50IChpZiBleGlzdHMpLCBhbmQgZmFsbHNcbiAqIGJhY2sgdG8gdGhlIHRyZWUtc2hha2FibGUgYWN0aW9uLlxuICpcbiAqIFVzZWZ1bCBmb3IgZXh0cmFjdGluZyBvdmVycmlkZGVuIGFjdGlvbnMgZnJvbSBhIGNsaWVudCAoaWUuIGlmIGEgY29uc3VtZXJcbiAqIHdhbnRzIHRvIG92ZXJyaWRlIHRoZSBgc2VuZFRyYW5zYWN0aW9uYCBpbXBsZW1lbnRhdGlvbikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBY3Rpb24oY2xpZW50LCBhY3Rpb25GbiwgXG4vLyBTb21lIG1pbmlmaWVycyBkcm9wIGBGdW5jdGlvbi5wcm90b3R5cGUubmFtZWAsIG9yIHJlcGxhY2UgaXQgd2l0aCBzaG9ydCBsZXR0ZXJzLFxuLy8gbWVhbmluZyB0aGF0IGBhY3Rpb25Gbi5uYW1lYCB3aWxsIG5vdCBhbHdheXMgd29yay4gRm9yIHRoYXQgY2FzZSwgdGhlIGNvbnN1bWVyXG4vLyBuZWVkcyB0byBwYXNzIHRoZSBuYW1lIGV4cGxpY2l0bHkuXG5uYW1lKSB7XG4gICAgY29uc3QgYWN0aW9uX2ltcGxpY2l0ID0gY2xpZW50W2FjdGlvbkZuLm5hbWVdO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uX2ltcGxpY2l0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gYWN0aW9uX2ltcGxpY2l0O1xuICAgIGNvbnN0IGFjdGlvbl9leHBsaWNpdCA9IGNsaWVudFtuYW1lXTtcbiAgICBpZiAodHlwZW9mIGFjdGlvbl9leHBsaWNpdCA9PT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgcmV0dXJuIGFjdGlvbl9leHBsaWNpdDtcbiAgICByZXR1cm4gKHBhcmFtcykgPT4gYWN0aW9uRm4oY2xpZW50LCBwYXJhbXMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRBY3Rpb24iLCJjbGllbnQiLCJhY3Rpb25GbiIsIm5hbWUiLCJhY3Rpb25faW1wbGljaXQiLCJhY3Rpb25fZXhwbGljaXQiLCJwYXJhbXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getAction.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js":
/*!************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getUnit.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUnit: () => (/* binding */ getUnit)\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/constants/unit.js\");\n\nfunction getUnit(unit) {\n    if (typeof unit === \"number\") return unit;\n    if (unit === \"wei\") return 0;\n    return Math.abs(viem__WEBPACK_IMPORTED_MODULE_0__.weiUnits[unit]);\n} //# sourceMappingURL=getUnit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VW5pdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQztBQUN6QixTQUFTQyxRQUFRQyxJQUFJO0lBQ3hCLElBQUksT0FBT0EsU0FBUyxVQUNoQixPQUFPQTtJQUNYLElBQUlBLFNBQVMsT0FDVCxPQUFPO0lBQ1gsT0FBT0MsS0FBS0MsR0FBRyxDQUFDSiwwQ0FBUSxDQUFDRSxLQUFLO0FBQ2xDLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy9nZXRVbml0LmpzP2IzMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd2VpVW5pdHMgfSBmcm9tICd2aWVtJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRVbml0KHVuaXQpIHtcbiAgICBpZiAodHlwZW9mIHVuaXQgPT09ICdudW1iZXInKVxuICAgICAgICByZXR1cm4gdW5pdDtcbiAgICBpZiAodW5pdCA9PT0gJ3dlaScpXG4gICAgICAgIHJldHVybiAwO1xuICAgIHJldHVybiBNYXRoLmFicyh3ZWlVbml0c1t1bml0XSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRVbml0LmpzLm1hcCJdLCJuYW1lcyI6WyJ3ZWlVbml0cyIsImdldFVuaXQiLCJ1bml0IiwiTWF0aCIsImFicyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getUnit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js":
/*!***************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/getVersion.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVersion: () => (/* binding */ getVersion)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ \"(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\");\n\nconst getVersion = ()=>`@wagmi/core@${_version_js__WEBPACK_IMPORTED_MODULE_0__.version}`; //# sourceMappingURL=getVersion.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvZ2V0VmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUNqQyxNQUFNQyxhQUFhLElBQU0sQ0FBQyxZQUFZLEVBQUVELGdEQUFPQSxDQUFDLENBQUMsQ0FBQyxDQUN6RCxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItYXBwLy4vbm9kZV9tb2R1bGVzL0B3YWdtaS9jb3JlL2Rpc3QvZXNtL3V0aWxzL2dldFZlcnNpb24uanM/ZWU1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vdmVyc2lvbi5qcyc7XG5leHBvcnQgY29uc3QgZ2V0VmVyc2lvbiA9ICgpID0+IGBAd2FnbWkvY29yZUAke3ZlcnNpb259YDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbInZlcnNpb24iLCJnZXRWZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/getVersion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js":
/*!**************************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/serialize.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serialize: () => (/* binding */ serialize)\n/* harmony export */ });\n/**\n * Get the reference key for the circular value\n *\n * @param keys the keys to build the reference key from\n * @param cutoff the maximum number of keys to include\n * @returns the reference key\n */ function getReferenceKey(keys, cutoff) {\n    return keys.slice(0, cutoff).join(\".\") || \".\";\n}\n/**\n * Faster `Array.prototype.indexOf` implementation build for slicing / splicing\n *\n * @param array the array to match the value in\n * @param value the value to match\n * @returns the matching index, or -1\n */ function getCutoff(array, value) {\n    const { length } = array;\n    for(let index = 0; index < length; ++index){\n        if (array[index] === value) {\n            return index + 1;\n        }\n    }\n    return 0;\n}\n/**\n * Create a replacer method that handles circular values\n *\n * @param [replacer] a custom replacer to use for non-circular values\n * @param [circularReplacer] a custom replacer to use for circular methods\n * @returns the value to stringify\n */ function createReplacer(replacer, circularReplacer) {\n    const hasReplacer = typeof replacer === \"function\";\n    const hasCircularReplacer = typeof circularReplacer === \"function\";\n    const cache = [];\n    const keys = [];\n    return function replace(key, value) {\n        if (typeof value === \"object\") {\n            if (cache.length) {\n                const thisCutoff = getCutoff(cache, this);\n                if (thisCutoff === 0) {\n                    cache[cache.length] = this;\n                } else {\n                    cache.splice(thisCutoff);\n                    keys.splice(thisCutoff);\n                }\n                keys[keys.length] = key;\n                const valueCutoff = getCutoff(cache, value);\n                if (valueCutoff !== 0) {\n                    return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n                }\n            } else {\n                cache[0] = value;\n                keys[0] = key;\n            }\n        }\n        return hasReplacer ? replacer.call(this, key, value) : value;\n    };\n}\n/**\n * Stringifier that handles circular values\n *\n * Forked from https://github.com/planttheidea/fast-stringify\n *\n * @param value to stringify\n * @param [replacer] a custom replacer function for handling standard values\n * @param [indent] the number of spaces to indent the output by\n * @param [circularReplacer] a custom replacer function for handling circular values\n * @returns the stringified output\n */ function serialize(value, replacer, indent, circularReplacer) {\n    return JSON.stringify(value, createReplacer((key, value_)=>{\n        let value = value_;\n        if (typeof value === \"bigint\") value = {\n            __type: \"bigint\",\n            value: value_.toString()\n        };\n        if (value instanceof Map) value = {\n            __type: \"Map\",\n            value: Array.from(value_.entries())\n        };\n        return replacer?.(key, value) ?? value;\n    }, circularReplacer), indent ?? undefined);\n} //# sourceMappingURL=serialize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvc2VyaWFsaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQSxnQkFBZ0JDLElBQUksRUFBRUMsTUFBTTtJQUNqQyxPQUFPRCxLQUFLRSxLQUFLLENBQUMsR0FBR0QsUUFBUUUsSUFBSSxDQUFDLFFBQVE7QUFDOUM7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxVQUFVQyxLQUFLLEVBQUVDLEtBQUs7SUFDM0IsTUFBTSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Y7SUFDbkIsSUFBSyxJQUFJRyxRQUFRLEdBQUdBLFFBQVFELFFBQVEsRUFBRUMsTUFBTztRQUN6QyxJQUFJSCxLQUFLLENBQUNHLE1BQU0sS0FBS0YsT0FBTztZQUN4QixPQUFPRSxRQUFRO1FBQ25CO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxlQUFlQyxRQUFRLEVBQUVDLGdCQUFnQjtJQUM5QyxNQUFNQyxjQUFjLE9BQU9GLGFBQWE7SUFDeEMsTUFBTUcsc0JBQXNCLE9BQU9GLHFCQUFxQjtJQUN4RCxNQUFNRyxRQUFRLEVBQUU7SUFDaEIsTUFBTWQsT0FBTyxFQUFFO0lBQ2YsT0FBTyxTQUFTZSxRQUFRQyxHQUFHLEVBQUVWLEtBQUs7UUFDOUIsSUFBSSxPQUFPQSxVQUFVLFVBQVU7WUFDM0IsSUFBSVEsTUFBTVAsTUFBTSxFQUFFO2dCQUNkLE1BQU1VLGFBQWFiLFVBQVVVLE9BQU8sSUFBSTtnQkFDeEMsSUFBSUcsZUFBZSxHQUFHO29CQUNsQkgsS0FBSyxDQUFDQSxNQUFNUCxNQUFNLENBQUMsR0FBRyxJQUFJO2dCQUM5QixPQUNLO29CQUNETyxNQUFNSSxNQUFNLENBQUNEO29CQUNiakIsS0FBS2tCLE1BQU0sQ0FBQ0Q7Z0JBQ2hCO2dCQUNBakIsSUFBSSxDQUFDQSxLQUFLTyxNQUFNLENBQUMsR0FBR1M7Z0JBQ3BCLE1BQU1HLGNBQWNmLFVBQVVVLE9BQU9SO2dCQUNyQyxJQUFJYSxnQkFBZ0IsR0FBRztvQkFDbkIsT0FBT04sc0JBQ0RGLGlCQUFpQlMsSUFBSSxDQUFDLElBQUksRUFBRUosS0FBS1YsT0FBT1AsZ0JBQWdCQyxNQUFNbUIsZ0JBQzlELENBQUMsS0FBSyxFQUFFcEIsZ0JBQWdCQyxNQUFNbUIsYUFBYSxDQUFDLENBQUM7Z0JBQ3ZEO1lBQ0osT0FDSztnQkFDREwsS0FBSyxDQUFDLEVBQUUsR0FBR1I7Z0JBQ1hOLElBQUksQ0FBQyxFQUFFLEdBQUdnQjtZQUNkO1FBQ0o7UUFDQSxPQUFPSixjQUFjRixTQUFTVSxJQUFJLENBQUMsSUFBSSxFQUFFSixLQUFLVixTQUFTQTtJQUMzRDtBQUNKO0FBQ0E7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNlLFVBQVVmLEtBQUssRUFBRUksUUFBUSxFQUFFWSxNQUFNLEVBQUVYLGdCQUFnQjtJQUMvRCxPQUFPWSxLQUFLQyxTQUFTLENBQUNsQixPQUFPRyxlQUFlLENBQUNPLEtBQUtTO1FBQzlDLElBQUluQixRQUFRbUI7UUFDWixJQUFJLE9BQU9uQixVQUFVLFVBQ2pCQSxRQUFRO1lBQUVvQixRQUFRO1lBQVVwQixPQUFPbUIsT0FBT0UsUUFBUTtRQUFHO1FBQ3pELElBQUlyQixpQkFBaUJzQixLQUNqQnRCLFFBQVE7WUFBRW9CLFFBQVE7WUFBT3BCLE9BQU91QixNQUFNQyxJQUFJLENBQUNMLE9BQU9NLE9BQU87UUFBSTtRQUNqRSxPQUFPckIsV0FBV00sS0FBS1YsVUFBVUE7SUFDckMsR0FBR0ssbUJBQW1CVyxVQUFVVTtBQUNwQyxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvc2VyaWFsaXplLmpzP2YyYTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgdGhlIHJlZmVyZW5jZSBrZXkgZm9yIHRoZSBjaXJjdWxhciB2YWx1ZVxuICpcbiAqIEBwYXJhbSBrZXlzIHRoZSBrZXlzIHRvIGJ1aWxkIHRoZSByZWZlcmVuY2Uga2V5IGZyb21cbiAqIEBwYXJhbSBjdXRvZmYgdGhlIG1heGltdW0gbnVtYmVyIG9mIGtleXMgdG8gaW5jbHVkZVxuICogQHJldHVybnMgdGhlIHJlZmVyZW5jZSBrZXlcbiAqL1xuZnVuY3Rpb24gZ2V0UmVmZXJlbmNlS2V5KGtleXMsIGN1dG9mZikge1xuICAgIHJldHVybiBrZXlzLnNsaWNlKDAsIGN1dG9mZikuam9pbignLicpIHx8ICcuJztcbn1cbi8qKlxuICogRmFzdGVyIGBBcnJheS5wcm90b3R5cGUuaW5kZXhPZmAgaW1wbGVtZW50YXRpb24gYnVpbGQgZm9yIHNsaWNpbmcgLyBzcGxpY2luZ1xuICpcbiAqIEBwYXJhbSBhcnJheSB0aGUgYXJyYXkgdG8gbWF0Y2ggdGhlIHZhbHVlIGluXG4gKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIG1hdGNoXG4gKiBAcmV0dXJucyB0aGUgbWF0Y2hpbmcgaW5kZXgsIG9yIC0xXG4gKi9cbmZ1bmN0aW9uIGdldEN1dG9mZihhcnJheSwgdmFsdWUpIHtcbiAgICBjb25zdCB7IGxlbmd0aCB9ID0gYXJyYXk7XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgKytpbmRleCkge1xuICAgICAgICBpZiAoYXJyYXlbaW5kZXhdID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGluZGV4ICsgMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbi8qKlxuICogQ3JlYXRlIGEgcmVwbGFjZXIgbWV0aG9kIHRoYXQgaGFuZGxlcyBjaXJjdWxhciB2YWx1ZXNcbiAqXG4gKiBAcGFyYW0gW3JlcGxhY2VyXSBhIGN1c3RvbSByZXBsYWNlciB0byB1c2UgZm9yIG5vbi1jaXJjdWxhciB2YWx1ZXNcbiAqIEBwYXJhbSBbY2lyY3VsYXJSZXBsYWNlcl0gYSBjdXN0b20gcmVwbGFjZXIgdG8gdXNlIGZvciBjaXJjdWxhciBtZXRob2RzXG4gKiBAcmV0dXJucyB0aGUgdmFsdWUgdG8gc3RyaW5naWZ5XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJlcGxhY2VyKHJlcGxhY2VyLCBjaXJjdWxhclJlcGxhY2VyKSB7XG4gICAgY29uc3QgaGFzUmVwbGFjZXIgPSB0eXBlb2YgcmVwbGFjZXIgPT09ICdmdW5jdGlvbic7XG4gICAgY29uc3QgaGFzQ2lyY3VsYXJSZXBsYWNlciA9IHR5cGVvZiBjaXJjdWxhclJlcGxhY2VyID09PSAnZnVuY3Rpb24nO1xuICAgIGNvbnN0IGNhY2hlID0gW107XG4gICAgY29uc3Qga2V5cyA9IFtdO1xuICAgIHJldHVybiBmdW5jdGlvbiByZXBsYWNlKGtleSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGlmIChjYWNoZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0aGlzQ3V0b2ZmID0gZ2V0Q3V0b2ZmKGNhY2hlLCB0aGlzKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpc0N1dG9mZiA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZVtjYWNoZS5sZW5ndGhdID0gdGhpcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLnNwbGljZSh0aGlzQ3V0b2ZmKTtcbiAgICAgICAgICAgICAgICAgICAga2V5cy5zcGxpY2UodGhpc0N1dG9mZik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGtleXNba2V5cy5sZW5ndGhdID0ga2V5O1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlQ3V0b2ZmID0gZ2V0Q3V0b2ZmKGNhY2hlLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlQ3V0b2ZmICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBoYXNDaXJjdWxhclJlcGxhY2VyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IGNpcmN1bGFyUmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlLCBnZXRSZWZlcmVuY2VLZXkoa2V5cywgdmFsdWVDdXRvZmYpKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiBgW3JlZj0ke2dldFJlZmVyZW5jZUtleShrZXlzLCB2YWx1ZUN1dG9mZil9XWA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbMF0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICBrZXlzWzBdID0ga2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoYXNSZXBsYWNlciA/IHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSkgOiB2YWx1ZTtcbiAgICB9O1xufVxuLyoqXG4gKiBTdHJpbmdpZmllciB0aGF0IGhhbmRsZXMgY2lyY3VsYXIgdmFsdWVzXG4gKlxuICogRm9ya2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3BsYW50dGhlaWRlYS9mYXN0LXN0cmluZ2lmeVxuICpcbiAqIEBwYXJhbSB2YWx1ZSB0byBzdHJpbmdpZnlcbiAqIEBwYXJhbSBbcmVwbGFjZXJdIGEgY3VzdG9tIHJlcGxhY2VyIGZ1bmN0aW9uIGZvciBoYW5kbGluZyBzdGFuZGFyZCB2YWx1ZXNcbiAqIEBwYXJhbSBbaW5kZW50XSB0aGUgbnVtYmVyIG9mIHNwYWNlcyB0byBpbmRlbnQgdGhlIG91dHB1dCBieVxuICogQHBhcmFtIFtjaXJjdWxhclJlcGxhY2VyXSBhIGN1c3RvbSByZXBsYWNlciBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgY2lyY3VsYXIgdmFsdWVzXG4gKiBAcmV0dXJucyB0aGUgc3RyaW5naWZpZWQgb3V0cHV0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemUodmFsdWUsIHJlcGxhY2VyLCBpbmRlbnQsIGNpcmN1bGFyUmVwbGFjZXIpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUsIGNyZWF0ZVJlcGxhY2VyKChrZXksIHZhbHVlXykgPT4ge1xuICAgICAgICBsZXQgdmFsdWUgPSB2YWx1ZV87XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnKVxuICAgICAgICAgICAgdmFsdWUgPSB7IF9fdHlwZTogJ2JpZ2ludCcsIHZhbHVlOiB2YWx1ZV8udG9TdHJpbmcoKSB9O1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBNYXApXG4gICAgICAgICAgICB2YWx1ZSA9IHsgX190eXBlOiAnTWFwJywgdmFsdWU6IEFycmF5LmZyb20odmFsdWVfLmVudHJpZXMoKSkgfTtcbiAgICAgICAgcmV0dXJuIHJlcGxhY2VyPy4oa2V5LCB2YWx1ZSkgPz8gdmFsdWU7XG4gICAgfSwgY2lyY3VsYXJSZXBsYWNlciksIGluZGVudCA/PyB1bmRlZmluZWQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRSZWZlcmVuY2VLZXkiLCJrZXlzIiwiY3V0b2ZmIiwic2xpY2UiLCJqb2luIiwiZ2V0Q3V0b2ZmIiwiYXJyYXkiLCJ2YWx1ZSIsImxlbmd0aCIsImluZGV4IiwiY3JlYXRlUmVwbGFjZXIiLCJyZXBsYWNlciIsImNpcmN1bGFyUmVwbGFjZXIiLCJoYXNSZXBsYWNlciIsImhhc0NpcmN1bGFyUmVwbGFjZXIiLCJjYWNoZSIsInJlcGxhY2UiLCJrZXkiLCJ0aGlzQ3V0b2ZmIiwic3BsaWNlIiwidmFsdWVDdXRvZmYiLCJjYWxsIiwic2VyaWFsaXplIiwiaW5kZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInZhbHVlXyIsIl9fdHlwZSIsInRvU3RyaW5nIiwiTWFwIiwiQXJyYXkiLCJmcm9tIiwiZW50cmllcyIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/serialize.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js":
/*!********************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/utils/uid.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uid: () => (/* binding */ uid)\n/* harmony export */ });\nconst size = 256;\nlet index = size;\nlet buffer;\nfunction uid(length = 11) {\n    if (!buffer || index + length > size * 2) {\n        buffer = \"\";\n        index = 0;\n        for(let i = 0; i < size; i++){\n            buffer += (256 + Math.random() * 256 | 0).toString(16).substring(1);\n        }\n    }\n    return buffer.substring(index, index++ + length);\n} //# sourceMappingURL=uid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdXRpbHMvdWlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxPQUFPO0FBQ2IsSUFBSUMsUUFBUUQ7QUFDWixJQUFJRTtBQUNHLFNBQVNDLElBQUlDLFNBQVMsRUFBRTtJQUMzQixJQUFJLENBQUNGLFVBQVVELFFBQVFHLFNBQVNKLE9BQU8sR0FBRztRQUN0Q0UsU0FBUztRQUNURCxRQUFRO1FBQ1IsSUFBSyxJQUFJSSxJQUFJLEdBQUdBLElBQUlMLE1BQU1LLElBQUs7WUFDM0JILFVBQVUsQ0FBQyxNQUFPSSxLQUFLQyxNQUFNLEtBQUssTUFBTyxHQUFHQyxRQUFRLENBQUMsSUFBSUMsU0FBUyxDQUFDO1FBQ3ZFO0lBQ0o7SUFDQSxPQUFPUCxPQUFPTyxTQUFTLENBQUNSLE9BQU9BLFVBQVVHO0FBQzdDLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLWFwcC8uL25vZGVfbW9kdWxlcy9Ad2FnbWkvY29yZS9kaXN0L2VzbS91dGlscy91aWQuanM/YTM5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaXplID0gMjU2O1xubGV0IGluZGV4ID0gc2l6ZTtcbmxldCBidWZmZXI7XG5leHBvcnQgZnVuY3Rpb24gdWlkKGxlbmd0aCA9IDExKSB7XG4gICAgaWYgKCFidWZmZXIgfHwgaW5kZXggKyBsZW5ndGggPiBzaXplICogMikge1xuICAgICAgICBidWZmZXIgPSAnJztcbiAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgICAgICAgYnVmZmVyICs9ICgoMjU2ICsgTWF0aC5yYW5kb20oKSAqIDI1NikgfCAwKS50b1N0cmluZygxNikuc3Vic3RyaW5nKDEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBidWZmZXIuc3Vic3RyaW5nKGluZGV4LCBpbmRleCsrICsgbGVuZ3RoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpZC5qcy5tYXAiXSwibmFtZXMiOlsic2l6ZSIsImluZGV4IiwiYnVmZmVyIiwidWlkIiwibGVuZ3RoIiwiaSIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/utils/uid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@wagmi/core/dist/esm/version.js":
/*!******************************************************!*\
  !*** ./node_modules/@wagmi/core/dist/esm/version.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\nconst version = \"2.17.1\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsVUFBVSxTQUFTLENBQ2hDLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1hcHAvLi9ub2RlX21vZHVsZXMvQHdhZ21pL2NvcmUvZGlzdC9lc20vdmVyc2lvbi5qcz84YTk0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuMTcuMSc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@wagmi/core/dist/esm/version.js\n");

/***/ })

};
;